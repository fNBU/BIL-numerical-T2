(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Evaluate", " ", "this", " ", "cell", " ", "before", " ", "doing", " ", 
    "anything", " ", "else", " ", "in", " ", "order", " ", "to", " ", 
    "define", " ", 
    RowBox[{"functions", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Sets", " ", "all", " ", "path", " ", "names", " ", "to", " ", "be", " ", 
     "relative", " ", "to", " ", "the", " ", "directory", " ", "where", " ", 
     "this", " ", "notebook", " ", 
     RowBox[{"is", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Functions", " ", "one", " ", "can", " ", "calculate", " ", "on", " ", 
     "each", " ", "time", " ", 
     RowBox[{"frame", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<data\>\"", "/.", "timeframe"}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Pi]p", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<data\>\"", "/.", "timeframe"}], ")"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<data\>\"", "/.", "timeframe"}], ")"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Pi]q", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<data\>\"", "/.", "timeframe"}], ")"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<data\>\"", "/.", "timeframe"}], ")"}], "[", 
     RowBox[{"[", "5", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Pi]\[Lambda]", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<data\>\"", "/.", "timeframe"}], ")"}], "[", 
     RowBox[{"[", "6", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", "[", "timeframe_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"\"\<time\>\"", "/.", "timeframe"}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "[", "timeframe_", "]"}], ":=", 
    RowBox[{"1", "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", 
        RowBox[{"\[Pi]\[Lambda]", "[", "timeframe", "]"}]}], ")"}], "^", 
      "2"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"p", "[", "timeframe", "]"}], "+", 
     RowBox[{"\[Tau]", "[", "timeframe", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"\[Alpha]", "[", "timeframe", "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"p", "[", "timeframe", "]"}], "+", 
     RowBox[{
      RowBox[{"1", "/", "2"}], 
      RowBox[{"\[Lambda]", "[", "timeframe", "]"}]}], "-", 
     RowBox[{
      RowBox[{"3", "/", "2"}], 
      RowBox[{"\[Tau]", "[", "timeframe", "]"}]}], "-", 
     RowBox[{"Log", "[", "2", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ptau", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"\[Pi]p", "[", "timeframe", "]"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", 
       RowBox[{"\[Pi]\[Lambda]", "[", "timeframe", "]"}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qtau", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"p", "[", "timeframe", "]"}]}], "]"}]}], 
     RowBox[{
      RowBox[{"\[Pi]q", "[", "timeframe", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "timeframe", "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]tau", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", 
          RowBox[{"\[Pi]\[Lambda]", "[", "timeframe", "]"}]}], ")"}], "^", 
        "2"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Pi]p", "[", "timeframe", "]"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], 
           RowBox[{"p", "[", "timeframe", "]"}]}], "]"}], 
         RowBox[{
          RowBox[{"\[Pi]q", "[", "timeframe", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], 
           RowBox[{"\[Tau]", "[", "timeframe", "]"}]}], "]"}], 
         RowBox[{
          RowBox[{"spacederivative", "[", 
           RowBox[{"p", ",", "timeframe"}], "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p", "[", "timeframe", "]"}], "-", 
             RowBox[{"\[Tau]", "[", "timeframe", "]"}]}], ")"}]}], "]"}], 
         RowBox[{
          RowBox[{"spacederivative", "[", 
           RowBox[{"q", ",", "timeframe"}], "]"}], "^", "2"}]}]}], ")"}]}], 
     "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Lambda]", "[", "timeframe", "]"}], "+", 
         RowBox[{"2", 
          RowBox[{"p", "[", "timeframe", "]"}]}], "+", 
         RowBox[{"3", 
          RowBox[{"\[Tau]", "[", "timeframe", "]"}]}]}], ")"}], "/", "2"}], 
      "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vtau", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Ptau", "[", "timeframe", "]"}], "+", "1"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]tau", "[", "timeframe_", "]"}], ":=", 
    RowBox[{"Exp", "[", 
     RowBox[{"l", "[", "timeframe", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "[", "timeframe_", "]"}], ":=", 
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Pi]p", "[", "timeframe", "]"}]}], "+", 
       RowBox[{"2", 
        RowBox[{"\[Pi]\[Lambda]", "[", "timeframe", "]"}]}], "+", 
       RowBox[{
        RowBox[{"q", "[", "timeframe", "]"}], "*", 
        RowBox[{"\[Pi]q", "[", "timeframe", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", "timeframe_", "]"}], ":=", 
     RowBox[{"Mean", "[", 
      RowBox[{"-", 
       RowBox[{"\[Pi]q", "[", "timeframe", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c", "[", "tf_", "]"}], ":=", 
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Qtau", "[", "tf", "]"}], "-", 
          RowBox[{"2", 
           RowBox[{"q", "[", "tf", "]"}]}], "+", 
          RowBox[{
           RowBox[{"q", "[", "tf", "]"}], 
           RowBox[{"Vtau", "[", "tf", "]"}]}]}], ")"}], "2", " ", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}]}], "+", 
       RowBox[{
        RowBox[{"q", "[", "tf", "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Pi]p", "[", "tf", "]"}]}], "+", 
          RowBox[{"2", 
           RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}]}], "+", 
          RowBox[{
           RowBox[{"q", "[", "tf", "]"}], "*", 
           RowBox[{"\[Pi]q", "[", "tf", "]"}]}]}], ")"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Computes", " ", "a", " ", "finite"}], "-", 
     RowBox[{
     "difference", " ", "spatial", " ", "derivative", " ", "of", " ", "a", 
      " ", "function", " ", "on", " ", "a", " ", "time", " ", 
      RowBox[{"frame", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spacederivative", "=", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f", ",", "timeframe"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"temp", ",", "n", ",", "\[CapitalDelta]x"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"f", "[", "timeframe", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"Length", "[", "temp", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[CapitalDelta]x", "=", 
           RowBox[{"2", " ", 
            RowBox[{"Pi", " ", "/", " ", "n"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"temp", "=", 
           RowBox[{"Join", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "[", 
               RowBox[{"[", 
                RowBox[{"n", "-", "1"}], "]"}], "]"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"temp", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "}"}], ",", 
             "\[IndentingNewLine]", "temp", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"temp", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"temp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "\[IndentingNewLine]",
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", "/", "3"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"temp", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
                  RowBox[{"temp", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"1", "/", "12"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"temp", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "-", "2"}], "]"}], "]"}], "-", 
                  RowBox[{"temp", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "2"}], "]"}], "]"}]}], ")"}]}]}], ")"}],
              "/", "\[CapitalDelta]x"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"1", "+", "2"}], ",", 
              RowBox[{"n", "+", "2"}]}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Calculate", " ", "the", " ", 
     RowBox[{"constraint", ".", " ", "Note"}], " ", "that", " ", "this", " ", 
     "is", " ", "pointwise", " ", "in", " ", 
     RowBox[{"space", ".", " ", "This"}], " ", "should", " ", "be", " ", 
     "identically", " ", "0", " ", "for", " ", "solutions", " ", "without", 
     " ", 
     RowBox[{"error", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"galconstraint", "[", "tf_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dp", ",", "dq", ",", "d\[Lambda]"}], "}"}], ",", "\n", " ", 
      RowBox[{
       RowBox[{"dp", "=", 
        RowBox[{"spacederivative", "[", 
         RowBox[{"p", ",", "tf"}], "]"}]}], ";", "\n", " ", 
       RowBox[{"dq", "=", 
        RowBox[{"spacederivative", "[", 
         RowBox[{"q", ",", "tf"}], "]"}]}], ";", "\n", " ", 
       RowBox[{"d\[Lambda]", "=", 
        RowBox[{"spacederivative", "[", 
         RowBox[{"\[Lambda]", ",", "tf"}], "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"dp", "*", 
          RowBox[{"\[Pi]p", "[", "tf", "]"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{"dq", "*", 
          RowBox[{"\[Pi]q", "[", "tf", "]"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{"d\[Lambda]", "*", 
          RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}]}], ")"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"galconstraintavg", "[", "tf_", "]"}], ":=", 
    RowBox[{"Mean", "[", 
     RowBox[{"galconstraint", "[", "tf", "]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "More", " ", "functions", " ", "that", " ", "can", " ", "be", " ", 
     "computed", " ", "on", " ", "time", " ", 
     RowBox[{"frames", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ev", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Vtau", "[", "tf", "]"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Tau]", "[", "tf", "]"}], "-", 
          RowBox[{"\[Rho]", "[", "tf", "]"}]}], ")"}]}], "]"}], 
      RowBox[{
       RowBox[{"spacederivative", "[", 
        RowBox[{"p", ",", "tf"}], "]"}], "^", "2"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"v", "[", "tf", "]"}], "-", 
         RowBox[{"\[Tau]", "[", "tf", "]"}]}], ")"}]}], "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Qtau", "[", "tf", "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Tau]", "[", "tf", "]"}], "-", 
            RowBox[{"\[Rho]", "[", "tf", "]"}]}], ")"}]}], "]"}], 
        RowBox[{
         RowBox[{"spacederivative", "[", 
          RowBox[{"q", ",", "tf"}], "]"}], "^", "2"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"En", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Ev", "[", "tf", "]"}], "+", 
     RowBox[{"Eq", "[", "tf", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", 
     RowBox[{"En", "[", "tf", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mE", "[", "tf_", "]"}], ":=", 
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"\[Rho]", "[", "tf", "]"}], "-", 
        RowBox[{"2", 
         RowBox[{"\[Tau]", "[", "tf", "]"}]}]}], "]"}], " ", 
      RowBox[{"J", "[", "tf", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", "tf_", "]"}], ":=", 
    RowBox[{"Mean", "[", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[Rho]", "[", "tf", "]"}], "]"}], " ", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalLambda]", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], 
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{"\[Tau]", "[", "tf", "]"}]}], "+", 
         RowBox[{"\[Rho]", "[", "tf", "]"}]}], "]"}], 
       RowBox[{"Vtau", "[", "tf", "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"v", "[", "tf", "]"}], "-", 
         RowBox[{"Mean", "[", 
          RowBox[{"v", "[", "tf", "]"}], "]"}], "-", "1"}], ")"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "tf", "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"mE", "[", "tf", "]"}], "+", 
       RowBox[{"\[CapitalLambda]", "[", "tf", "]"}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y", "[", "tf_", "]"}], ":=", 
    RowBox[{"Mean", "[", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"l", "[", "tf", "]"}], "+", 
       RowBox[{"\[Rho]", "[", "tf", "]"}], "+", 
       RowBox[{"2", 
        RowBox[{"\[Tau]", "[", "tf", "]"}]}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cc", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "tf", "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"\[Tau]", "[", "tf", "]"}]}], "]"}], 
     RowBox[{
      RowBox[{"H", "[", "tf", "]"}], "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dd", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Y", "[", "tf", "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "3"}], 
       RowBox[{"\[Tau]", "[", "tf", "]"}]}], "]"}], 
     RowBox[{
      RowBox[{"H", "[", "tf", "]"}], "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ltau", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "2"}], "-", 
     RowBox[{"\[Rho]tau", "[", "tf", "]"}], "+", 
     RowBox[{
      RowBox[{"1", "/", "2"}], 
      RowBox[{"En", "[", "tf", "]"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"The", " ", "terms", " ", "from", " ", 
     RowBox[{"Beverly", "'"}], "s", " ", 
     RowBox[{"superhamiltonian", ".", " ", 
      RowBox[{"The", " ", "'"}]}], 
     RowBox[{"a", "'"}], " ", "versions", " ", "below", " ", "just", " ", 
     "have", " ", "an", " ", "extra", " ", "factor", " ", "of", " ", 
     RowBox[{"1", "/", "\[Pi]\[Lambda]"}], " ", "so", " ", "that", " ", 
     "they", " ", "are", " ", "O", 
     RowBox[{"(", "1", ")"}], " ", 
     RowBox[{"generically", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Pi]p", "[", "timeframe", "]"}], "*", 
     RowBox[{
      RowBox[{"\[Pi]p", "[", "timeframe", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "timeframe", "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hkin", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"p", "[", "tf", "]"}]}], "]"}], " ", 
     RowBox[{"\[Pi]q", "[", "tf", "]"}], "*", 
     RowBox[{
      RowBox[{"\[Pi]q", "[", "tf", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hsmall", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"2", " ", 
       RowBox[{"\[Tau]", "[", "tf", "]"}]}], "]"}], " ", 
     RowBox[{"spacederivative", "[", 
      RowBox[{"p", ",", "tf"}], "]"}], "*", 
     RowBox[{
      RowBox[{"spacederivative", "[", 
       RowBox[{"p", ",", "tf"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hcurv", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"2", " ", 
       RowBox[{"\[Tau]", "[", "tf", "]"}]}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"2", " ", 
       RowBox[{"p", "[", "tf", "]"}]}], "]"}], 
     RowBox[{"spacederivative", "[", 
      RowBox[{"q", ",", "tf"}], "]"}], "*", 
     RowBox[{
      RowBox[{"spacederivative", "[", 
       RowBox[{"q", ",", "tf"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Htwist", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "3"}], 
       RowBox[{
        RowBox[{"\[Tau]", "[", "tf", "]"}], "/", "2"}]}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Lambda]", "[", "tf", "]"}], "/", "2"}], "+", 
       RowBox[{"p", "[", "tf", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0a", "[", "timeframe_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Pi]p", "[", "timeframe", "]"}], "*", 
     RowBox[{
      RowBox[{"\[Pi]p", "[", "timeframe", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "timeframe", "]"}], "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "timeframe", "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hkina", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"p", "[", "tf", "]"}]}], "]"}], " ", 
     RowBox[{"\[Pi]q", "[", "tf", "]"}], "*", 
     RowBox[{
      RowBox[{"\[Pi]q", "[", "tf", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}], "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hsmalla", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"2", " ", 
       RowBox[{"\[Tau]", "[", "tf", "]"}]}], "]"}], " ", 
     RowBox[{"spacederivative", "[", 
      RowBox[{"p", ",", "tf"}], "]"}], "*", 
     RowBox[{
      RowBox[{"spacederivative", "[", 
       RowBox[{"p", ",", "tf"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}], "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hcurva", "[", "tf_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"2", " ", 
       RowBox[{"\[Tau]", "[", "tf", "]"}]}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"2", " ", 
       RowBox[{"p", "[", "tf", "]"}]}], "]"}], 
     RowBox[{"spacederivative", "[", 
      RowBox[{"q", ",", "tf"}], "]"}], "*", 
     RowBox[{
      RowBox[{"spacederivative", "[", 
       RowBox[{"q", ",", "tf"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}], "*", 
        RowBox[{"\[Pi]\[Lambda]", "[", "tf", "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Htwista", "[", "tf_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "3"}], 
       RowBox[{
        RowBox[{"\[Tau]", "[", "tf", "]"}], "/", "2"}]}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Lambda]", "[", "tf", "]"}], "/", "2"}], "+", 
       RowBox[{"p", "[", "tf", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "This", " ", "is", " ", "the", " ", "function", " ", "that", " ", 
      "takes", " ", "a", " ", "path", " ", "to", " ", "a", " ", "json", " ", 
      "file", " ", "and", " ", "turns", " ", "the", " ", "result", " ", 
      "into", " ", "a", " ", "Mathematica"}], "-", 
     RowBox[{"friendly", " ", 
      RowBox[{"form", ".", " ", "DO"}], " ", "NOT", " ", "USE", " ", "THIS", 
      " ", "FUNCTION", " ", 
      RowBox[{"DIRECTLY", ".", " ", "Use"}], " ", "the", " ", "function", " ",
       "apnp", " ", "defined", " ", "below", " ", 
      RowBox[{"instead", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myimport", "[", "path_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"text", ",", "timeframes"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "There", " ", "is", " ", "a", " ", "bug", " ", "with", " ", 
         "importing", " ", "json", " ", "floats", " ", "of", " ", "length", 
         " ", "greater", " ", "than", " ", "19.", " ", "See", " ", 
         RowBox[{"https", ":"}]}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
            "questions"}], "/", "163825"}], "/", "problem"}], "-", "to", "-", 
         "import", "-", "numbers", "-", "longer", "-", "than", "-", "19", "-",
          "digit", "-", "with", "-", "json", "-", "or", "-", "rawjson"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"path", ",", "\"\<Text\>\""}], "]"}], "//", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<{\>\"", "\[Rule]", "\"\<<|\>\""}], ",", 
           RowBox[{"\"\<}\>\"", "\[Rule]", "\"\<|>\>\""}], ",", 
           RowBox[{"\"\<:\>\"", "\[Rule]", "\"\<->\>\""}], ",", 
           RowBox[{"\"\<[\>\"", "\[Rule]", "\"\<{\>\""}], ",", 
           RowBox[{"\"\<]\>\"", "\[Rule]", "\"\<}\>\""}], ",", 
           RowBox[{
            RowBox[{"\"\<e+\>\"", "~~", "s_"}], "\[RuleDelayed]", 
            RowBox[{"\"\< 10^\>\"", "~~", "s"}]}], ",", 
           RowBox[{
            RowBox[{"\"\<e-\>\"", "~~", "s_"}], "\[RuleDelayed]", 
            RowBox[{"\"\< 10^-\>\"", "~~", "s"}]}]}], "}"}], "]"}]}], "//", 
       "ToExpression"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Returns", " ", "a", " ", "nice", " ", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "table", " ", "after", " ", 
     "applying", " ", "the", " ", "function", " ", "f", " ", "to", " ", "all",
      " ", "the", " ", "time", " ", 
     RowBox[{"frames", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "pairs", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pairs", "[", 
     RowBox[{"file_", ",", "f_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "timeframes"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"file", "//", "myimport"}]}], ";", "\[IndentingNewLine]", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"++", 
              RowBox[{"++", 
               RowBox[{"++", 
                RowBox[{"++", 
                 RowBox[{"++", 
                  RowBox[{"++", 
                   RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{
                    "+", "\[IndentingNewLine]", 
                    "NOTA"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
             RowBox[{"BENE", ":", " ", 
              RowBox[{"I", " ", "use", " ", "the", " ", "operator"}]}]}], " ",
             "//", " ", 
            RowBox[{"a", " ", "lot", " ", "in", " ", "my", " ", 
             RowBox[{"coding", ".", "\[IndentingNewLine]", "The"}], " ", 
             "meaning", " ", "is", " ", 
             RowBox[{"this", ":", " ", "x"}]}]}], "//", "f"}], "//", 
          RowBox[{
           RowBox[{"g", " ", "\[Equal]", " ", 
            RowBox[{
             RowBox[{"g", "[", 
              RowBox[{"f", "[", "x", "]"}], "]"}], " ", "analogous", " ", 
             "to", " ", "the", " ", "pipe"}]}], " ", "|", " ", 
           RowBox[{"in", " ", "*", "nix", " ", 
            RowBox[{"shells", ".", "\[IndentingNewLine]", "Closely"}], " ", 
            "related", " ", "is", " ", 
            RowBox[{"the", " ", "/*", " ", 
             RowBox[{"operator", ":", " ", 
              RowBox[{
               RowBox[{"f", "/*", "g"}], " ", "is", " ", "the", " ", 
               "function", " ", "which", " ", "is", " ", "the", " ", 
               "composition", " ", "of", " ", "f", " ", "and", " ", 
               RowBox[{"g", ".", "\[IndentingNewLine]", "That"}], " ", 
               "is"}]}]}]}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "/*", "g"}], ")"}], "[", "x", "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"g", "[", 
             RowBox[{"f", "[", "x", "]"}], "]"}], ".", "\[IndentingNewLine]", 
            "The"}], " ", "difference", " ", "is", " ", "that", " ", 
           RowBox[{"f", "/*", "g"}], " ", "can", " ", "be", " ", "passed", 
           " ", "around", " ", "as", " ", "a", " ", "function"}]}], ",", " ", 
         
         RowBox[{
          RowBox[{
           RowBox[{"while", " ", "f"}], "//", 
           RowBox[{"g", " ", "cannot"}]}], ";", " ", 
          RowBox[{
          "the", " ", "latter", " ", "must", " ", "be", " ", "applied", " ", 
           "to", " ", "some", " ", 
           RowBox[{"input", ".", "\[IndentingNewLine]", 
            RowBox[{"++", 
             RowBox[{"++", 
              RowBox[{"++", 
               RowBox[{"++", 
                RowBox[{"++", 
                 RowBox[{"++", 
                  RowBox[{"++", 
                   RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{"++", 
                    RowBox[{
                    "++", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"timeframes", "=", 
        RowBox[{"(", 
         RowBox[{"\"\<evolution\>\"", "/.", "data"}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Tau]", "[", "i", "]"}], ",", 
            RowBox[{"f", "[", "i", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "timeframes"}], "}"}]}], "]"}], "//", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "&"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Return", " ", "a", " ", "list", " ", "of", " ", "all", " ", "the", " ", 
     "json", " ", "files", " ", "in", " ", "the", " ", "same", " ", 
     "directory", " ", "as", " ", "the", " ", 
     RowBox[{"input", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"files", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"file", ",", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"root", ",", "dir"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dir", "=", 
           RowBox[{"DirectoryName", "[", "file", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"root", "=", 
           RowBox[{"FileBaseName", "[", "file", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"FileNames", "[", 
           RowBox[{
            RowBox[{"root", "<>", "\"\<.*.json\>\""}], ",", 
            RowBox[{"{", "dir", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"$HistoryLength", "=", "0"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{" ", 
                RowBox[{
                "The", " ", "next", " ", "few", " ", "functions", " ", "are", 
                 " ", "related", " ", "to", " ", "actually", " ", "getting", 
                 " ", "data", " ", "out", " ", "of", " ", "json", " ", 
                 RowBox[{"files", ".", " ", "Part"}], " ", "of", " ", "the", 
                 " ", "complexity", " ", "is", " ", "related", " ", "to", " ", 
                 RowBox[{"memoization", ".", " ", "There"}], " ", "is", " ", 
                 "the", " ", 
                 RowBox[{
                 "logic", ":", " ", "\[IndentingNewLine]", "  ", "1"}]}], 
                ")"}], " ", "myimport", " ", "gets", " ", "data", " ", "from",
                " ", "a", " ", "file", " ", "and", " ", "returns", " ", "it", 
               " ", "as", " ", "an", " ", "array"}], ",", " ", 
              RowBox[{"but", " ", "it", " ", 
               RowBox[{"doesn", "'"}], "t", " ", "memoize", " ", "what", " ", 
               "is", " ", "returned"}], ",", " ", 
              RowBox[{
               RowBox[{"so", " ", "if", " ", "we", " ", "keep", " ", "re"}], 
               "-", 
               RowBox[{
               "evaluating", " ", "the", " ", "same", " ", "function", " ", 
                "on", " ", "the", " ", "same", " ", "file"}]}], ",", " ", 
              RowBox[{
              "it", " ", "takes", " ", "the", " ", "time", " ", "to", " ", 
               "read", " ", "the", " ", "file", " ", "from", " ", "disk", " ",
                "each", " ", 
               RowBox[{"time", ".", "\[IndentingNewLine]", "  ", "2"}]}]}], 
             ")"}], " ", "pairshm", " ", "is", " ", "a", " ", "memoized", " ",
             "version", " ", "of", " ", 
            RowBox[{"myimport", ":", " ", 
             RowBox[{
             "if", " ", "we", " ", "call", " ", "it", " ", "on", " ", "the", 
              " ", "same", " ", "file", " ", "with", " ", "the", " ", "same", 
              " ", "function"}]}]}], ",", " ", 
           RowBox[{
            RowBox[{"it", " ", 
             RowBox[{"doesn", "'"}], "t", " ", "read", " ", "the", " ", 
             "file", " ", 
             RowBox[{"again", ".", " ", "The"}], " ", "line", " ", 
             RowBox[{"<<", "\"\<pairshm.mx\>\""}]}], ";", " ", 
            RowBox[{
            "reads", " ", "previously", " ", "memoized", " ", "values", " ", 
             "from", " ", "a", " ", "file", " ", "when", " ", "we", " ", 
             "open", " ", "the", " ", "notebook", " ", 
             RowBox[{"again", ".", "\[IndentingNewLine]", "  ", "3"}]}]}]}], 
          ")"}], " ", "The", " ", "underlying", " ", "files", " ", "might", 
         " ", "change", " ", 
         RowBox[{"(", 
          RowBox[{
          "as", " ", "we", " ", "evaluate", " ", "for", " ", "longer", " ", 
           "times"}], ")"}], " ", "so", " ", "we", " ", "want", " ", "to", 
         " ", "load", " ", "them", " ", "anew", " ", "if", " ", "they", " ", 
         "have", " ", "changed"}], ",", " ", 
        RowBox[{
        "so", " ", "pairsm", " ", "gets", " ", "the", " ", "size", " ", "and",
          " ", "date", " ", "of", " ", "the", " ", "file", " ", "and", " ", 
         "makes", " ", "pairshm", " ", "get", " ", "it", " ", "again", " ", 
         "if", " ", "these", " ", "values", " ", "have", " ", 
         RowBox[{"chaged", ".", "\[IndentingNewLine]", "  ", "4"}]}]}], ")"}],
       " ", "All", " ", "the", " ", "previous", " ", "functions", " ", "only",
       " ", "act", " ", "on", " ", "a", " ", "single", " ", "file"}], ",", 
     " ", 
     RowBox[{
     "but", " ", "the", " ", "data", " ", "may", " ", "be", " ", "split", " ",
       "up", " ", "between", " ", "many", " ", 
      RowBox[{"files", ".", " ", "The"}], " ", "function", " ", "apnp", " ", 
      "looks", " ", "for", " ", "other", " ", "files", " ", "in", " ", "the", 
      " ", "same", " ", "directory", " ", "for", " ", "the", " ", "given", 
      " ", "run", " ", "and", " ", "loads", " ", "the", " ", "data", " ", 
      "for", " ", "all", " ", "of", " ", "them"}], ",", " ", 
     RowBox[{
     "then", " ", "combines", " ", "it", " ", "and", " ", "sorts", " ", "by", 
      " ", 
      RowBox[{"time", ".", " ", "This"}], " ", "is", " ", "the", " ", 
      "function", " ", "you", " ", "should", " ", "actually", " ", "call", 
      " ", "to", " ", "get", " ", "a", " ", "list", " ", "of", " ", "time", 
      " ", 
      RowBox[{"frames", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "pairshm", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<<", "\"\<pairshm.mx\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pairshm", "[", 
     RowBox[{"file_", ",", "f_", ",", "size_", ",", "date_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"pairshm", "[", 
      RowBox[{"file", ",", "f", ",", "size", ",", "date"}], "]"}], "=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"data", ",", "timeframes"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PrintTemporary", "[", "file", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"pairshm", "//", "DownValues"}], "//", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "&"}], "]"}]}], "//", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "#", "]"}], ",", 
               RowBox[{"___", "~~", "file", "~~", "___"}]}], "]"}], "&"}], 
            "]"}]}], "//", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"StringMatchQ", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "#", "]"}], ",", 
              RowBox[{"___", "~~", 
               RowBox[{"ToString", "[", "f", "]"}], "~~", "___"}]}], "]"}], 
            "&"}], "]"}]}], "//", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "=."}], ")"}], "&"}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Clear", " ", "previous", " ", "memoizations", " ", "for", " ", 
          "this", " ", "function", " ", "and", " ", "file", " ", "if", " ", 
          "they", " ", 
          RowBox[{"exist", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"file", "//", "myimport"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"timeframes", "=", 
         RowBox[{"(", 
          RowBox[{"\"\<evolution\>\"", "/.", "data"}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Tau]", "[", "i", "]"}], ",", 
            RowBox[{"f", "[", "i", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "timeframes"}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "pairsm", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pairsm", "[", 
      RowBox[{"file_", ",", "f_"}], "]"}], ":=", 
     RowBox[{"pairshm", "[", 
      RowBox[{"file", ",", "f", ",", 
       RowBox[{"file", "//", "FileByteCount"}], ",", 
       RowBox[{
        RowBox[{"file", "//", "FileDate"}], "//", "UnixTime"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"files2", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"file", ",", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"root", ",", "dir", ",", "reses", ",", "filenames"}], "}"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dir", "=", 
           RowBox[{"DirectoryName", "[", "file", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"root", "=", 
           RowBox[{"FileBaseName", "[", "file", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"filenames", "=", 
           RowBox[{"FileNames", "[", 
            RowBox[{
             RowBox[{"root", "<>", "\"\<_*.*.json\>\""}], ",", 
             RowBox[{"{", "dir", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"reses", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"filenames", "//", 
              RowBox[{"Map", "[", 
               RowBox[{"StringReplace", "[", 
                RowBox[{
                 RowBox[{
                 "__", "~~", "\"\<_\>\"", "~~", "s__", "~~", "\"\<.\>\"", "~~",
                   "__", "~~", "\"\<.json\>\""}], "\[RuleDelayed]", "s"}], 
                "]"}], "]"}]}], "//", "Union"}], "//", 
            RowBox[{"SortBy", "[", 
             RowBox[{
              RowBox[{"ToExpression", "[", "#", "]"}], "&"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"reses", "//", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"filenames", ",", 
               RowBox[{"StringMatchQ", "[", 
                RowBox[{
                "dir", "~~", "root", "~~", "\"\<_\>\"", "~~", "#", "~~", 
                 "\"\<.\>\"", "~~", "__", "~~", "\"\<.json\>\""}], "]"}]}], 
              "]"}], "&"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "apnp", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"apnp", "[", 
     RowBox[{"file_", ",", "f_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"files", ",", "out"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"files", "=", 
        RowBox[{
         RowBox[{"files2", "[", "file", "]"}], "//", "Flatten"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"out", "=", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"j", "\[Rule]", 
            RowBox[{"pairsm", "[", 
             RowBox[{"j", ",", "f"}], "]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "files"}], "}"}]}], "]"}], "//", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"files2", "[", "file", "]"}], "/.", "out"}], ")"}], "//", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}], "]"}]}], "//", 
        RowBox[{"Map", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], "]"}], "]"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dir", "=", "\"\<../long_runs/\>\""}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"for", " ", "the", " ", "notebook"}], ",", " ", 
      RowBox[{
      "set", " ", "the", " ", "location", " ", "where", " ", "the", " ", 
       "runs", " ", "are", " ", 
       RowBox[{"stored", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"resolutions", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Which", " ", "resolutions", " ", "to", " ", "look", " ", 
        RowBox[{"for", ".", " ", "1"}]}], " ", "\[Rule]", " ", "512"}], " ", 
      ",", " ", 
      RowBox[{"2", " ", "\[Rule]", " ", "1024"}], " ", ",", " ", "..."}], " ",
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{"twidth", "=", "5"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "When", " ", "generating", " ", "tables", " ", "of", " ", "plots"}], 
      ",", " ", 
      RowBox[{
      "how", " ", "many", " ", "columns", " ", "should", " ", "there", " ", 
       RowBox[{"be", "?"}]}]}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7520896109680653`*^9, 3.752089653373251*^9}, {
   3.752089691552359*^9, 3.752089750756206*^9}, {3.75256809498672*^9, 
   3.752568184204886*^9}, {3.752568368651731*^9, 3.752568380937261*^9}, {
   3.7525688169949408`*^9, 3.75256884997053*^9}, {3.752569066096657*^9, 
   3.752569073575943*^9}, {3.752569245327517*^9, 3.752569333272485*^9}, {
   3.752569662987392*^9, 3.75256967453366*^9}, {3.752570014677032*^9, 
   3.7525700151571207`*^9}, {3.7525701205233803`*^9, 3.752570127922389*^9}, {
   3.75257024970899*^9, 3.7525703225681257`*^9}, {3.752570687030093*^9, 
   3.752570729258144*^9}, {3.752576648259585*^9, 3.752576662351396*^9}, {
   3.7527502306723633`*^9, 3.752750238895652*^9}, {3.75275047386374*^9, 
   3.752750491071991*^9}, {3.752750601597542*^9, 3.7527506422137003`*^9}, 
   3.752752724440419*^9, 3.752878304003096*^9, {3.752878390934134*^9, 
   3.7528783914834957`*^9}, {3.752880098065292*^9, 3.752880130683941*^9}, {
   3.752968555477796*^9, 3.752968582202938*^9}, {3.753175948309228*^9, 
   3.753175981807271*^9}, {3.75317603267837*^9, 3.753176068087269*^9}, {
   3.753266053363961*^9, 3.7532661205339117`*^9}, {3.753266213206283*^9, 
   3.753266214437614*^9}, {3.753374209760379*^9, 3.7533742203700733`*^9}, {
   3.753392412238146*^9, 3.753392430147533*^9}, {3.7533969102104063`*^9, 
   3.7533969292870626`*^9}, {3.7535104984896917`*^9, 
   3.7535105949346333`*^9}, {3.753778637505396*^9, 3.753778674827923*^9}, {
   3.7825607810311604`*^9, 3.78256078638225*^9}, {3.782560818715542*^9, 
   3.78256085226864*^9}, {3.7848004417153*^9, 3.784800443625194*^9}, {
   3.784933666876297*^9, 3.784933684275436*^9}, {3.78493381165939*^9, 
   3.784933839160636*^9}, {3.784934702729147*^9, 3.784934707044264*^9}, 
   3.784935070822978*^9, {3.7875691647138433`*^9, 3.78756917874727*^9}, {
   3.787569348536661*^9, 3.787569377444107*^9}, {3.787912282272709*^9, 
   3.787912283511012*^9}, {3.787912353912862*^9, 3.787912356886709*^9}, {
   3.7879124026030483`*^9, 3.787912407393177*^9}, {3.78990057592598*^9, 
   3.789900579202651*^9}, {3.789900735468396*^9, 3.78990075380295*^9}, {
   3.789998441444437*^9, 3.78999844767426*^9}, {3.79034173740814*^9, 
   3.790341739574607*^9}, 3.79204804040376*^9, {3.794560231152574*^9, 
   3.7945602518019047`*^9}, 3.794566059226632*^9, 3.794663038286099*^9, 
   3.79471860685855*^9, {3.796798351726027*^9, 3.7967985162748137`*^9}, 
   3.7975238147554607`*^9, {3.7977529880068073`*^9, 3.7977530145602903`*^9}, {
   3.7977530460550337`*^9, 3.797753055080789*^9}, 3.7984422398106537`*^9, 
   3.800085104917512*^9, {3.804593233369071*^9, 3.804593233601974*^9}, 
   3.806804246916535*^9, {3.8168548647075367`*^9, 3.81685504150482*^9}, {
   3.8169477616992273`*^9, 3.816947900414689*^9}, {3.816948016877316*^9, 
   3.8169480193354483`*^9}, 3.822072894803011*^9, 3.822137479683012*^9, {
   3.8221445954494762`*^9, 3.8221446027809668`*^9}, 3.822233285221483*^9, {
   3.823172196288239*^9, 3.823172197522496*^9}, 3.824387958156275*^9, {
   3.8321451210132647`*^9, 3.832145122128017*^9}, 3.832145174384983*^9, {
   3.832145338885858*^9, 3.832145662854196*^9}, {3.8321456949212303`*^9, 
   3.8321458997033377`*^9}, {3.832145966167028*^9, 3.8321462106520576`*^9}, {
   3.83214627415312*^9, 3.832146460577285*^9}, {3.832146516508844*^9, 
   3.8321465495312967`*^9}, {3.8321465865164824`*^9, 
   3.8321465868601093`*^9}, {3.832146640314157*^9, 3.832147238229103*^9}, {
   3.8321475616791887`*^9, 
   3.83214756220741*^9}},ExpressionUUID->"af8e8cc1-2654-4124-bf90-\
9883e8ef16cd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "type", ",", "filenames", ",", "runs", ",", "filess", ",", "k", ",", 
      "print", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filenames", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*t_*.1.json\>\"", ",", 
        RowBox[{"{", "dir", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"runs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"filenames", "//", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"dir", "<>", "\"\<t_\>\""}], "~~", "typeandnum__", "~~", 
            "\"\<_\>\"", "~~", "__", "~~", "\"\<.json\>\""}], "\[Rule]", 
           "typeandnum"}], "]"}]}], "//", "Union"}], "//", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"ToExpression", "[", "#", "]"}], "&"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"runs", "//", "Length"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "runs", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tmp", "=", "\[IndentingNewLine]", 
           RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", "  ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"For", " ", "each", " ", "run"}], "..."}], " ", 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"filee", "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"apnp", "[", "  ", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "...", " ", "get", " ", "all", " ", "the", " ", "data", 
                    " ", "from", " ", "all", " ", "the", " ", "files"}], " ", 
                    "..."}], " ", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "dir", "<>", "\"\<t_\>\"", "<>", "filee", "<>", 
                    "\"\<.json\>\""}], "\[IndentingNewLine]", ",", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "galconstraint", "/*", "Abs", "/*", "Max", "/*", 
                    "Log10"}], "\[IndentingNewLine]", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}], 
                    RowBox[{"Ev", "[", "#", "]"}]}], "]"}]}], "&"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}], 
                    RowBox[{"Eq", "[", "#", "]"}]}], "]"}]}], "&"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"l", "[", "#", "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "/", "2"}], "]"}]}], ")"}], "]"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]", "[", "#", "]"}], "/", "4"}], "]"}]}], 
                    "&"}], "\[IndentingNewLine]", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]", "[", "#", "]"}], "-", 
                    RowBox[{
                    RowBox[{"\[Tau]", "[", "#", "]"}], "/", "2"}]}], ")"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}], "/", 
                    RowBox[{"Mean", "[", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}], "]"}]}], 
                    "&"}]}], "\[IndentingNewLine]", "}"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "...", " ", "and", " ", "apply", " ", "the", " ", 
                    "function", " ", "I", " ", "select", " ", "from", " ", 
                    "this", " ", "little", " ", "list"}], " ", "..."}], " ", 
                    "*)"}], "\[IndentingNewLine]", "]"}], "//", 
                  RowBox[{
                   RowBox[{"ListPlot", "[", "  ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"...", " ", "then", " ", "plot", " ", "it"}], " ",
                     "..."}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "resolutions", "]"}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "30"}], "}"}], ",", "All"}], "}"}]}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"PointSize", "[", 
                    RowBox[{"1", "/", "64"}], "]"}]}], "\[IndentingNewLine]", 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", 
                    RowBox[{"1", "/", "twidth"}], " ", "]"}]}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{"filee", ",", 
                    RowBox[{"Background", "\[Rule]", "LightYellow"}]}], "]"}],
                     ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{".8", ",", ".2"}], "}"}], "]"}]}], "]"}]}], " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "...", " ", "with", " ", "a", " ", "nice", " ", "label", 
                    " ", "of", " ", "the", " ", "name", " ", "of", " ", "the",
                     " ", "run"}], " ", "..."}], " ", "*)"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"AxesLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<\[Tau]\>\"", ",", "\"\<\>\""}], "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "&"}]}]}], 
                "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"filee", ",", "runs"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ProgressIndicator", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"FirstPosition", "[", 
                    RowBox[{"runs", ",", "filee"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"runs", "//", "Length"}]}], "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", 
                   RowBox[{"1", "/", "2"}], "]"}]}]}], "]"}], ",", "filee"}], 
              "}"}]}], "]"}]}], ";", 
          RowBox[{"(*", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tmp", "//", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{"Export", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<_rho.png\>\""}],
                  ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "&"}], 
              "]"}]}], ";"}], "*)"}], " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "uncomment", " ", "the", " ", "stuff", " ", "to", " ", "the", " ", 
            "left", " ", "if", " ", 
            RowBox[{"you", "'"}], "d", " ", "like", " ", "to", " ", "write", 
            " ", "images", " ", "of", " ", "the", " ", "plots", " ", "to", 
            " ", "the", " ", 
            RowBox[{"disk", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"tmp", "//", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "&"}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", 
          RowBox[{"UpTo", "[", "twidth", "]"}]}], "]"}], "&"}]}], "//", 
      "TableForm"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "...", " ", "and", " ", "make", " ", "a", " ", "nice", " ", "grid", " ", 
     "of", " ", "all", " ", "the", " ", "plots", " ", "for", " ", "the", " ", 
     
     RowBox[{"runs", "."}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"path", "=", "\"\<pairshm.mx\>\""}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DumpSave", "[", 
     RowBox[{"path", ",", "pairshm"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"RunProcess", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<ls\>\"", ",", "\"\<-lh\>\"", ",", "path"}], "}"}], ",", 
      "\"\<StandardOutput\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.787402687586659*^9, 3.7874026875955257`*^9}, {
   3.7875649322001047`*^9, 3.787564936528254*^9}, 3.787564973819789*^9, {
   3.787570465874172*^9, 3.787570501296517*^9}, {3.78757060105527*^9, 
   3.787570608932605*^9}, {3.7875707023602543`*^9, 3.787570706633956*^9}, {
   3.78757075823757*^9, 3.787570778446725*^9}, 3.787570862533249*^9, 
   3.787570962633864*^9, {3.787572719588249*^9, 3.787572726813645*^9}, {
   3.787910953998214*^9, 3.787911053970935*^9}, {3.787911296024452*^9, 
   3.7879113156939373`*^9}, {3.78791509336232*^9, 3.7879151044555387`*^9}, {
   3.787918653980504*^9, 3.787918659353894*^9}, {3.787998451899494*^9, 
   3.7879984791750298`*^9}, {3.78800748031623*^9, 3.788007489181097*^9}, {
   3.7880081538101053`*^9, 3.7880082810740633`*^9}, {3.788008346400022*^9, 
   3.788008423095806*^9}, {3.788008711401766*^9, 3.788008711579777*^9}, 
   3.7880106887928877`*^9, {3.788159970129116*^9, 3.788159972419598*^9}, {
   3.788165978075128*^9, 3.788166016011805*^9}, 3.7881661204259377`*^9, {
   3.788166217494267*^9, 3.788166255290381*^9}, 3.788166292002223*^9, 
   3.788166388941375*^9, {3.7881664544186583`*^9, 3.7881664548324223`*^9}, 
   3.7881665746920757`*^9, 3.788166614645461*^9, 3.788166710674774*^9, {
   3.7881667815940027`*^9, 3.788166782398959*^9}, {3.788166854060636*^9, 
   3.788166854245289*^9}, {3.7881669185764217`*^9, 3.788166923428005*^9}, {
   3.788166979560822*^9, 3.788166979920361*^9}, {3.788167025502542*^9, 
   3.788167038847604*^9}, 3.78816740331249*^9, 3.7881681908589497`*^9, 
   3.7881683882935543`*^9, 3.788168471614326*^9, {3.788168759739654*^9, 
   3.788168760805497*^9}, {3.788170830764954*^9, 3.7881708312616987`*^9}, 
   3.7885860706099453`*^9, 3.788596928498007*^9, {3.7885971343823338`*^9, 
   3.788597138698155*^9}, {3.7885972155583773`*^9, 3.788597218734453*^9}, {
   3.78859731079883*^9, 3.7885973127437563`*^9}, 3.788598417702485*^9, 
   3.7885995898040524`*^9, {3.788599666295525*^9, 3.788599671737133*^9}, 
   3.788599945840487*^9, 3.788601293674067*^9, 3.788601591030847*^9, {
   3.7886023922009573`*^9, 3.788602392700675*^9}, 3.7886035268156548`*^9, 
   3.788603609162224*^9, {3.788603764462076*^9, 3.788603765518187*^9}, {
   3.788603824199071*^9, 3.788603824742559*^9}, 3.788605233545683*^9, {
   3.7886052746187363`*^9, 3.7886052753802557`*^9}, 3.788605456017557*^9, 
   3.7886064510205173`*^9, 3.7886090487543077`*^9, {3.788951369288364*^9, 
   3.788951370150976*^9}, {3.788952019157188*^9, 3.788952019634128*^9}, {
   3.7889565654048643`*^9, 3.7889565673173018`*^9}, {3.788966638763013*^9, 
   3.788966638890917*^9}, {3.7889666724192057`*^9, 3.7889666732363567`*^9}, {
   3.7889667220772448`*^9, 3.788966728305314*^9}, {3.788966773278665*^9, 
   3.788966773830393*^9}, {3.788966812950386*^9, 3.788966813535425*^9}, {
   3.788966966838852*^9, 3.788966974930176*^9}, {3.78896723317844*^9, 
   3.788967235682687*^9}, {3.788967525367771*^9, 3.788967525654924*^9}, {
   3.788967572223288*^9, 3.788967609212336*^9}, {3.788967655176235*^9, 
   3.7889677342555428`*^9}, {3.7889677931382008`*^9, 3.788967880600597*^9}, {
   3.78897003392122*^9, 3.7889700749650908`*^9}, {3.788970123392251*^9, 
   3.7889701432838287`*^9}, {3.7889736621493387`*^9, 3.788973688895561*^9}, {
   3.788973746231349*^9, 3.788973764774263*^9}, 3.788973799980978*^9, {
   3.788975062095133*^9, 3.7889750701275806`*^9}, {3.788975106608685*^9, 
   3.788975108535371*^9}, {3.78898284641396*^9, 3.788982865164538*^9}, {
   3.7889829336956997`*^9, 3.7889829341790133`*^9}, {3.788983254358116*^9, 
   3.788983254555274*^9}, {3.788983318466343*^9, 3.7889833222704077`*^9}, {
   3.78898433249955*^9, 3.788984340828413*^9}, {3.7889843881284657`*^9, 
   3.7889843883039093`*^9}, {3.788985389066506*^9, 3.788985397780992*^9}, {
   3.789033557424477*^9, 3.7890335729140463`*^9}, {3.789037605825938*^9, 
   3.7890376064214287`*^9}, 3.789040493064225*^9, {3.78904485982561*^9, 
   3.789044864008252*^9}, {3.78904883921251*^9, 3.789048846417233*^9}, {
   3.7890489727000093`*^9, 3.789048972720127*^9}, {3.789054443964075*^9, 
   3.789054445407197*^9}, {3.789062030296805*^9, 3.789062034062849*^9}, {
   3.7890673786130867`*^9, 3.789067382877653*^9}, {3.7890697231492023`*^9, 
   3.789069729827107*^9}, {3.789136835333377*^9, 3.789136835662183*^9}, {
   3.789142592712207*^9, 3.7891425954757547`*^9}, 3.789205083047625*^9, {
   3.789206068560073*^9, 3.789206073527597*^9}, 3.789469337287552*^9, {
   3.789469731510754*^9, 3.789469734777092*^9}, {3.789471056839172*^9, 
   3.789471057127091*^9}, 3.789474750891745*^9, 3.789560320291113*^9, {
   3.7895660912753897`*^9, 3.789566093372251*^9}, {3.789579686274757*^9, 
   3.789579686398445*^9}, {3.789584282808242*^9, 3.789584283614727*^9}, 
   3.789624320570486*^9, {3.7896379086253843`*^9, 3.78963791277143*^9}, {
   3.7896380070011663`*^9, 3.7896380209062634`*^9}, {3.789638067453286*^9, 
   3.7896380897537813`*^9}, {3.78963845305468*^9, 3.789638486216556*^9}, {
   3.789645617676964*^9, 3.789645619425825*^9}, {3.789645769464336*^9, 
   3.789645770333992*^9}, {3.789646234458088*^9, 3.789646260401017*^9}, {
   3.789646413126905*^9, 3.789646413275839*^9}, 3.789646533438648*^9, {
   3.7896497241848927`*^9, 3.789649724380739*^9}, {3.789649830707759*^9, 
   3.789649833935377*^9}, {3.789649883005427*^9, 3.789649894729528*^9}, {
   3.789650172154254*^9, 3.7896501876402407`*^9}, {3.7896515838575907`*^9, 
   3.789651592622694*^9}, 3.7896517626310987`*^9, 3.78965594750097*^9, {
   3.789674468765318*^9, 3.7896744690338783`*^9}, {3.789674902730641*^9, 
   3.78967493413374*^9}, {3.789675014717453*^9, 3.7896750447911253`*^9}, {
   3.789675105459177*^9, 3.7896751094921083`*^9}, 3.7896768773849077`*^9, {
   3.7897280962288427`*^9, 3.789728100154271*^9}, {3.7897306155219316`*^9, 
   3.789730615645782*^9}, {3.789731609220563*^9, 3.7897316488979473`*^9}, {
   3.789732256615676*^9, 3.789732262711812*^9}, {3.7898786178454857`*^9, 
   3.789878618528956*^9}, {3.789880225793682*^9, 3.789880229898161*^9}, {
   3.789880774626742*^9, 3.789880797061104*^9}, 3.789880830933826*^9, {
   3.789881854790093*^9, 3.78988185885993*^9}, {3.789882408118194*^9, 
   3.789882419529416*^9}, {3.789882766635551*^9, 3.789882766846364*^9}, 
   3.7898840120443*^9, {3.789888757229185*^9, 3.789888759519104*^9}, {
   3.789896812870945*^9, 3.7898968151008997`*^9}, {3.78989689099056*^9, 
   3.789896908773625*^9}, 3.789896968537166*^9, {3.7898971670684223`*^9, 
   3.789897171603269*^9}, 3.7898972395740232`*^9, 3.789899531108898*^9, {
   3.7899109572936172`*^9, 3.7899109833635273`*^9}, {3.789984974577462*^9, 
   3.789984992145875*^9}, {3.789985698975347*^9, 3.789985701280663*^9}, 
   3.789986870563849*^9, {3.7899874066267853`*^9, 3.789987407104313*^9}, {
   3.7899874406455793`*^9, 3.789987478434258*^9}, {3.789987520104691*^9, 
   3.789987549153989*^9}, {3.7899878480909643`*^9, 3.789987854277493*^9}, {
   3.789988080586611*^9, 3.789988084868579*^9}, {3.789988393767042*^9, 
   3.789988396502551*^9}, {3.78998881108913*^9, 3.789988816708499*^9}, 
   3.790064230490893*^9, 3.7900819355447407`*^9, {3.790081986326062*^9, 
   3.790082016937241*^9}, {3.790240409870075*^9, 3.7902404139150133`*^9}, {
   3.7902404499460278`*^9, 3.7902404726980762`*^9}, 3.79026653881874*^9, 
   3.7902746342087517`*^9, {3.790275056323525*^9, 3.7902750874060698`*^9}, {
   3.7902756050402946`*^9, 3.7902756243213177`*^9}, {3.790276314183627*^9, 
   3.790276317594162*^9}, 3.7902769746252747`*^9, {3.790278046079371*^9, 
   3.7902780492009163`*^9}, {3.790280507887513*^9, 3.79028051237938*^9}, {
   3.790282995570519*^9, 3.790283001972939*^9}, {3.7902857115925426`*^9, 
   3.7902857157003317`*^9}, {3.790290073108048*^9, 3.790290075921158*^9}, {
   3.790317123145104*^9, 3.79031712611551*^9}, {3.7903171728553247`*^9, 
   3.7903171762963047`*^9}, {3.7903172265348787`*^9, 3.790317229957932*^9}, {
   3.7903172622319307`*^9, 3.790317265937395*^9}, {3.7903173048126297`*^9, 
   3.790317308697357*^9}, {3.790317461795533*^9, 3.790317465050324*^9}, {
   3.79031761480768*^9, 3.790317617695694*^9}, {3.790317655899353*^9, 
   3.790317659287815*^9}, {3.790317704491618*^9, 3.790317709239551*^9}, {
   3.790317818199731*^9, 3.790317822335555*^9}, {3.790317945464086*^9, 
   3.7903179487434464`*^9}, {3.790318104285159*^9, 3.790318107296151*^9}, {
   3.790318177047819*^9, 3.790318181746667*^9}, {3.790319118046207*^9, 
   3.790319124201755*^9}, {3.790319229209239*^9, 3.7903192378591146`*^9}, 
   3.790319599247617*^9, {3.79032663783108*^9, 3.790326640383885*^9}, {
   3.790326685226995*^9, 3.790326688691409*^9}, {3.790326824401616*^9, 
   3.79032682780474*^9}, {3.790327153950976*^9, 3.7903271571957006`*^9}, {
   3.790329581435981*^9, 3.7903295856423407`*^9}, 3.790330010491385*^9, {
   3.790330162826878*^9, 3.790330196347535*^9}, {3.790330233030018*^9, 
   3.79033029518052*^9}, {3.790330330404635*^9, 3.790330368215352*^9}, 
   3.7903304038388233`*^9, {3.7903307928960114`*^9, 3.7903308207295103`*^9}, {
   3.790330904483883*^9, 3.790330941806069*^9}, {3.790331564638595*^9, 
   3.790331568928356*^9}, 3.790331794304291*^9, {3.790341012611429*^9, 
   3.790341018892385*^9}, {3.790343051078113*^9, 3.790343057893033*^9}, 
   3.790346254418441*^9, {3.790346317387599*^9, 3.790346317940154*^9}, 
   3.790348112202264*^9, 3.790350584676805*^9, {3.7903558463150063`*^9, 
   3.79035585141966*^9}, {3.790355902083205*^9, 3.790355910972631*^9}, {
   3.790355992401992*^9, 3.7903560914193983`*^9}, 3.790356158508129*^9, 
   3.79036019786491*^9, 3.790363522519614*^9, 3.790366438751539*^9, 
   3.79036873353874*^9, {3.790372490309849*^9, 3.790372505593721*^9}, {
   3.790410171819125*^9, 3.790410185865273*^9}, 3.7904102723586082`*^9, 
   3.7904106384556513`*^9, 3.7904107077989693`*^9, {3.790410752756586*^9, 
   3.790410753158683*^9}, 3.790410805353671*^9, 3.790410853713222*^9, 
   3.7904109063086023`*^9, 3.7904109654948683`*^9, 3.7904110230902863`*^9, 
   3.790411076557766*^9, {3.790411140253058*^9, 3.790411146776846*^9}, {
   3.790413231563674*^9, 3.7904132321667557`*^9}, {3.790414249698485*^9, 
   3.790414257096253*^9}, {3.7904166557041883`*^9, 3.790416655984556*^9}, 
   3.790420352453472*^9, {3.790447388784519*^9, 3.790447395421877*^9}, 
   3.790447509010559*^9, 3.790447759726288*^9, {3.790448787122732*^9, 
   3.790448824816492*^9}, {3.790449049392391*^9, 3.7904490542057667`*^9}, 
   3.790449186842022*^9, {3.790450301927137*^9, 3.790450302295849*^9}, {
   3.790452513095174*^9, 3.790452524100581*^9}, 3.790452566110015*^9, 
   3.7904526031445923`*^9, 3.7904526415219107`*^9, 3.790452719223008*^9, 
   3.790452765703888*^9, 3.7904528006205397`*^9, 3.7904535645688343`*^9, 
   3.790453891715188*^9, 3.790454579785225*^9, {3.790456087124159*^9, 
   3.79045609185013*^9}, {3.7904561600970078`*^9, 3.790456188092843*^9}, {
   3.790494158762792*^9, 3.7904941590619287`*^9}, 3.790495063362047*^9, {
   3.7905002349982767`*^9, 3.790500235319004*^9}, 3.7905006248741407`*^9, {
   3.790502612833775*^9, 3.7905026131270533`*^9}, 3.790502748125738*^9, {
   3.79051427721192*^9, 3.790514283510645*^9}, {3.7905143657853727`*^9, 
   3.790514366999011*^9}, 3.790514543879929*^9, {3.79051500190453*^9, 
   3.790515002406026*^9}, {3.790522226868792*^9, 3.790522235343996*^9}, {
   3.790522982224462*^9, 3.790522982559009*^9}, 3.790523307079756*^9, {
   3.790525278442952*^9, 3.7905252792809267`*^9}, 3.790539451073412*^9, {
   3.7905738176996813`*^9, 3.790573831702396*^9}, 3.790574024669305*^9, 
   3.7905758673858356`*^9, {3.790869914407929*^9, 3.790869921369773*^9}, {
   3.790875469489243*^9, 3.790875483557858*^9}, {3.790875633579294*^9, 
   3.790875633999992*^9}, 3.790875939967689*^9, 3.790890963319565*^9, {
   3.790892603899534*^9, 3.7908926215170937`*^9}, {3.790927542734001*^9, 
   3.790927547215952*^9}, {3.790927646703043*^9, 3.790927647327586*^9}, 
   3.790927726855489*^9, {3.790927802867155*^9, 3.790927803366317*^9}, 
   3.790942117431403*^9, 3.790997435463872*^9, {3.791029870446994*^9, 
   3.7910298783770447`*^9}, 3.791030184423154*^9, 3.791030714570347*^9, {
   3.7910315249985437`*^9, 3.791031539890727*^9}, {3.791033602015004*^9, 
   3.79103360233813*^9}, {3.791270833340909*^9, 3.791270833589172*^9}, {
   3.791270932712338*^9, 3.791270940335269*^9}, {3.7912715082648983`*^9, 
   3.791271512825684*^9}, {3.791277544076494*^9, 3.791277544314818*^9}, {
   3.791277715626782*^9, 3.791277718792153*^9}, 3.791279300769256*^9, {
   3.791287084635846*^9, 3.791287089997188*^9}, 3.791287810367436*^9, {
   3.791288043088719*^9, 3.791288046564012*^9}, {3.791483763672038*^9, 
   3.791483764364758*^9}, {3.791484074312142*^9, 3.791484101609004*^9}, {
   3.791488289286356*^9, 3.79148828960012*^9}, {3.791488481280431*^9, 
   3.79148848576295*^9}, {3.7917003157767553`*^9, 3.79170031607736*^9}, {
   3.791701245488504*^9, 3.79170125150788*^9}, 3.791701293709673*^9, {
   3.791710553923236*^9, 3.791710557769475*^9}, {3.791710998505168*^9, 
   3.791711003035236*^9}, 3.791882918864913*^9, {3.791883379278487*^9, 
   3.791883384645493*^9}, 3.791883486730915*^9, {3.791883594739833*^9, 
   3.7918836009083242`*^9}, 3.791883861501595*^9, 3.791884154187984*^9, {
   3.7918848420607157`*^9, 3.791884847583321*^9}, {3.791884903816784*^9, 
   3.79188490388321*^9}, 3.791884986852201*^9, {3.791886637319943*^9, 
   3.7918866405923567`*^9}, 3.791887325566679*^9, {3.79198205395413*^9, 
   3.79198207009797*^9}, 3.79198236021255*^9, {3.79198288940674*^9, 
   3.791982901304204*^9}, {3.792012006084262*^9, 3.792012026124333*^9}, {
   3.792012503898793*^9, 3.792012504286173*^9}, {3.7920476004860888`*^9, 
   3.792047605974955*^9}, {3.792168343506908*^9, 3.792168351714012*^9}, {
   3.792168382286848*^9, 3.792168392016159*^9}, {3.792168561861919*^9, 
   3.792168565154751*^9}, {3.792168749651869*^9, 3.7921687592832727`*^9}, 
   3.792168951010116*^9, {3.7921692402769003`*^9, 3.792169241314974*^9}, {
   3.792227814627812*^9, 3.792227815621735*^9}, 3.792228061133835*^9, {
   3.792228261961344*^9, 3.7922282718519087`*^9}, 3.792228409050707*^9, {
   3.792228458092291*^9, 3.792228461678924*^9}, {3.792228571382327*^9, 
   3.792228576985694*^9}, 3.792228705420869*^9, {3.792228882780134*^9, 
   3.792228886564745*^9}, {3.7922289482593527`*^9, 3.792228948529941*^9}, 
   3.792229092089737*^9, {3.792229633974142*^9, 3.7922296418238487`*^9}, 
   3.792229780833948*^9, 3.7922299652890387`*^9, {3.7922535485736313`*^9, 
   3.792253635637765*^9}, {3.792307606809623*^9, 3.7923076069139833`*^9}, {
   3.792307954390019*^9, 3.792307965751658*^9}, {3.792401343195422*^9, 
   3.792401343435337*^9}, {3.7924017132113867`*^9, 3.792401716076397*^9}, {
   3.7924017914598494`*^9, 3.79240180436833*^9}, 3.792401946107573*^9, {
   3.792402022884553*^9, 3.7924020301630507`*^9}, 3.7924021060944757`*^9, 
   3.792402239784876*^9, {3.792402405368388*^9, 3.792402415451263*^9}, 
   3.7924025990898046`*^9, 3.792402659031417*^9, 3.792402951699407*^9, 
   3.792403010866728*^9, {3.792403143408284*^9, 3.792403201320325*^9}, {
   3.792403255748802*^9, 3.7924032661949787`*^9}, 3.7924034234947987`*^9, 
   3.7924035155013723`*^9, {3.792403809757265*^9, 3.792403810295492*^9}, {
   3.792750887758663*^9, 3.792750892864183*^9}, {3.792837288337125*^9, 
   3.79283728844063*^9}, 3.792837757975636*^9, 3.793624794012705*^9, {
   3.793648926661635*^9, 3.793648927286154*^9}, {3.793649175561273*^9, 
   3.7936491787608852`*^9}, 3.7936494217094507`*^9, 3.793649474851466*^9, 
   3.793649615888604*^9, {3.7936497625027523`*^9, 3.793649766696837*^9}, 
   3.793649897659601*^9, {3.793650005082425*^9, 3.793650005204464*^9}, {
   3.7936501244859953`*^9, 3.793650124610579*^9}, {3.793651453776926*^9, 
   3.793651454022331*^9}, {3.7936515926987953`*^9, 3.793651592898151*^9}, {
   3.7936529109778223`*^9, 3.7936529117201557`*^9}, {3.793655274940404*^9, 
   3.793655275247363*^9}, {3.793689664558847*^9, 3.7936896652523537`*^9}, {
   3.793694441927631*^9, 3.793694442609459*^9}, {3.7936993735782223`*^9, 
   3.793699373815271*^9}, {3.793702496817912*^9, 3.793702540943112*^9}, 
   3.793702586482502*^9, {3.793712132442403*^9, 3.7937121481248083`*^9}, {
   3.7937188960503798`*^9, 3.793718896209934*^9}, {3.7937189423047867`*^9, 
   3.793718967967042*^9}, {3.793719144963683*^9, 3.793719147453841*^9}, {
   3.793719888622649*^9, 3.793719895247225*^9}, 3.793720037698406*^9, 
   3.7937200783902283`*^9, {3.793720121260762*^9, 3.793720121387151*^9}, 
   3.793720230531171*^9, {3.793720275656795*^9, 3.7937202757430573`*^9}, 
   3.793720393601653*^9, {3.7937296889308968`*^9, 3.7937297081670647`*^9}, {
   3.793729738837598*^9, 3.79372990115615*^9}, {3.793729959154921*^9, 
   3.793729959258068*^9}, {3.793730011424273*^9, 3.793730015006399*^9}, 
   3.793785653990624*^9, {3.793785896655405*^9, 3.793785918468948*^9}, 
   3.79378598727814*^9, {3.793786060503703*^9, 3.7937860606618443`*^9}, {
   3.793792606998872*^9, 3.793792607255188*^9}, {3.793792784929471*^9, 
   3.7937927938569317`*^9}, {3.793796588938237*^9, 3.793796589328404*^9}, {
   3.793797274983046*^9, 3.793797275121642*^9}, {3.7937987515008698`*^9, 
   3.793798754325162*^9}, {3.7938131507900553`*^9, 3.79381315492605*^9}, {
   3.793813369390049*^9, 3.793813369825611*^9}, 3.793814538704174*^9, {
   3.793814573000383*^9, 3.793814573398272*^9}, {3.793823330669478*^9, 
   3.79382333102765*^9}, {3.793856171503357*^9, 3.793856174603326*^9}, 
   3.7938596023452272`*^9, {3.793859778260745*^9, 3.7938597784700317`*^9}, {
   3.793890575695694*^9, 3.793890576309525*^9}, {3.7939459867634573`*^9, 
   3.7939459869515877`*^9}, {3.793946279926803*^9, 3.793946295608954*^9}, 
   3.7939493792269287`*^9, 3.7939901148809032`*^9, {3.794030142929913*^9, 
   3.79403014859546*^9}, 3.7940324481809464`*^9, {3.7943373723084908`*^9, 
   3.794337384121537*^9}, {3.7943376688009863`*^9, 3.794337669052899*^9}, {
   3.794377158027598*^9, 3.794377158331205*^9}, {3.794397198899387*^9, 
   3.794397200818787*^9}, {3.794397461152055*^9, 3.794397461429248*^9}, {
   3.7947189938451233`*^9, 3.794718994142902*^9}, {3.794719290691895*^9, 
   3.7947192939430523`*^9}, {3.794757009358714*^9, 3.794757009626556*^9}, 
   3.794814926133141*^9, {3.794843999910231*^9, 3.794844017554191*^9}, {
   3.79566747373929*^9, 3.795667521947069*^9}, {3.795667611488749*^9, 
   3.795667650722065*^9}, {3.7956676941702433`*^9, 3.795667775146778*^9}, {
   3.795751344883587*^9, 3.795751346900066*^9}, {3.795847333504037*^9, 
   3.795847333856429*^9}, {3.7958474535019827`*^9, 3.795847469571823*^9}, 
   3.7958475313023987`*^9, {3.795851416626993*^9, 3.795851424587298*^9}, {
   3.7958514581962547`*^9, 3.79585145833916*^9}, 3.795851499241332*^9, {
   3.795937369935103*^9, 3.79593739757126*^9}, {3.795945506454164*^9, 
   3.795945523529454*^9}, {3.795974183593151*^9, 3.795974204563937*^9}, 
   3.795974968594576*^9, {3.795975024605953*^9, 3.795975025165078*^9}, {
   3.796113686101747*^9, 3.796113694063389*^9}, {3.796122759109437*^9, 
   3.796122780904236*^9}, {3.796123795725993*^9, 3.7961237958427134`*^9}, 
   3.7961238390809727`*^9, {3.79619474020506*^9, 3.796194751486759*^9}, {
   3.79619478227706*^9, 3.79619481704287*^9}, {3.796196245830961*^9, 
   3.7961962526532507`*^9}, {3.796196542258606*^9, 3.796196582402075*^9}, {
   3.7961966282593*^9, 3.796196629182493*^9}, {3.7961967119247217`*^9, 
   3.796196736242825*^9}, {3.79620497216031*^9, 3.796204974265493*^9}, {
   3.7963844813652678`*^9, 3.7963844971266947`*^9}, {3.796447204176094*^9, 
   3.796447208015905*^9}, {3.796530038467739*^9, 3.7965300490712347`*^9}, 
   3.796530088972039*^9, 3.7965302719808397`*^9, {3.796530374648821*^9, 
   3.796530378444792*^9}, {3.7966352311476192`*^9, 3.796635234385112*^9}, 
   3.7966497703983383`*^9, {3.79664987722119*^9, 3.796649904911703*^9}, 
   3.796650015056142*^9, {3.796722851283757*^9, 3.796722851768186*^9}, {
   3.796725527012821*^9, 3.796725527281255*^9}, 3.796725567296912*^9, {
   3.796725627827683*^9, 3.7967257541409903`*^9}, {3.796725788773712*^9, 
   3.796725813115881*^9}, 3.796790472631611*^9, {3.796808530652404*^9, 
   3.796808534660077*^9}, {3.796808592346116*^9, 3.796808600712628*^9}, {
   3.796808746638176*^9, 3.796808774767355*^9}, {3.796808818069859*^9, 
   3.796808842562253*^9}, 3.79680890801534*^9, {3.7968099242433167`*^9, 
   3.796809932144535*^9}, {3.796810124049481*^9, 3.796810186286127*^9}, 
   3.7968107531877403`*^9, {3.796810954894947*^9, 3.796810964863776*^9}, {
   3.796810995654929*^9, 3.796811050806678*^9}, {3.796811085465866*^9, 
   3.796811085690596*^9}, {3.7968111367879667`*^9, 3.796811140742112*^9}, {
   3.796811183913227*^9, 3.796811184218252*^9}, {3.796811220190208*^9, 
   3.7968112455722933`*^9}, 3.7968126192201443`*^9, {3.796835603675235*^9, 
   3.7968356138977127`*^9}, {3.796840507518723*^9, 3.7968405462805758`*^9}, 
   3.796841295902823*^9, 3.796842239851905*^9, {3.796876524120139*^9, 
   3.796876524233655*^9}, {3.796878356275943*^9, 3.7968783589689407`*^9}, {
   3.796880016273075*^9, 3.796880019158781*^9}, 3.796918345725519*^9, {
   3.796919470082862*^9, 3.796919475636332*^9}, {3.796925130599825*^9, 
   3.7969251342159033`*^9}, {3.7971414210368834`*^9, 3.797141438182637*^9}, {
   3.7971458104995003`*^9, 3.797145810764793*^9}, {3.797227881909602*^9, 
   3.7972278909269857`*^9}, {3.797228282031048*^9, 3.797228285289362*^9}, {
   3.797228403263253*^9, 3.797228403384348*^9}, 3.797228817309753*^9, {
   3.7972288669922333`*^9, 3.797229168426877*^9}, 3.7972291991925983`*^9, 
   3.797229232000373*^9, {3.79722929249364*^9, 3.797229293045451*^9}, {
   3.797229332603717*^9, 3.797229359062735*^9}, {3.797229450555148*^9, 
   3.7972294561830597`*^9}, {3.797230178886998*^9, 3.7972301821761513`*^9}, {
   3.7972302272521152`*^9, 3.797230242489333*^9}, 3.7972489570327597`*^9, {
   3.797415131933793*^9, 3.7974151372343607`*^9}, {3.7974158690141582`*^9, 
   3.797416019738894*^9}, {3.797416563132615*^9, 3.797416572788032*^9}, {
   3.7974173946531687`*^9, 3.797417395196582*^9}, 3.7974553455781107`*^9, 
   3.797496417007441*^9, {3.797501938050774*^9, 3.797501954296502*^9}, {
   3.79750218266437*^9, 3.7975021829318933`*^9}, {3.797588379621047*^9, 
   3.797588388814736*^9}, {3.7975884259241734`*^9, 3.7975884392177362`*^9}, {
   3.797588665348284*^9, 3.79758868060118*^9}, 3.797656974145179*^9, {
   3.7977528826915817`*^9, 3.797752900747175*^9}, {3.7977530488895607`*^9, 
   3.7977530606704407`*^9}, {3.797753091809538*^9, 3.7977532527329073`*^9}, {
   3.797753387379842*^9, 3.7977534183715057`*^9}, {3.7977534541147127`*^9, 
   3.797753483877017*^9}, {3.7977535214819403`*^9, 3.7977535520966473`*^9}, {
   3.797753652183297*^9, 3.7977540792840433`*^9}, {3.797754124752386*^9, 
   3.797754125185157*^9}, {3.79775416395263*^9, 3.797754433039976*^9}, {
   3.797754467977346*^9, 3.797754474042906*^9}, 3.797754507533237*^9, 
   3.7977817163832703`*^9, {3.7978142008190947`*^9, 3.797814232293955*^9}, {
   3.7978193510833263`*^9, 3.797819988038281*^9}, {3.797820054336809*^9, 
   3.797820058628377*^9}, {3.797820094702496*^9, 3.797820094953493*^9}, {
   3.797820127194285*^9, 3.797820127456491*^9}, {3.797820164965394*^9, 
   3.797820186062522*^9}, {3.797820225508731*^9, 3.797820255816922*^9}, {
   3.797820290594046*^9, 3.797820291080482*^9}, {3.797820327048789*^9, 
   3.797820349064604*^9}, {3.797820391535585*^9, 3.7978203919187317`*^9}, {
   3.797820436035358*^9, 3.797820436245434*^9}, {3.797820475359858*^9, 
   3.797820489604987*^9}, {3.797820532978775*^9, 3.79782058790292*^9}, {
   3.797820629074823*^9, 3.797820638787096*^9}, {3.7978206764021063`*^9, 
   3.7978206949338713`*^9}, {3.797820736858083*^9, 3.79782075508739*^9}, {
   3.797820786580612*^9, 3.797820787100216*^9}, {3.797820829483141*^9, 
   3.797820829970583*^9}, {3.797820869631349*^9, 3.7978208757967176`*^9}, {
   3.797820922821097*^9, 3.797820928892357*^9}, {3.797820977969885*^9, 
   3.797820978290764*^9}, {3.797821022624051*^9, 3.797821027549543*^9}, {
   3.797838536480771*^9, 3.797838539996376*^9}, {3.797840154681817*^9, 
   3.797840156405118*^9}, {3.7978402237547417`*^9, 3.797840224182475*^9}, {
   3.7978402551695633`*^9, 3.797840255529685*^9}, {3.797840287614952*^9, 
   3.797840287866583*^9}, {3.797840323930406*^9, 3.797840324257103*^9}, {
   3.797840359122048*^9, 3.797840389447221*^9}, {3.797840425236676*^9, 
   3.7978404254795103`*^9}, {3.7978404599674263`*^9, 3.797840463999546*^9}, {
   3.7978405167297087`*^9, 3.797840593867955*^9}, {3.79784063403855*^9, 
   3.797840665081087*^9}, {3.797872177490569*^9, 3.797872201993729*^9}, {
   3.797910409450962*^9, 3.7979104277694798`*^9}, {3.7979104660651627`*^9, 
   3.7979105522262173`*^9}, {3.797910736423072*^9, 3.79791075846157*^9}, {
   3.797910856445725*^9, 3.797910884077423*^9}, {3.79791093339324*^9, 
   3.7979117180197*^9}, {3.7979117500746183`*^9, 3.79791175415359*^9}, {
   3.7979714415630627`*^9, 3.797971500821754*^9}, {3.798187603636239*^9, 
   3.7981876190665817`*^9}, {3.798187656128606*^9, 3.798187701974081*^9}, {
   3.798187743177984*^9, 3.798187743640256*^9}, {3.7981877922486057`*^9, 
   3.798187816001824*^9}, {3.798187852097999*^9, 3.798187853760754*^9}, {
   3.79818788889307*^9, 3.79818788936042*^9}, {3.7981879285057592`*^9, 
   3.798187928855988*^9}, {3.798187977510882*^9, 3.7981879778506613`*^9}, {
   3.822026682001293*^9, 3.822026756601387*^9}, {3.822026818707409*^9, 
   3.822026853014183*^9}, 3.8220269245022707`*^9, {3.822026954733026*^9, 
   3.822026960442786*^9}, {3.822026999221596*^9, 3.822027122537183*^9}, {
   3.822027190029503*^9, 3.822027328061569*^9}, {3.822027447358219*^9, 
   3.8220274482477827`*^9}, {3.822027580845174*^9, 3.822027594924273*^9}, 
   3.822027875086483*^9, 3.822027931763383*^9, 3.822028182118431*^9, {
   3.822030348168824*^9, 3.822030384015921*^9}, {3.8220304242364683`*^9, 
   3.8220304707040443`*^9}, {3.8220319147318687`*^9, 3.822031918508813*^9}, {
   3.82203600759063*^9, 3.8220360301873903`*^9}, 3.82203806829932*^9, {
   3.822038178776844*^9, 3.822038251316937*^9}, {3.8220383064286003`*^9, 
   3.8220383285861883`*^9}, {3.82203836467015*^9, 3.822038389631919*^9}, {
   3.822038563196116*^9, 3.82203857843324*^9}, 3.8220390318217983`*^9, {
   3.822048880570088*^9, 3.822048880896072*^9}, {3.8220624755036592`*^9, 
   3.822062505220747*^9}, 3.822064127662264*^9, 3.822071801902739*^9, {
   3.822071930006131*^9, 3.822071988213204*^9}, 3.822072398332934*^9, {
   3.822072606618704*^9, 3.8220726078595457`*^9}, 3.8220729928582153`*^9, 
   3.822073302308206*^9, 3.822111796106967*^9, {3.8221180963079023`*^9, 
   3.822118134284935*^9}, 3.822122194071887*^9, {3.822122227426729*^9, 
   3.8221222327209167`*^9}, {3.822122294719284*^9, 3.822122302237752*^9}, {
   3.8221224605924873`*^9, 3.822122461506338*^9}, 3.822122992820929*^9, 
   3.8221230948975163`*^9, {3.8221231545960083`*^9, 3.822123192407351*^9}, {
   3.822123622003951*^9, 3.822123638411714*^9}, {3.822124658291072*^9, 
   3.8221246668720293`*^9}, 3.822126280660981*^9, {3.822126351097415*^9, 
   3.822126365291301*^9}, {3.82212675483044*^9, 3.822126762624989*^9}, 
   3.822129443906246*^9, 3.822130483521536*^9, {3.8221307640736217`*^9, 
   3.82213076763384*^9}, {3.822130809473855*^9, 3.822130811518325*^9}, {
   3.8221321171520863`*^9, 3.8221321224734287`*^9}, 3.822132251124082*^9, {
   3.822144610379356*^9, 3.822144616062645*^9}, 3.822144714795899*^9, {
   3.82214824348812*^9, 3.822148247685624*^9}, 3.8221502303548927`*^9, {
   3.8221506127099257`*^9, 3.822150613147251*^9}, {3.8222333115853033`*^9, 
   3.822233345476358*^9}, {3.82224374764902*^9, 3.822243750447619*^9}, {
   3.8222487102094727`*^9, 3.822248736914456*^9}, {3.8222487779223747`*^9, 
   3.822248781190824*^9}, {3.8222759619538403`*^9, 3.8222759662353973`*^9}, {
   3.8222760195557528`*^9, 3.822276023008*^9}, {3.8223261107986383`*^9, 
   3.8223261159213123`*^9}, {3.822326335831875*^9, 3.8223263393913717`*^9}, {
   3.8223270230145273`*^9, 3.822327026673791*^9}, {3.822327102242302*^9, 
   3.8223271053079863`*^9}, {3.8223662802414083`*^9, 3.822366288234172*^9}, 
   3.822373471675634*^9, {3.8223735585854816`*^9, 3.822373562775084*^9}, {
   3.822373602219118*^9, 3.8223736078199368`*^9}, {3.822374979485446*^9, 
   3.822374980659436*^9}, {3.822375021817605*^9, 3.8223750234365387`*^9}, 
   3.822375056975874*^9, {3.822407345912895*^9, 3.822407366807851*^9}, {
   3.822465429588978*^9, 3.822465429981113*^9}, 3.822465477562948*^9, 
   3.822465527530157*^9, {3.822472898757347*^9, 3.8224728993105173`*^9}, 
   3.822504101971035*^9, {3.822549665065044*^9, 3.822549665645154*^9}, {
   3.8225500339490957`*^9, 3.822550050164035*^9}, 3.824388008867886*^9, {
   3.8321452496398993`*^9, 3.832145267099141*^9}, 3.832145306378909*^9, 
   3.832147312809496*^9, {3.832147348426564*^9, 3.832147370846239*^9}, {
   3.832147415033022*^9, 3.8321474289505167`*^9}, {3.832147461202944*^9, 
   3.8321475134426813`*^9}, 3.832147551414535*^9, {3.8321475972567787`*^9, 
   3.832147900164418*^9}, 3.832148004579959*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"2749f6b2-7b40-406e-9d1e-161e1b30f409"],

Cell[CellGroupData[{

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.822027123318656*^9, {3.822027243955636*^9, 3.8220273334802322`*^9}, {
   3.8220281735983562`*^9, 3.822028183543811*^9}, {3.822030356796989*^9, 
   3.822030385875616*^9}, 3.822030471449663*^9, 3.8220319214810038`*^9, {
   3.822036009516848*^9, 3.822036060361549*^9}, 3.822038069110341*^9, 
   3.822038330620132*^9, {3.822038375837048*^9, 3.8220383904963427`*^9}, 
   3.822038582087463*^9, 3.822039032682514*^9, 3.822048881572012*^9, 
   3.822062507192524*^9, 3.822068295454095*^9, 3.822071981103013*^9, 
   3.822072078388721*^9, 3.822072409873114*^9, 3.822072608484565*^9, 
   3.8220729930855837`*^9, 3.8220733688940973`*^9, 3.8221117977632103`*^9, 
   3.822114528413227*^9, 3.822117956914587*^9, 3.822118160504751*^9, 
   3.822122264265339*^9, 3.822122470798745*^9, {3.822123096374106*^9, 
   3.8221231195587893`*^9}, {3.8221231555469913`*^9, 3.8221231951183767`*^9}, 
   3.822123639131068*^9, {3.8221246588699293`*^9, 3.822124667724915*^9}, 
   3.822126281108242*^9, 3.822126367132815*^9, 3.8221267555431843`*^9, 
   3.822129446377675*^9, 3.8221304842886477`*^9, 3.8221307725279827`*^9, 
   3.822130812533413*^9, 3.822132125085227*^9, {3.822132251407309*^9, 
   3.8221322631163387`*^9}, 3.822144560013917*^9, 3.822144617963853*^9, 
   3.822144722099324*^9, 3.822148250740044*^9, 3.822150233835514*^9, 
   3.8221506147898483`*^9, 3.822233311863903*^9, 3.822233347095173*^9, 
   3.822243752804956*^9, {3.82224869612127*^9, 3.822248739208337*^9}, 
   3.822248782907631*^9, 3.822275966593008*^9, 3.8222760255508223`*^9, 
   3.8223261162878647`*^9, 3.822326193453394*^9, 3.822326340806581*^9, 
   3.8223270311922207`*^9, 3.82232710632976*^9, 3.8223662496349907`*^9, 
   3.82236628890624*^9, 3.822373471981887*^9, 3.8223735633521967`*^9, 
   3.822373609127739*^9, 3.8223749812383623`*^9, 3.822375023751264*^9, 
   3.822375057257773*^9, 3.822407247997992*^9, {3.822407346194516*^9, 
   3.822407370465086*^9}, 3.8224654305923223`*^9, 3.822465478285552*^9, 
   3.822465527876945*^9, {3.8224728882092733`*^9, 3.8224729151554613`*^9}, 
   3.8224830556427794`*^9, 3.822504015580016*^9, 3.82250410498787*^9, 
   3.822549673160695*^9, 3.822550051962789*^9, 3.823167358801519*^9, 
   3.823782263536332*^9, 3.823841710696577*^9, 3.824392537421273*^9, 
   3.83214526922787*^9, 3.832145306864955*^9, {3.832147526711441*^9, 
   3.832147535343545*^9}, 3.832147846623612*^9, 3.832147958807913*^9, 
   3.8321480073197203`*^9, 3.8321481355495243`*^9, 3.832148219522044*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"85b17b98-739a-4d05-a400-78bc58c5d7b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"gen_0\"\>", ",", "\<\"gen_3\"\>", ",", "\<\"gen_27\"\>", 
   ",", "\<\"gen_57\"\>", ",", "\<\"gen_59\"\>"}], "}"}]], "Print",
 CellChangeTimes->{
  3.822027123318656*^9, {3.822027243955636*^9, 3.8220273334802322`*^9}, {
   3.8220281735983562`*^9, 3.822028183543811*^9}, {3.822030356796989*^9, 
   3.822030385875616*^9}, 3.822030471449663*^9, 3.8220319214810038`*^9, {
   3.822036009516848*^9, 3.822036060361549*^9}, 3.822038069110341*^9, 
   3.822038330620132*^9, {3.822038375837048*^9, 3.8220383904963427`*^9}, 
   3.822038582087463*^9, 3.822039032682514*^9, 3.822048881572012*^9, 
   3.822062507192524*^9, 3.822068295454095*^9, 3.822071981103013*^9, 
   3.822072078388721*^9, 3.822072409873114*^9, 3.822072608484565*^9, 
   3.8220729930855837`*^9, 3.8220733688940973`*^9, 3.8221117977632103`*^9, 
   3.822114528413227*^9, 3.822117956914587*^9, 3.822118160504751*^9, 
   3.822122264265339*^9, 3.822122470798745*^9, {3.822123096374106*^9, 
   3.8221231195587893`*^9}, {3.8221231555469913`*^9, 3.8221231951183767`*^9}, 
   3.822123639131068*^9, {3.8221246588699293`*^9, 3.822124667724915*^9}, 
   3.822126281108242*^9, 3.822126367132815*^9, 3.8221267555431843`*^9, 
   3.822129446377675*^9, 3.8221304842886477`*^9, 3.8221307725279827`*^9, 
   3.822130812533413*^9, 3.822132125085227*^9, {3.822132251407309*^9, 
   3.8221322631163387`*^9}, 3.822144560013917*^9, 3.822144617963853*^9, 
   3.822144722099324*^9, 3.822148250740044*^9, 3.822150233835514*^9, 
   3.8221506147898483`*^9, 3.822233311863903*^9, 3.822233347095173*^9, 
   3.822243752804956*^9, {3.82224869612127*^9, 3.822248739208337*^9}, 
   3.822248782907631*^9, 3.822275966593008*^9, 3.8222760255508223`*^9, 
   3.8223261162878647`*^9, 3.822326193453394*^9, 3.822326340806581*^9, 
   3.8223270311922207`*^9, 3.82232710632976*^9, 3.8223662496349907`*^9, 
   3.82236628890624*^9, 3.822373471981887*^9, 3.8223735633521967`*^9, 
   3.822373609127739*^9, 3.8223749812383623`*^9, 3.822375023751264*^9, 
   3.822375057257773*^9, 3.822407247997992*^9, {3.822407346194516*^9, 
   3.822407370465086*^9}, 3.8224654305923223`*^9, 3.822465478285552*^9, 
   3.822465527876945*^9, {3.8224728882092733`*^9, 3.8224729151554613`*^9}, 
   3.8224830556427794`*^9, 3.822504015580016*^9, 3.82250410498787*^9, 
   3.822549673160695*^9, 3.822550051962789*^9, 3.823167358801519*^9, 
   3.823782263536332*^9, 3.823841710696577*^9, 3.824392537421273*^9, 
   3.83214526922787*^9, 3.832145306864955*^9, {3.832147526711441*^9, 
   3.832147535343545*^9}, 3.832147846623612*^9, 3.832147958807913*^9, 
   3.8321480073197203`*^9, 3.8321481355495243`*^9, 3.832148219524122*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"c9798754-2a00-4a94-b04b-f4b186531935"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
xnFY
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJw1l3k81N/3x+27sRvMjJmxzNiNGS2I92lDG+WjUMheWlDIlmwpEoUkiRIJ
WUMqaa5KKpUo+162skSyL339/vjdP+59nD/uebzuuY/Heb4O1cXbyp2Lg4OD
a337v/P/168nOqeDT81ixm+4DjPJj7Av6vtzdzNmsANpLIer08+w968qXoo3
TWGdOFPDw7avsTsH32xw/jCObWlYKmUUvMfiwv6uuKuMYj/ivHFzg41YCvtI
Cb38B3Zg9vVhCc6vWOnofdqRwV7sv95HhQ/WWrCwg49wRk9bsR5XZfnGn+1Y
+GXV9KzST5hakkdBTW0X1i5XMCX85wWWp6BSLnWpFzvmsOC1Y9aJrSv23yXX
9H6MFvCaeECphs1fGcnL+2sAu2vmn+sS+JGttnVswj3tB7Zpav6J1+Y2drmP
NdFz8xCmvKCcNTnax65IJAO7fhjjJIUl0DQG2ZkMy1s081HMsvnbuCiMst/c
mZ5yfv4TW7DM/pGweZzdvRCXySSPYY2lE0HdQlNsncE0F+uAccys0s21cHya
HXpSpjXk9QTmGG2oEvVqho05unF0WP3GMiv9h4XWZtmvbQtqBo5PYUwcx7Cu
+gLbhh9/rZgyjZlt8sjm3bnE5h32DLNtmsbeFA8shVutsN2HjRrtQv5gplFp
BSFWa2zrNZ15HWwGO5LY54qz5kDq12+Ys5fW/+Xg4TN7znGieMPCA/nFf7Gx
zw2E89e5ULYpn+35I7NY6Z5hqkI2N3Lo5Xr4jHMOs4j6ujO5mAdFsZtu/K2e
w26EKG8k9fKicPo7iwte81g8fxKOm5cfreUIfhyTX8CSfxlL1ikLoFdBtlmv
Xi5gpaYiQW2Ggsj6JmupyHcRI+4tSxvyEUIcStICRtQlbNEweyNXpjCi7F3O
Wqhfwr6rbQ8sfiWCDu/pYyRfW8Z+qfV42ani0JnMIybaFivY2b3O3+3OiyGr
yc2vY3hWsU2mqS76buJI5d+J+v3lqxj3PAuT5ZVAbrQX9cQja5jFF6tnpCwJ
9EdJ6cIK4R8Wfyo57cAhSdRtwn3T/ts/bCyzfNyaVwqlHD/fF7iNA/ZzTvle
LpZCoknhpdqpHLB1YqkQs5JGLWFy4a2zHMD31tGwRkgGlWzNWnbazwkKEyX+
WS9kUN9oqrjKQ07gaJw1sjoui7bPzPqfWuIE9ukLQlo4PMJJlo0UH+QCmd3Z
+Stv8KhdtO2oXBEXFLyyqBH1l0OvdRcm5jm44XOBGv2dojxK2Ku4FHmIG7y5
PAtTP8oj+4Cngm5F3FA8dL+WHaqAOGm2rm84eKBBQbRxpxoBieltjVtw4AFm
wyMVlxECyv2t8JBWxQMxTrdt72USEa6DMyFbhBeEaye2x1mQ0Psn98SfO/LC
y5HjHvfmSYgj7Ghy5VNeSPqzmSxWpogkF89KTuL4YLTH7+RzFzJ6y/XN0uc4
H7wVn/aKFqWg5EGFnsI3fOD01uiRzSkKEsqkVswS+WHbSOz7/rcU5PLgQV3G
GX6wqGm/5E6iovtXsiV2f+aHn8LcoQ9DqCjkbnnVAk0Adt3tdjFtoSK3Hgeu
tRAByNjaJBijoYSUGmgPiZ0CsO98u9m/y0pIY/Ewz2FdQWDb+64WdSmho0J3
bt+/KggenPcqJTYqo8AO7v/6hwRBMecuY1ucMrrk8cHQ00gI1F8oFN3rUkYn
d7KkklKEIIaQMNqjo4JCWvTY8qNCUFKHRWUGqSDd+xxVV7YJQ/KWyyuN71WQ
Ymj7mHaaMLiPfbvyWVoVdX92duWZFAZVA7EwD3tV5B7+yHdgtwhcpdY8SMpT
RXn5+N8vskXg4BITWL9V0YqtRcrYggiInzhR+JBBQ//OXDjrs18UKv0Ninaf
oaHkTdTfPfmi4Pkl7IB8KQ3xetKDkv6JgsVNXM6dURoSePt2e9ZBHNh1Uldx
JDq6raY5saMYBwcuiB1q3kdHzpaZJsAtBjfnSiu+nKMj8nDV3hOHxaB172am
0W06GpMOKDMqE4Mw5rEAxSd05N/dbfCOSxzkS1YFk97T0SFJY8ZTHXGYajTz
I7fQ0fDeB2PdtuJQ9oovv6CVjmJNcl7iLorDgfyKsMGPdFSv6D3iXCwOXvsW
TgpX0ZH6vHvp5Q5x+P7kuH7aDToyeJ7u+JJbAv6Ypybt8qSjdB/lb6k6EvDl
YEQhz2Y6smv70BxoKwEHJ62b1vjpKDw61uBKlAR8tZD45NJFQzLkne+uF0mA
2gfJW+gJDYU/4woebpOAPruTTra3aChR/rcdlUsScp8+4GaF0tCLhQ32LC1J
aF0JdWxzpCFN08IKu0OSgO3aWTvEoqHo17waEeGS8MRQU9Pojyoab7lOTCuQ
BBmc+y6zZFWUa/MjLvmbJLx/BRGqsqpIc9B7xG1NEqZzzycthaqgq18cY0LU
pED0OD6hs0EZ+W0wi7xkJQWVvD6BLG5ldHex0SPgvBT0tL531qcpoXsJ5h7b
cqVgPCXet3AjFTWIf+qX+CIFZOFeCV19Ctpwgnaza1EKTvnN64bvUUTMVd7f
qcrS8NJ+SqtJnojeyHE0muyTBpGfwa0XS+VRAMT3zp6TBv3jt2OPfZVFlXTL
A9fuScOAdwXPCVcp1H4toUX6gzSoOLSb5/7CIU1CLrVyRhoUMsj3+/L40KnI
PbxWJBnQ/at0ZpPbGvvg8dP1XaYycHRBPy/R/Q9bZJnjfoiPDLyL/7BU/6OP
vS21TJr3tgzUDm3N945/j221bTGLey0DarQksVWbKUwzMWDsz7gMzEUuu41c
X8MSlnpKeGRlIapkRHOJyAeK091RHCAL8eZxBm2mIqCINxTd4SkL4ye0ZDNL
xIEywbHzaZIs3DqfgQmUS0Kb+qelvS9kIUw5aOitnTTUTmZb/B2ShZnNb5re
DMmAE/7sw6tieLD/kfAu9gAe3iYQGKYGeFgW9mfm2MjB+0gms94FDx8sPC9t
eCwHB3Ye8rO9ioeN151dh93kIKQt+d1qJR6Gv/VE/LiLh4HymLSUPjwYbOYJ
cs2QhVHfsfSLgnLwp2ZMJeqqDFwPtaFPMOXgni/t6cs4aVDubZhXdJADtRqJ
4rbrUrBPf0z/xCU5sPvTSXLMkITVk/RTVqVyYMat0DB+XwIqvft6Sjrl4MOz
wX9iGeIwE/bwbxiPPHBtrN5OkxODx8Zdv3K15eFK0ES0crcIbIosujdxSB4W
XKUoey8Iwd2z1WMm4fJgtiMgfZhfAJ6QRpbD8uVBpPHmURTLC/XmOI0bzfKw
YiF2ORzPDeOiz2pxq/LAqR/xLrSEAzYOavko0hXArQLHcWRxBfsTbSTxZL8C
VF0N24MbXcCEfN3us4IVwOl0r9TD7r9YHPWbtFWOAiR1PVXuCZ/CtrTkVb35
pAD/XtH3h2WNYPnXul4UzCtAY2MladONTsw+rj1XnUqAMPfw9Eirx5i7oNGi
0h4CfI7K8UwObWYHFqZmsP0I4KD678vDc4Nsma5m55BMAiip516b5f3Nrl3e
lG/2jgDE3qel58L+sq9t3YIbnybAq0jmVIfpIlss2HbOnkCEmvldS8Ujq2xu
9t9OwZ1ECCJfO5y9gxOdreB0eeZFBEu4OHv7ITdSZR6KcrpFhNn0r9bcKnzo
Leno3plaIkyfFY2PeiCABvoIbbFjROhK3XA7gFsY7Q3vYUrLkOCkfCttk4Ao
8hIpIV82IcELp+7R1BocSk/Nq1k6RoI1muvj3m3iaLD3sphzIgnKw8IznA5K
oIiCt4vjz0lAeWbV+Pu2JDq0IZfkNUiC6pNhAZIzUqgv/6lEq6gi5N7R6haj
ySBdg29p1psUIc2AuezClEXKShVv2E6KcCbh8u1KGh5l75udoF1RhMDVrza2
UnLIfKHUMKxcEYakSqqXcfKoJZo7b7pbERxl+7jqeBXQ0DVjfWM+MngHhJz/
9lgB9RWnycTqksEXHC5byRJQ+OlY4oAtGXakcxfkPyag5Q4Zl02RZHiKLo28
LSGiqIx7FRcekaH6esh6gUlo6/m3AegbGZyvrEwWuioiI+N4bb41MtyKHzEj
Tiqi9ICsS4+kKJBm44N8z5HRdwvlmN1qFPizregT3zwZXd5bZzmxhQJlK6cq
L06u+4OHSs4JByggeiLL0quZjBIy48+qeVCghWEuGalFQRVtonlvgymAjvs5
xK77BS6HLgHXaxTg8h/cdTWUgo6bDGty5FCAZ0Nnsdl6jJEzfdOeUmB/RdFH
tg8F0esMvPU+UWDPCodJOgcF/YiupTQMUCBmsOfn/kdkdGTg/QnnOQrgc07Q
X7wmoz9OjzXmhKgQecWqWMCZjGqfFBCiyVSQeOQT9qZZEd0Rv5VC0qeCLCV2
nOMFCXlWCuwqMadCu5Nce7EdEaVJXDtt7EAFrbvOA50LBFSb7RHSeIYKMS/J
7yTlCGiz5oEG50tUMK0yyctdlEeC333bpm9T4YxHkELrIB71XVgOiSqhgtrI
KbLHdVlUrjh3XOwNFSYl1adfhMugtOZgx4x2Kki6J7j0TUuhCKHpCsYEFZSf
X2vTOSeBzpp3ZVZzKoFe25OnorvFUNXw2gUzWSUYM71zpsJaBO0hkt61aShB
t/oMOeiwABo/SzjrhilBuvEOmxhZLhSQwOyc+k8Jsox67iuOr7ITgus6go4r
Ac4b1KqbZtlfl2/zC4Yqwe3LhD2Tz3+w95N6pZMTleDFsgG3Eesx21bnwxA5
dz1/Wn/HvdOdGBmLECx4rgStaV/OFOVOYzN5SbmsRiVozpm31vZZxtQqj8RV
/1CCorJV9agdnMDb+j54x4ISzKm1hton8EGyljnxs4gynD7VZBD9RQiOUx5n
WlOVwVny9zHDBVFIrdis3rtBGU48l1lIjpWA1yUSN912K4NJ+PP0rElJcI/z
NZxwVIZOgcRiVwNpkC77lnfOVxk2/jrcPx0tC513mVfXLisDxXiEkEPFQ4Ft
kfTlO8pgevZoqSxFDgYtHh/DlSnDeNHiwb9V8jDCXeWWWqcMDn+lL+b1yUN9
onUMpVMZkgsz3GQ/KEB7HldG3qQy3LKWCr1GIsDBrYvJetwqEJihPE/hJ8Dw
ZXu+p3gVMHkccyv9EwG0lfMZJloqMJkrbr5VhQBGav983oAKHFM6a282ogCT
f6gfdh9UgasWY8yaIQXYNrP85JunCmzLyEHe633cOMPN2/6CCnzELwae+7HO
hSzuxz+SVODcXZJF3DM5EDhh0u/5UAWsUh6bHWnAw2ue1Ze/q1XgSYfVSuoO
POTndNaf+6ICT/dn6V3rlIGTmmZea4Mq4Cg6s6PcSAb6imldUYsqINg3zmFx
TwpCRHP6RHGq0LA+RR7wkoSRuFrshpIqmAihmDVDiXVf5JQmv0kVbPwT2k4Z
iEHwdNzvu3tUoTuR7tnoKAqWrEFjFSdV2Jn357R2viDcxCfdyfNTBaU2zsz3
sfzAbxxprBerCmqBN4M/V3CDfUPp/acZqnDr0czFWW1OqA21H9jyWBUsjusq
XZtdwkIWPXlr36oCq/7SvuD9s5g8mVN8Z5cqfCj51Xvebxz7/br/e8NvVQgv
e/FmragfkyVRxvfx0CBulJ32sacCi1TXf9IsR4Nb8xx1xQlN7F123hE22jTY
ObTqQzUbYb/4/m2uYysNOHkO3ZTrnWJvfRTn7XiIBpp1b0pwIQtse2Mr/PcT
NPjV8tm7I3qVrb6hcsEtjAZ+mcVt0c+50H3zLMPRZBoUmzcmiQTzIqa3Dvt0
Hg2mGPfum0YJIKcvttenXtBg77lRRCgURqNOemdPNdEgsCmj30AIh66ZRC7O
DNFgs85vxYQv4uhuxvVBvyUaPN+0O2kXRRKdd03tmsfRwYI61ePAkELJM026
wcp0aHvo/OPrB2mUGVXzaWkTHSyND5L3c8oi+2ODG87vpYN2KdxfU8Ej74ub
3Fed6LBA+/qdQ0IOdYj4dV/wp8M29tf3Z0PkEV9b7sl/sXRw/ZTb3OCtgLK3
igtEZNJhq/ul/nJnAvo1c1GEs5wOtIjPgrJKRJQ7If8osp4OLuxi1nlERCq5
fAbc3XSY6L7agYsmoYxW6lTkFB2sXdqKlfYpIp+3IXu5edXguMW4e8WsIvI1
T5OOkleDUWPj281nyehqytcsbh01WFpNv8nbSEY1FhFXIrepAQp4MCkpSEGf
Y6z3c9mowZj7cyVj0noc3fk24qQa/DCcn+NSpKDy5HB5rnA1cC6of2vAv86L
xx484TfUoN25nbLnHRkRds63rOSpQfK5H3lJt8jI8k7ml5AaNdAtTTgV6k1G
YtJjw4tN6/k8JhwYI4rI3lhhe9CwGiyLX/7B9lFE3XIdUgtLavA4ILiIcpaE
bjeW5J8TU4epQyXDzb+IKHv00MFZZXVY2XGUqiOyXg9GaIzvZnUIcK4iCbMV
kJZaUu30XnV48TjF9NY3eaSB8831dlaHMw2v/l5PkEOlxfOfJvzVofhgQKDX
ETy6Kr9V6tQVdUD8+painTLork3dnZ+Z6uCqRmlzPiaN3NP2XvEoV4fKLdfb
JbIkka4pZ8JgvTrE+9/iX9OSQHd+PnB26VYH96wbYeEjOJSxl/akb0odmjV6
Xck9QmiG6lbjwKsBOcHbDVKz+dGT/MLMLnkNKNxSoKZ+mRsVPJRytNPRgCM3
jgX7PfzHjk8Bn9ZtGuB0lSbbuXme7fx11cbaRgMMPJ1fy4ZOsD9XhYg1n9QA
Xw3ZD1evdrKz+3b8tQzXgKN2NbOyM08wyr7Slk83NADb+VMjUvEHtoElzrEn
XwO+D0gI1GROY8/8DLne1WiAIVNFjH/bIma8otCxo1kDfJp35o8Zc8BX3SDZ
V8MacLGNsSeRxQMSym+eYssacGF/v1BaDT8kY2H5L8Q0oRj60VC4MJC+fQ0w
UNEEtCYy/F8lDnCGdcQnmzXXOfH7DQe/BNR+DuZj7dOEQn45NfkESShe+SlS
6qwJz+LcdS1apOCtq9ui1jlN6LlIbqPSZYC622Al/4om+K35dp60loXc3Pfa
9LuasOmkJ88mHzxI4gJFc8o1wbE4uM7LVQ60WqxnKe80QcnfYJ+CnTw8U+HO
yejWhHsEw7jVcXkoEqu/pzCtCSFF+3b0+6/78Kza2Zu8WtBLpt7w5iPAZXPt
OikFLTAieR79aU4AjTjxHdd1tOCumUessxsBWEl1j0S3a8H3hC79pmgC3Ei8
EHbFRgt8XLernV/32Rctw9v4TmmB+re6o/cNCTB2xUI0KlwLgqhy5jajCiCU
5frk3w0tmLJsKRle9/1XSFd8z+drwZb4R7ph67yL/uv4bqFGC1y42eaILg+i
kzvBv1kLNoo/4MwNkQNOQsqF6WEtqF+oKrwWgAfHNY3608tasDqixiGVJguH
WwV6f4ppQ2fqQHtXjAxoSn0M8VDRBsnuZP/KXdLg5STj+32zNigezanQkZcC
7RHStOM+baCJtDWY1knAN/UbU53O2rBat11fNkAcAiKRvc05bdg32Mpl3y8K
Uoy7j75e0YamQpvWXTNCQDlknGJ5Vxuyp+4fNC3lhzPRv4oayrUB4cr5fO7z
APtRubz5O22YmTnUev0kJyjPfFt53a0NxepJk4FSK9jLxJeT2LQ2cEanV41w
z2J1tQXEF7w6QHl9s2qxfRzj/xrw32YFHXAMdXNwS+vB8BEc+yt0dCDuqUzX
XOsD7KjQXz7Gdh0Yc1AuWODvYO9vsVQrtNGBPbXHpDL8f7HHiBJz9FM68OBM
oVGw3V92a1/QfHa4DhQPcW632rTMZoYIt5NTdOBhB454UZ4TaQd1Babn60CS
hosFpwMPcv27RR3/Ugc2f+r511vIj/4kmignN+vAFsMCcdqAENr+ULUHN6ID
y+e2iug2iSJnz/tlV5Z1wKFKoavhuDiqt8805hPXhbkrouervkugQoHOuQgV
XbAoUzrtvk0KEeg2TaubdeHlZtkqgxxpxCwjRgbt0wX24Cud6R4ZNDzrQp11
1oUAqSLmGRE8ctkRVe1zTheyf/zb+Zoph3w3JFmNX9GFkKaL5tqa8ujFdg3x
43d1wRbHNXNNfX0+ae8s/1G+fr+yx2l5TgFFynJfOvpOFyaLQ4pP1xBQPP8t
w65uXVDI/XI1x5mIftYE9B6a1oVbzPh8NEVEJl/Et/zkYkCX1q8YnxMkZO1s
85smyoCveW4W1i9JSLipOMMNz4D3G4+zHTkUUUKA76n7VAaob3t38pmaIpoT
ypfv12SAfZ/EvQllRfTvUNA70kYGVGwa0dITUUStF5yijwAD7PTEzz4cJaFN
JQ3mabsZ0DijZLZ9nWcjO68utlozYGSrknEglYRWUyazpY8ywKxEYVd7IhEJ
76x1s/JkgItTecXBCQKauKurct2XAU1sBw1tKgFJRRA/fQplwHyLzqzVfwrI
t+/UaeEYBtw/jTsyZCaP2oTLlHYlMSAmcqAmY4scsr9g3nDpDgP+fj5wwx+H
R3F1apfe5K7rTxHI7qyRQeo19Ru4yhhw/nhiv8Tpdf4rnezBqhkAz+MTraYk
Uexjv4jQOgZY/md2uMBVAmlsoW2obmRAetd3Hu9sMRTzK+f7QgcDRCa4eAaM
RJBXXHHixkEG3Pn6+FTVZwG0SfQQw2+SAab/whkP6byowce2pWyBATf38wgc
i+ZE7ex3sb+59IBsXvOzIG6ZHTjgrqotqgesDpvqxc4ZtqSRU8MJvB4E/04J
1CKMsvt9Jk/lUfWgr3/mR6t7E7s/bHF5SFMPYt8YO162+oixFJZTlTfqgW9L
4jLsGsb6rvswnEEPBBUSa19wz2ApX8w+ZO7WA6sRoopQ3hJmlFlt1W2tB8yY
Jx00A06Yodj9kj+qB5HooPmTSR54u5Qcb+OpB6b+2t8M4wVgXB1ppvjqgYcM
wblGWgQ+XS0qaw7VA33bj6EXosXg868d+8Rj9OCziH9itIcE9D5vHtiXpAeh
EqJ2N9YkYe/oml/cHT3AF48JcwdJg7DfFb73uXrwLNH35sqADGystUzjK9OD
YrWEpBQNPDy+95Wyo1oPvvfciGq1kQOP6+FFEXV6sHo6UPvpOXl4HS2EsRv1
QAgdzMpf7/8hWyN7Vzr0YFdeip21OwHi8UJ+hoN6INdzKPi2MhHcfr7kDJzU
g+eZWfMlzUQ4OmiQWLmgB9hbkw0dh0iwp2hFaYaLCcqC+3blIBJseDlQzBBl
gkVGVwVOWBHCSmJZXngmCKdtaDXTV4Q8/qiGR1Qm7M2VjN5jrAgBGOnIT00m
TK6lhj5WU4SM3K9dtI1M+HvybGrwEgn4tAnebsCEI3/MV41ukYCDQf6btZsJ
I/h3nhL667F7bWCfNROCtr2uozwkgvqzTA7SUSaMic/FMWcJwKn5MfqwJxNE
5nqjVLQI4E9LEbnly4TpgLYoWUsF2NizmtISygQ+P8rbwd3yQG+bIkvFMOHB
s3RxIksONMmnH+1PYoLtdP6wqhgeRm3MNybcYQL59+uywBcyEFvjUd2QywSc
Uf33h57SMLtoZiJYxgTPWW65q8uSICQlxTatZsImq5fGuEAJWKl4ufNiHRNG
n3WdP9AhBvVfRhtqG5nQsZ+YXXZHBGyS+vf962BCGvnrrV9bBKGLWPxtyyAT
/F6q3Mz4xAvH224dCp5kwvt4B/dBFy4IgKD+qoV1fT/N+Pu9VrFjg3jXWS4W
2H/wKs3RnsOyr7kOMUVZwL7mYIyNTmDVHG4ePngW7A61Ni7K7MWityiOFFFZ
MPRHRs0sLhF7lTPhPqbJgvI4iQuSc91sV3OdH2obWbCRXcyQ1J1gJ+HmT3sA
C+iDe7/NDMyyeZHcVPZuFkQM9KRny6yy47Vfeg9Ys6DqjL5iAycXqtxoM654
lAXZ+up+PQm86N+CnK+9JwvM67omVGcEUJfk5J80XxZ86Z0JzdESQcltb/za
Qlnw2ZfC+uQhhr6tXJiXjmEBX3lAmLCxBCK+3BlolcQCmWhRpluZJNogbjN3
7Q4LeG3nhiJFpVEET+/ZT7ks6FXyTpBzlkGnlwz/CpWxYOzpFseb92VRlcdz
P/NqFmx37/GrfI9HLT27/0bXsYD/YgklsV0OeZfEnnnduP7+xxr7hRrl0WbV
rVMcnSxoWCjPCytUQI4Pgj1NBlnwcdiUV9OHgEz29YyETLKgqS3M+BCeiCxi
nFyeLbDgjtS5He+ziWi3m+rAHJc+bDkh1hcnREKcRo/s9EX1wefSoFfEOk+o
AmVtZ/D6MM+Yr8+4SUK46Gs2JVR92DjxM4T9jIQ+ZSi1jGvqg0q1V1tNFQkJ
pvbt0dioDyF5gdqQQEILs49fHwN9MHY3Sy09QkL9F1kmD3brg72I043pBSI6
dWRb1XdrfQi99uDBVCQRHeDK1qMc1Yf097iDKnMEVHCdnufgua5PwTRCczsB
3fO6rJruqw9ejOc6SSEKKDb1dmZ7qD4YaA41Dd6UR2b/DeNlY/ThZL3jYcvb
cogxEXH9vyR9MDO9qjlyHo+Srv8WSLyjD3c1PwWk75VF+4VGIj/nrusZn6js
lJZBVh/l/gmX6cO+5taUEy+kkGi2fsCuan2Irw56yb9LElnKkaYu1enDdN8R
P/Z7cfS+38HzTaM+TP12N424jENVZ3z7ODv1Id//4o1XB4TRQY12W2xQHw7Y
3f1hxyeADn2XaDo/qQ/XvUipdWk8aOZf5K7nC/rAf7ns7Q5ZTvQ/XfScCQ==

          "]]}, {}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Tau]\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->InsetBox[
        BoxData[
         FormBox[
          FrameBox[
          "\"gen_0\"", Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
           False], TraditionalForm]], 
        ImageScaled[{0.8, 0.2}]],
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->NCache[
        Scaled[
         Rational[1, 5]], 
        Scaled[0.2]],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 30}, {-11.919270784449823`, 7.55985839773491}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
6Hmb8YYGmOURdDlFF/D/APRPNjk=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Tau]\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->InsetBox[
        BoxData[
         FormBox[
          FrameBox[
          "\"gen_3\"", Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
           False], TraditionalForm]], 
        ImageScaled[{0.8, 0.2}]],
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->NCache[
        Scaled[
         Rational[1, 5]], 
        Scaled[0.2]],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 30}, {-2.067005777377109, 1.6803560955244246`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
tlHx/M2BxEZ6H/asaYO/+2u3pmk29D8NHKgE
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJw1V3c819/35217G+9l7715v73ftrxORCVNq1QkNCgapI8RKSUNs4xQ0lAo
e5R6XVGKMlKyR7YoWxG+fn/87h/3Ps7jnHvv85w/zvM8FQ777fEisLGxcaxv
/3f+/2pIi93BG9WG72rP/no/7wn2tFcneFSoFy9fM34Vd7AMY1XdSz5c8QN/
yjXRPby1CmtbSFDh6xjCzY7O7aa8fo9plW+/hsZG8ZP/1Sf95f2Evcq4nzI9
+hMfJ6uMbk5qwurQib2ktl/43BJFr2e0BeMR6ZotdJjGI4P4rvdKfse+xsBD
Cn0W32nSnd6r24E1NZbuqVydw83kW+aPqHZjYRVzi8ZVC3iA9tBkOHsfFhfm
/J1y/g++ZWxDuKhHP6ayImH3WWkJn1VJOPCo/AfmQ5BW7qtZxv+Tn5htIwxi
syEna6r2r+CaFVJ5t2OHsKjj17/m267hn0oiHhcKjWCFrjn2SbfZ0OZzpqdM
L4xilKA8u38X2NFt8iUX+b4xLDB4cLnHnYBEf9HNrQ1+Yi+fcQbEW3Cg0Jbt
P85dmMCIe6RMPUU4Ef172q6qpUnMOVCipkGYCxFzl/UFj/3GQrcwtdIJ3Kj6
Zsu/Qo8p7CHtWaHpL27kIdT6rUdgGjMfaYjlb+FBVSN/8Dt167bCTkLPN17U
pHviyJPwGYwj5b3YmSY+xBkcQc7Qm8WmqkcFLKv50fE9ioSl77PY2y6L2TfP
iWj1D8/73tg5DEUf/XSiSAA1aZy77Gg5jx3UO56Q8UIQKVziejU0MY9Vs73l
/JYlhJSrXf4JxC1g3+5QzCNjhdFiYtizQcdFLO5ikYKRMwlJZJ7J0qL8wWJ+
Bd1e7iOh4WddfLHv/2C3OtseD3iRkclR9a7cs38xp0tSJNNhMqo95nNbQHIJ
o/FZ5W08TEGS7HwBwe1L2IPqicFX0xT0JD4q8knsMhZpP7CzOJiKltvcf5vA
P0xNVuNUCBsNvWyyYfs4+g97fFss/0A4DRk9+9Sz6dEKpn7VPfeFsAgK6jtH
zN63ij07ITLImyKCjkmeD0rhXsMchni2vJQWRSWQb5mXu4YNN2UWC94VRXdP
r14+yGCDgWqRq3QVMeSZe/fb7Sg2kA+6kMrxVAzllWs22XWxweiAw0q7qjjy
l+xQu2fIDnRq6IbMPHHE8i3v1b3JDh1yvB53dCQQn1aH45Y+dmgaqyslP5FA
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
cJrH/3RCpyD8D3xOm9M=
          "]]}, {}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Tau]\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->InsetBox[
        BoxData[
         FormBox[
          FrameBox[
          "\"gen_27\"", Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
           False], TraditionalForm]], 
        ImageScaled[{0.8, 0.2}]],
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->NCache[
        Scaled[
         Rational[1, 5]], 
        Scaled[0.2]],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 30}, {-8.033140174378284, 5.002784575562736}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
n6O8LmTif60DT8U=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Tau]\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->InsetBox[
        BoxData[
         FormBox[
          FrameBox[
          "\"gen_57\"", Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
           False], TraditionalForm]], 
        ImageScaled[{0.8, 0.2}]],
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->NCache[
        Scaled[
         Rational[1, 5]], 
        Scaled[0.2]],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 30}, {-3.470387549633836, 2.5818170469394017`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
xOQzgP8Hk8/UBg==
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 64], 0.015625]], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Tau]\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->InsetBox[
        BoxData[
         FormBox[
          FrameBox[
          "\"gen_59\"", Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
           False], TraditionalForm]], 
        ImageScaled[{0.8, 0.2}]],
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->NCache[
        Scaled[
         Rational[1, 5]], 
        Scaled[0.2]],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 30}, {-1.9295319416331127`, 0.8914803714539997}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.822030339986936*^9, 3.822030386555936*^9}, 
   3.822031788278988*^9, 3.8220357823347483`*^9, 3.822036010727675*^9, 
   3.822036049047661*^9, {3.822038062941193*^9, 3.822038070948807*^9}, 
   3.822038332684367*^9, {3.822038377624364*^9, 3.822038392363023*^9}, 
   3.82203902453758*^9, 3.8220441164901876`*^9, 3.822048888668106*^9, 
   3.8220631604405413`*^9, 3.822071593440778*^9, 3.822071981992745*^9, 
   3.822072276142872*^9, 3.822072495051145*^9, 3.822072872964356*^9, 
   3.822073264471766*^9, 3.822080916366558*^9, 3.8221118576959543`*^9, 
   3.822115480826433*^9, 3.822118019245625*^9, 3.822122083734165*^9, 
   3.8221222845060797`*^9, 3.822122936322941*^9, {3.822123099484145*^9, 
   3.822123122753222*^9}, {3.822123155942754*^9, 3.822123167590458*^9}, 
   3.822123617121649*^9, 3.8221246213398743`*^9, 3.822124659311376*^9, {
   3.8221262758799963`*^9, 3.8221262818155317`*^9}, 3.822126594115807*^9, 
   3.8221267564940033`*^9, 3.822130368987755*^9, 3.822130485698184*^9, 
   3.822130784849502*^9, 3.8221308426067553`*^9, {3.8221322432889214`*^9, 
   3.822132277117118*^9}, 3.822144579300783*^9, 3.822144710814239*^9, 
   3.822148207717091*^9, 3.822150212656014*^9, 3.8221506035151176`*^9, 
   3.8221533208634167`*^9, 3.8222333241562757`*^9, 3.822237053031666*^9, 
   3.822243771646666*^9, {3.822248697992466*^9, 3.822248741032564*^9}, 
   3.822248784977379*^9, 3.822275970675436*^9, 3.822276029449422*^9, 
   3.82232616299802*^9, 3.822326272437386*^9, 3.822326465506463*^9, 
   3.822327036879107*^9, 3.822327118742791*^9, 3.822366260255525*^9, 
   3.822366299546578*^9, 3.822373539427844*^9, 3.822373577836234*^9, 
   3.8223736233134403`*^9, 3.822374994934575*^9, 3.822375037788342*^9, 
   3.82237507110798*^9, 3.822407262059579*^9, {3.822407360077467*^9, 
   3.822407384255427*^9}, 3.822465444786639*^9, 3.822465492452667*^9, 
   3.8224655420281763`*^9, {3.822472902227375*^9, 3.822472929017116*^9}, 
   3.822483069039925*^9, 3.8225040572411413`*^9, 3.822504457139043*^9, 
   3.822550014710239*^9, 3.8225500658924093`*^9, 3.8231676222468452`*^9, 
   3.823782431104454*^9, 3.8238417194684553`*^9, 3.8243925664189863`*^9, {
   3.832145297729555*^9, 3.832145307215164*^9}, {3.832147526910337*^9, 
   3.832147535794423*^9}, 3.832147846864717*^9, 3.832147997976824*^9, 
   3.832148074579818*^9, 3.832148169591732*^9, 3.832148287611395*^9},
 CellLabel->
  "Out[73]//TableForm=",ExpressionUUID->"ac1f39a0-4048-4c72-9765-\
089f8c53aa82"],

Cell[BoxData["\<\"-rw-rw-r-- 1 adam adam 234K Jun  8 15:38 \
pairshm.mx\\n\"\>"], "Output",
 CellChangeTimes->{{3.822030339986936*^9, 3.822030386555936*^9}, 
   3.822031788278988*^9, 3.8220357823347483`*^9, 3.822036010727675*^9, 
   3.822036049047661*^9, {3.822038062941193*^9, 3.822038070948807*^9}, 
   3.822038332684367*^9, {3.822038377624364*^9, 3.822038392363023*^9}, 
   3.82203902453758*^9, 3.8220441164901876`*^9, 3.822048888668106*^9, 
   3.8220631604405413`*^9, 3.822071593440778*^9, 3.822071981992745*^9, 
   3.822072276142872*^9, 3.822072495051145*^9, 3.822072872964356*^9, 
   3.822073264471766*^9, 3.822080916366558*^9, 3.8221118576959543`*^9, 
   3.822115480826433*^9, 3.822118019245625*^9, 3.822122083734165*^9, 
   3.8221222845060797`*^9, 3.822122936322941*^9, {3.822123099484145*^9, 
   3.822123122753222*^9}, {3.822123155942754*^9, 3.822123167590458*^9}, 
   3.822123617121649*^9, 3.8221246213398743`*^9, 3.822124659311376*^9, {
   3.8221262758799963`*^9, 3.8221262818155317`*^9}, 3.822126594115807*^9, 
   3.8221267564940033`*^9, 3.822130368987755*^9, 3.822130485698184*^9, 
   3.822130784849502*^9, 3.8221308426067553`*^9, {3.8221322432889214`*^9, 
   3.822132277117118*^9}, 3.822144579300783*^9, 3.822144710814239*^9, 
   3.822148207717091*^9, 3.822150212656014*^9, 3.8221506035151176`*^9, 
   3.8221533208634167`*^9, 3.8222333241562757`*^9, 3.822237053031666*^9, 
   3.822243771646666*^9, {3.822248697992466*^9, 3.822248741032564*^9}, 
   3.822248784977379*^9, 3.822275970675436*^9, 3.822276029449422*^9, 
   3.82232616299802*^9, 3.822326272437386*^9, 3.822326465506463*^9, 
   3.822327036879107*^9, 3.822327118742791*^9, 3.822366260255525*^9, 
   3.822366299546578*^9, 3.822373539427844*^9, 3.822373577836234*^9, 
   3.8223736233134403`*^9, 3.822374994934575*^9, 3.822375037788342*^9, 
   3.82237507110798*^9, 3.822407262059579*^9, {3.822407360077467*^9, 
   3.822407384255427*^9}, 3.822465444786639*^9, 3.822465492452667*^9, 
   3.8224655420281763`*^9, {3.822472902227375*^9, 3.822472929017116*^9}, 
   3.822483069039925*^9, 3.8225040572411413`*^9, 3.822504457139043*^9, 
   3.822550014710239*^9, 3.8225500658924093`*^9, 3.8231676222468452`*^9, 
   3.823782431104454*^9, 3.8238417194684553`*^9, 3.8243925664189863`*^9, {
   3.832145297729555*^9, 3.832145307215164*^9}, {3.832147526910337*^9, 
   3.832147535794423*^9}, 3.832147846864717*^9, 3.832147997976824*^9, 
   3.832148074579818*^9, 3.832148169591732*^9, 3.832148287703775*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"e7740267-7d32-4b51-9f7c-35ba15713a6c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"genericruns512", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<gen_0\>\"", ",", "\"\<gen_3\>\"", ",", "\"\<gen_27\>\"", ",", 
      "\"\<gen_57\>\"", ",", "\"\<gen_59\>\"", ",", "\"\<gen_71\>\"", ",", 
      "\"\<gen_87\>\"", ",", "\"\<gen_95\>\"", ",", "\"\<gen_97\>\"", ",", 
      "\"\<gen_130\>\"", ",", "\"\<gen_138\>\"", ",", "\"\<gen_148\>\"", ",", 
      "\"\<gen_154\>\"", ",", "\"\<gen_157\>\"", ",", "\"\<gen_159\>\"", ",", 
      "\"\<gen_164\>\"", ",", "\"\<gen_191\>\""}], "}"}], "//", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"getfullrun", "[", 
         RowBox[{"#", ",", "\"\<512\>\""}], "]"}], "&"}], ",", "#", ",", 
       RowBox[{"{", "1", "}"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.788514868328027*^9, 3.7885149387220497`*^9}, {
   3.788514970370749*^9, 3.7885149774363832`*^9}, {3.788518493225318*^9, 
   3.7885185212140512`*^9}, 3.788521394439686*^9, 3.7899109197870417`*^9, 
   3.789998226297244*^9, 3.798192810725361*^9, {3.798376119807674*^9, 
   3.798376127192388*^9}, {3.822130696903077*^9, 3.82213071169081*^9}, {
   3.822132156037613*^9, 3.822132168759006*^9}, {3.8231676724608307`*^9, 
   3.823167673273918*^9}, {3.823168115212427*^9, 3.823168115709388*^9}, {
   3.823174095892543*^9, 3.823174107203128*^9}, {3.823190200717875*^9, 
   3.8231902078098087`*^9}},ExpressionUUID->"df08441a-d8a1-4ad1-8255-\
0f1edee3c23d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DumpSave", "[", 
   RowBox[{
   "\"\</media/adam/mobile storage/ha/data2_100/genericruns512.mx\>\"", ",", 
    "genericruns512"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RunProcess", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<ls\>\"", ",", "\"\<-lh\>\"", ",", 
     "\"\</media/adam/mobile storage/ha/data2_100/genericruns512.mx\>\""}], 
    "}"}], ",", "\"\<StandardOutput\>\""}], "]"}]}], "Input",
 CellChangeTimes->{
  3.788000950989943*^9, 3.788001000223599*^9, {3.788515320416218*^9, 
   3.788515330793133*^9}, {3.798189180228775*^9, 3.798189185624344*^9}, {
   3.822130679968848*^9, 3.822130692006168*^9}, {3.822132179933175*^9, 
   3.822132190397275*^9}, {3.823167702163834*^9, 3.823167705124309*^9}, {
   3.823168175697626*^9, 3.8231681786274242`*^9}, {3.823190213179082*^9, 
   3.823190219020236*^9}},ExpressionUUID->"ccd95560-1a25-49a3-81bd-\
541c01879fa7"],

Cell[BoxData["\<\"-rw-rw-rw- 1 adam adam 1,7G feb 24 22:08 /media/adam/mobile \
storage/ha/data2_100/genericruns1024.mx\\n\"\>"], "Output",
 CellChangeTimes->{3.822137250348255*^9, 3.823167927354787*^9, 
  3.823189771342082*^9},
 CellLabel->
  "Out[277]=",ExpressionUUID->"da6c6049-eca7-41be-bbe3-0709def4d83d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"genericruns4096", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ";;", "16"}], "]"}], "]"}], "//", 
    RowBox[{"Function", "[", 
     RowBox[{"bulk", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Rho]\[Infinity]", "=", 
        RowBox[{
         RowBox[{"\[Rho]", "[", 
          RowBox[{"bulk", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{"\[Tau]", "[", 
           RowBox[{"bulk", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "/", "2"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"frame", ",", "\[IndentingNewLine]", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"length", ",", "tempdata", ",", "time", ",", "t"}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"time", "=", 
               RowBox[{"frame", "//", "\[Tau]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"t", "=", 
               RowBox[{"Exp", "[", 
                RowBox[{"time", "/", "2"}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"tempdata", "=", 
               RowBox[{"frame", "//", 
                RowBox[{
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{"J", "[", "#", "]"}], "\[IndentingNewLine]", ")"}], 
                 "&"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"length", "=", 
               RowBox[{"tempdata", "//", "Length"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"time", ",", 
                  RowBox[{"2", "Pi", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "/", "length"}]}], ",", 
                  RowBox[{"tempdata", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "length"}], "}"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
         "\[IndentingNewLine]", ",", "bulk"}], "]"}]}]}], "]"}]}], "//", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{"ListPlot3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", "1", "]"}]}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "1", ",", " ", "1"}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]", "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.78851379660106*^9, 3.788513847448958*^9}, {
   3.788519778161278*^9, 3.788519927322363*^9}, {3.788519973432865*^9, 
   3.788519975912817*^9}, {3.788520016838436*^9, 3.7885200223923693`*^9}, {
   3.788520065797592*^9, 3.7885200807361507`*^9}, {3.788520169952959*^9, 
   3.788520170029271*^9}, {3.788524788904272*^9, 3.788524790227406*^9}, 
   3.788524920536796*^9, 3.7885249613319483`*^9, {3.7885251530472*^9, 
   3.7885251628272676`*^9}, {3.788525207734568*^9, 3.788525209037561*^9}, {
   3.788525242338901*^9, 3.788525242521678*^9}, 3.788525292332776*^9, {
   3.790072405635768*^9, 3.790072409198036*^9}, {3.7900724568497877`*^9, 
   3.790072474511918*^9}, {3.790072569104727*^9, 3.790072572148999*^9}, {
   3.790074927925919*^9, 3.790074935629519*^9}, {3.79819952322358*^9, 
   3.798199550565785*^9}, {3.79836324523807*^9, 3.798363251633067*^9}, {
   3.798363499835843*^9, 3.798363509848843*^9}, {3.8165242631050043`*^9, 
   3.8165242879921923`*^9}, {3.816524321399823*^9, 3.816524367794271*^9}, {
   3.821967631381073*^9, 3.821967643092786*^9}, {3.821967762206009*^9, 
   3.821968023628323*^9}, {3.821968065823003*^9, 3.82196813480717*^9}, {
   3.821968182854299*^9, 3.8219682412994137`*^9}, {3.821968275677918*^9, 
   3.821968311656848*^9}, {3.821968343049943*^9, 3.821968393533518*^9}, {
   3.821968431528186*^9, 3.821968470268984*^9}, {3.8219685302158623`*^9, 
   3.8219685431788816`*^9}, {3.821968678221465*^9, 3.821968686201839*^9}, {
   3.821969236168798*^9, 3.821969507552348*^9}, {3.821969791877192*^9, 
   3.821969797289431*^9}, {3.823168563014577*^9, 3.823168582858267*^9}, {
   3.823249312324651*^9, 3.82324937404219*^9}, {3.823249412850402*^9, 
   3.823249497236693*^9}, {3.8232495690690613`*^9, 3.8232496460833187`*^9}, {
   3.823249783860482*^9, 3.82324980495016*^9}, {3.823249900520303*^9, 
   3.823249929325691*^9}, {3.8232500034402943`*^9, 3.823250270052137*^9}, {
   3.823265502311678*^9, 3.823265502501585*^9}, 3.8232655362585382`*^9, {
   3.8233356460745363`*^9, 3.823335696719906*^9}, {3.8233357859956627`*^9, 
   3.823335834314806*^9}, {3.823335973396003*^9, 3.823336075762721*^9}, {
   3.823336119592948*^9, 3.8233361664103613`*^9}, {3.823336197058836*^9, 
   3.823336271196198*^9}, 3.823336322864234*^9, {3.82333649633928*^9, 
   3.823336499300845*^9}, {3.8233365781212797`*^9, 3.823336612490646*^9}, {
   3.823338979461596*^9, 3.823339010628409*^9}, {3.8233391139971867`*^9, 
   3.823339256586623*^9}, {3.8233393469250793`*^9, 3.823339382285563*^9}, {
   3.823339414455756*^9, 3.823339415226488*^9}, {3.82333950711197*^9, 
   3.823339554753293*^9}, {3.823339611870208*^9, 3.8233396668271303`*^9}, {
   3.8233420836852217`*^9, 3.823342241468994*^9}, {3.8233496611456337`*^9, 
   3.823349680641448*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"c5be2478-c218-4f63-b8b6-68981949e5e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"genericruns4096", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "800"}], ";;", ";;", "2"}], "]"}], "]"}], "//", 
    RowBox[{"Function", "[", 
     RowBox[{"bulk", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l\[Infinity]", "=", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"frame", ",", "\[IndentingNewLine]", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"length", ",", "tempdata", ",", "time", ",", "t"}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"time", "=", 
               RowBox[{"frame", "//", "\[Tau]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"t", "=", 
               RowBox[{"Exp", "[", 
                RowBox[{"time", "/", "2"}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"tempdata", "=", 
               RowBox[{"frame", "//", 
                RowBox[{
                 RowBox[{"(", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"time", "/", "4"}], "]"}], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"time", "/", "4"}], "]"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"l", "[", "#", "]"}], "-", "l\[Infinity]"}], 
                    ")"}]}], "-", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"time", "/", "4"}], "]"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"l", "[", "#", "]"}], "-", "l\[Infinity]"}], 
                    ")"}]}], "]"}]}], ")"}]}], "\[IndentingNewLine]", ")"}], 
                 "&"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"length", "=", 
               RowBox[{"tempdata", "//", "Length"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"t", ",", 
                  RowBox[{"2", "Pi", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "/", "length"}]}], ",", 
                  RowBox[{"tempdata", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "length"}], "}"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
         "\[IndentingNewLine]", ",", "bulk"}], "]"}]}]}], "]"}]}], "//", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{"ListPlot3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", "1", "]"}]}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "1", ",", " ", "1"}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]", "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.78851379660106*^9, 3.788513847448958*^9}, {
   3.788519778161278*^9, 3.788519927322363*^9}, {3.788519973432865*^9, 
   3.788519975912817*^9}, {3.788520016838436*^9, 3.7885200223923693`*^9}, {
   3.788520065797592*^9, 3.7885200807361507`*^9}, {3.788520169952959*^9, 
   3.788520170029271*^9}, {3.788524788904272*^9, 3.788524790227406*^9}, 
   3.788524920536796*^9, 3.7885249613319483`*^9, {3.7885251530472*^9, 
   3.7885251628272676`*^9}, {3.788525207734568*^9, 3.788525209037561*^9}, {
   3.788525242338901*^9, 3.788525242521678*^9}, 3.788525292332776*^9, {
   3.790072405635768*^9, 3.790072409198036*^9}, {3.7900724568497877`*^9, 
   3.790072474511918*^9}, {3.790072569104727*^9, 3.790072572148999*^9}, {
   3.790074927925919*^9, 3.790074935629519*^9}, {3.79819952322358*^9, 
   3.798199550565785*^9}, {3.79836324523807*^9, 3.798363251633067*^9}, {
   3.798363499835843*^9, 3.798363509848843*^9}, {3.8165242631050043`*^9, 
   3.8165242879921923`*^9}, {3.816524321399823*^9, 3.816524367794271*^9}, {
   3.821967631381073*^9, 3.821967643092786*^9}, {3.821967762206009*^9, 
   3.821968023628323*^9}, {3.821968065823003*^9, 3.82196813480717*^9}, {
   3.821968182854299*^9, 3.8219682412994137`*^9}, {3.821968275677918*^9, 
   3.821968311656848*^9}, {3.821968343049943*^9, 3.821968393533518*^9}, {
   3.821968431528186*^9, 3.821968470268984*^9}, {3.8219685302158623`*^9, 
   3.8219685431788816`*^9}, {3.821968678221465*^9, 3.821968686201839*^9}, {
   3.821969236168798*^9, 3.821969507552348*^9}, {3.821969791877192*^9, 
   3.821969797289431*^9}, {3.823168563014577*^9, 3.823168582858267*^9}, {
   3.823249312324651*^9, 3.82324937404219*^9}, {3.823249412850402*^9, 
   3.823249497236693*^9}, {3.8232495690690613`*^9, 3.8232496460833187`*^9}, {
   3.823249783860482*^9, 3.82324980495016*^9}, {3.823249900520303*^9, 
   3.823249929325691*^9}, {3.8232500034402943`*^9, 3.823250270052137*^9}, {
   3.823265502311678*^9, 3.823265502501585*^9}, 3.8232655362585382`*^9, {
   3.8233356460745363`*^9, 3.823335696719906*^9}, {3.8233357859956627`*^9, 
   3.823335834314806*^9}, {3.823335973396003*^9, 3.823336075762721*^9}, {
   3.823336119592948*^9, 3.8233361664103613`*^9}, {3.823336197058836*^9, 
   3.823336271196198*^9}, 3.823336322864234*^9, {3.82333649633928*^9, 
   3.823336499300845*^9}, {3.8233365781212797`*^9, 3.823336612490646*^9}, {
   3.823338979461596*^9, 3.823339010628409*^9}, {3.8233391139971867`*^9, 
   3.823339256586623*^9}, {3.8233393469250793`*^9, 3.823339382285563*^9}, {
   3.823339414455756*^9, 3.823339415226488*^9}, {3.82333950711197*^9, 
   3.823339554753293*^9}, {3.823339611870208*^9, 3.823339621955497*^9}, {
   3.8233397951351757`*^9, 3.823339853340125*^9}, {3.82333988433967*^9, 
   3.823339890159401*^9}, {3.823339954961821*^9, 3.823339985588912*^9}, {
   3.823340222302526*^9, 3.823340267727024*^9}, {3.823340396341758*^9, 
   3.8233404030336103`*^9}, {3.823340459302536*^9, 3.82334053472167*^9}, {
   3.823340725229941*^9, 3.823340940848095*^9}, {3.8233411901401*^9, 
   3.823341217088571*^9}, {3.823341918395278*^9, 3.823341967861288*^9}, {
   3.823342000038159*^9, 3.823342011406007*^9}, {3.823342768108585*^9, 
   3.823342770161227*^9}, {3.823346694107482*^9, 3.823346702302692*^9}, {
   3.8233467403094187`*^9, 3.823346743292527*^9}, {3.823349811694344*^9, 
   3.823349822641638*^9}, {3.823349935301456*^9, 3.823349967130795*^9}, {
   3.8233500330405283`*^9, 3.823350075528829*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"b73447d7-8ad8-4830-9421-c53c272d50b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displotsgen", "[", 
    RowBox[{"data_", ",", "name_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "plot", ",", "n", ",", "path", ",", "temp", ",", "a", ",", "pdfize", 
       ",", "fit", ",", "ffit", ",", "ddata"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"pdfize", "[", "string_", "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ExportString", "[", 
            RowBox[{"string", ",", "\"\<PDF\>\""}], "]"}], "//", 
           RowBox[{
            RowBox[{"ImportString", "[", "#", "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "//", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"#", ",", 
            RowBox[{"ImageSize", "\[Rule]", "20"}]}], "]"}], "&"}]}]}], ";"}],
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"fit", "[", "ddata_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"lastnth", ",", "model", ",", "parameters"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"lastnth", "[", 
            RowBox[{"l_", ",", "nn_"}], "]"}], ":=", 
           RowBox[{"l", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"Length", "[", "l", "]"}], "/", "nn"}], "]"}]}], 
              ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"model", "=", 
           RowBox[{"b", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"+", "h"}], " ", "x"}], "*)"}], "+", "  ", 
            RowBox[{"e", " ", 
             RowBox[{"Sin", "[", " ", 
              RowBox[{"f", " ", 
               RowBox[{"(", " ", 
                RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"parameters", "=", 
           RowBox[{
            RowBox[{"ddata", "//", 
             RowBox[{
              RowBox[{"lastnth", "[", 
               RowBox[{"#", ",", 
                RowBox[{"2", "^", "2"}]}], "]"}], "&"}]}], "//", 
            RowBox[{
             RowBox[{"FindFit", "[", 
              RowBox[{"#", ",", "model", ",", 
               RowBox[{"{", 
                RowBox[{"b", ",", "e", ",", "f", ",", "g"}], 
                RowBox[{"(*", 
                 RowBox[{",", "h"}], "*)"}], "}"}], ",", "x", ",", 
               RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
               RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}], "&"}]}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"model", "/.", "parameters"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ddata", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"F", "[", 
            RowBox[{"data", ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], "*", 
                 RowBox[{"Mean", "[", " ", 
                  RowBox[{
                   RowBox[{"Ev", "[", "#", "]"}], 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}]}], 
                "&"}]}], "}"}], ",", "0"}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"F", "[", 
            RowBox[{"data", ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], "*", 
                 RowBox[{"Mean", "[", " ", 
                  RowBox[{
                   RowBox[{"Eq", "[", "#", "]"}], 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}]}], 
                "&"}]}], "}"}], ",", "0"}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"F", "[", 
            RowBox[{"data", ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], "*", 
                 RowBox[{"Mean", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Ev", "[", "#", "]"}], "+", 
                    RowBox[{"Eq", "[", "#", "]"}]}], ")"}], 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}]}], 
                "&"}]}], "}"}], ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"l\[Infinity]", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"l", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"ddata", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"F", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"\[Tau]", "[", "#", "]"}], "/", "4"}], "]"}], 
              RowBox[{"Max", "[", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"l", "[", "#", "]"}], "-", "l\[Infinity]"}], "]"}], 
               "]"}]}], "&"}]}], "}"}], ",", "0"}], "]"}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ffit", "=", 
         RowBox[{"fit", "[", 
          RowBox[{"ddata", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plot", "=", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{"ddata", "//", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{"#", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"All", ",", "All"}], "}"}], ",", "All"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Tau]\>\"", ",", "\"\<\>\""}], "}"}]}], 
            RowBox[{"(*", "\[IndentingNewLine]", 
             RowBox[{",", 
              RowBox[{"PlotLabels", "\[Rule]", 
               RowBox[{"Map", "[", 
                RowBox[{"pdfize", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(E\), \(V\)]\)\>\"", ",", 
                   "\"\<\!\(\*SubscriptBox[\(E\), \(Q\)]\)\>\"", ",", 
                   "\"\<E\>\""}], "}"}]}], "]"}]}]}], "*)"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Black", ",", 
                 RowBox[{"Dashing", "[", "0.02", "]"}], ",", 
                 RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Black", ",", "Dotted", ",", 
                 RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Black", ",", 
                 RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], "}"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"Framed", "[", 
                 RowBox[{"name", ",", 
                  RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                RowBox[{"ImageScaled", "[", 
                 RowBox[{"{", 
                  RowBox[{".2", ",", ".2"}], "}"}], "]"}]}], "]"}], 
              RowBox[{"(*", "\[IndentingNewLine]", 
               RowBox[{",", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Framed", "[", 
                   RowBox[{
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"ffit", ",", "3"}], "]"}], ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  
                  RowBox[{"ImageScaled", "[", 
                   RowBox[{"{", 
                    RowBox[{".7", ",", ".2"}], "}"}], "]"}]}], "]"}]}], 
               "*)"}], "\[IndentingNewLine]", "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], "&"}]}], 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{",", 
          RowBox[{"ContourPlot", "[", 
           RowBox[{
            RowBox[{"y", "\[Equal]", 
             RowBox[{"5", "/", "2"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
            RowBox[{"ContourStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}], "*)"}], 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{",", 
          RowBox[{"Plot", "[", 
           RowBox[{"ffit", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "10"}], ",", "40"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Purple"}], "}"}]}]}], "]"}]}], "*)"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"path", "=", 
       RowBox[{"\"\</tmp/tmp.JAbY0fYRhY/\>\"", "<>", "name"}]}], ";", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"plot", "//", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", 
             RowBox[{"AutoStyleOptions", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<HighlightFormattingErrors\>\"", "\[Rule]", "False"}], 
               "}"}]}]}], "]"}], "&"}]}], "//", 
         RowBox[{
          RowBox[{"Export", "[", 
           RowBox[{
            RowBox[{"path", "<>", "\"\<_e.pdf\>\""}], ",", "#", ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "2", "]"}]}], ",", 
            RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "False"}]}], 
           "]"}], "&"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "plot"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"genericruns4096", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"-", "1600"}], ";;", ";;", "1"}]}], "]"}], "]"}], "//", 
      RowBox[{
       RowBox[{"displotsgen", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Tau]", "[", "#", "]"}], ",", "#"}], "}"}], "&"}], 
           ",", "#"}], "]"}], ",", 
         RowBox[{"genericrunsnames", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "&"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"Infinity", ",", 
         RowBox[{"genericruns4096", "//", "Length"}]}], "]"}]}], "}"}]}], 
    "]"}], "//", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"#", ",", 
      RowBox[{"UpTo", "[", "5", "]"}]}], "]"}], "&"}]}], "//", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->{{3.734111679307437*^9, 3.734111686147237*^9}, {
   3.734112092824685*^9, 3.7341121283924913`*^9}, {3.7341122771285152`*^9, 
   3.7341122851985483`*^9}, {3.73411233154056*^9, 3.734112333648162*^9}, {
   3.7341123935553083`*^9, 3.734112420756374*^9}, {3.734112538980957*^9, 
   3.734112564471354*^9}, {3.734112657722416*^9, 3.734112681714978*^9}, {
   3.7341130998817463`*^9, 3.734113103030385*^9}, {3.734113376263104*^9, 
   3.734113402469101*^9}, {3.734113479636321*^9, 3.734113565887414*^9}, {
   3.73411418002976*^9, 3.7341141802596083`*^9}, {3.7341142188062563`*^9, 
   3.7341142198849983`*^9}, {3.734114436199589*^9, 3.7341144397536793`*^9}, {
   3.734200766511901*^9, 3.734200803564721*^9}, {3.734202430311289*^9, 
   3.734202443609652*^9}, {3.734202503777926*^9, 3.7342025078435783`*^9}, {
   3.734202605692236*^9, 3.734202622124793*^9}, {3.7342038506202583`*^9, 
   3.734203853807966*^9}, {3.734203937250855*^9, 3.734203986241682*^9}, {
   3.734276418717387*^9, 3.7342764205661373`*^9}, {3.734276781818337*^9, 
   3.7342767824741373`*^9}, {3.734376821406353*^9, 3.734376837721684*^9}, {
   3.734377372597094*^9, 3.7343773841731033`*^9}, {3.734377507155985*^9, 
   3.73437753228104*^9}, {3.734377644349265*^9, 3.7343776648620663`*^9}, {
   3.752568456300537*^9, 3.752568472125667*^9}, 3.75256874287533*^9, {
   3.752853783613166*^9, 3.7528538237540627`*^9}, {3.752853903735858*^9, 
   3.7528539234154053`*^9}, {3.752854026111683*^9, 3.752854027362976*^9}, 
   3.752854239770626*^9, {3.752854271252092*^9, 3.752854352452404*^9}, {
   3.752854576892684*^9, 3.752854612503189*^9}, {3.752854900623654*^9, 
   3.752854925265416*^9}, 3.752854987097383*^9, {3.7528551023351097`*^9, 
   3.7528551030735598`*^9}, {3.75285517501735*^9, 3.752855222608981*^9}, {
   3.75285535673763*^9, 3.752855357189624*^9}, {3.752855439307392*^9, 
   3.752855482672017*^9}, {3.752855575231881*^9, 3.752855592456545*^9}, {
   3.752855782303948*^9, 3.7528557867673407`*^9}, 3.7533009149642887`*^9, {
   3.753301008084036*^9, 3.753301027318597*^9}, {3.75330113994585*^9, 
   3.7533011957590933`*^9}, {3.7533012675169697`*^9, 3.753301330090363*^9}, {
   3.753301378866474*^9, 3.7533014152474318`*^9}, {3.753301485110859*^9, 
   3.753301499279772*^9}, {3.753301558322606*^9, 3.753301615785236*^9}, 
   3.753301890832841*^9, {3.753302138793089*^9, 3.7533021390818872`*^9}, {
   3.7533021797302513`*^9, 3.753302180044148*^9}, {3.753302304908997*^9, 
   3.753302374643673*^9}, {3.753302599866349*^9, 3.753302631965233*^9}, {
   3.753302871325047*^9, 3.753302908880001*^9}, {3.753303026892421*^9, 
   3.753303035364066*^9}, {3.753303073487094*^9, 3.753303084869728*^9}, {
   3.753303714791267*^9, 3.753303718702036*^9}, {3.7533037948233232`*^9, 
   3.7533038559461317`*^9}, 3.753303932365971*^9, {3.753371976776051*^9, 
   3.753371988136856*^9}, {3.7533721223043413`*^9, 3.753372127947098*^9}, {
   3.753372447843685*^9, 3.753372456504154*^9}, {3.753372628001562*^9, 
   3.753372637796585*^9}, {3.753373193829606*^9, 3.753373198407915*^9}, {
   3.822471054942236*^9, 3.822471068072792*^9}, {3.822471221430901*^9, 
   3.822471319544322*^9}, {3.822471400296097*^9, 3.8224714210560017`*^9}, {
   3.82247166618075*^9, 3.8224716963761463`*^9}, {3.8224717390315742`*^9, 
   3.822471771135901*^9}, {3.8224718627786417`*^9, 3.8224719058715563`*^9}, {
   3.822471947147064*^9, 3.822472108329884*^9}, {3.82247213981689*^9, 
   3.822472140415238*^9}, {3.822472264503126*^9, 3.822472267342*^9}, 
   3.822472338397002*^9, {3.822472390775391*^9, 3.822472420883401*^9}, {
   3.8224724999378977`*^9, 3.822472523953147*^9}, {3.82247269702264*^9, 
   3.822472697442165*^9}, {3.8224727413565083`*^9, 3.822472774293048*^9}, {
   3.822473040404366*^9, 3.8224731067409067`*^9}, {3.8224731579086533`*^9, 
   3.8224731895234423`*^9}, {3.822478849053377*^9, 3.822478970675891*^9}, {
   3.822479043532753*^9, 3.822479044661797*^9}, 3.822479209137651*^9, {
   3.822479259817973*^9, 3.8224792691871243`*^9}, {3.82247933804517*^9, 
   3.8224793381762457`*^9}, {3.822479422829262*^9, 3.8224794267773857`*^9}, {
   3.8224795846706038`*^9, 3.822479586768873*^9}, 3.822479623296966*^9, {
   3.822479698609776*^9, 3.822479714076812*^9}, {3.8224797641534777`*^9, 
   3.822479771167923*^9}, 3.82247981123658*^9, {3.8224798969898367`*^9, 
   3.8224800037262907`*^9}, {3.822480040846719*^9, 3.822480227938098*^9}, {
   3.822480293831061*^9, 3.822480523651141*^9}, 3.822480766394085*^9, 
   3.8224808050093107`*^9, {3.822480852469103*^9, 3.822480855338524*^9}, {
   3.8224808875344057`*^9, 3.82248091702573*^9}, {3.822481028566362*^9, 
   3.822481095746381*^9}, {3.822549921305852*^9, 3.822549984830596*^9}, {
   3.822550120298499*^9, 3.822550149938314*^9}, {3.822550245458713*^9, 
   3.8225503081807013`*^9}, {3.822550342465083*^9, 3.82255061386512*^9}, {
   3.8225508339822693`*^9, 3.822550860702807*^9}, 3.822550890777425*^9, {
   3.822550942866157*^9, 3.822551003672193*^9}, {3.822551043799696*^9, 
   3.822551047987514*^9}, {3.822551155298085*^9, 3.822551164748826*^9}, {
   3.822551282038629*^9, 3.8225513271163692`*^9}, {3.822551384973235*^9, 
   3.822551398940672*^9}, {3.822551498362903*^9, 3.822551510752151*^9}, {
   3.822551566516445*^9, 3.8225516024558973`*^9}, 3.822551657697699*^9, {
   3.822551699521792*^9, 3.822551703967045*^9}, {3.822551769063229*^9, 
   3.822551773153226*^9}, 3.82255181442211*^9, {3.82255204444042*^9, 
   3.822552065358077*^9}, {3.8225520955612803`*^9, 3.822552148084449*^9}, {
   3.822552227684927*^9, 3.822552244722649*^9}, {3.822552277640114*^9, 
   3.822552416665766*^9}, {3.822552512151853*^9, 3.822552512744542*^9}, {
   3.823168644566662*^9, 3.8231687633958282`*^9}, {3.823168900842195*^9, 
   3.823168914388221*^9}, {3.8231689473282213`*^9, 3.823169088935145*^9}, {
   3.82316911938142*^9, 3.823169148610961*^9}, 3.82316919001668*^9, {
   3.823169628276*^9, 3.823169639765256*^9}, {3.823169671793853*^9, 
   3.823169673742196*^9}, {3.8231902359739437`*^9, 3.8231902761307697`*^9}, {
   3.8231903069351797`*^9, 3.823190318455883*^9}, {3.8231903659398746`*^9, 
   3.823190407022567*^9}, {3.8231904771158113`*^9, 3.823190477660839*^9}, {
   3.8231905434576063`*^9, 3.8231906678613234`*^9}, {3.823248582997567*^9, 
   3.823248615018423*^9}, {3.8232486692422657`*^9, 3.8232487348405523`*^9}, {
   3.8232487701395817`*^9, 3.823248774323641*^9}, {3.823248804858261*^9, 
   3.823248910236824*^9}, {3.823248947767004*^9, 3.823249027585412*^9}, {
   3.8232490836164207`*^9, 3.823249085345175*^9}, {3.8232491350591583`*^9, 
   3.823249194201681*^9}, {3.823340029974555*^9, 3.823340171482798*^9}, {
   3.8233412463013268`*^9, 3.8233413334181547`*^9}, 3.823341395324635*^9, 
   3.823341432716361*^9, {3.823341473770741*^9, 3.823341570802569*^9}, {
   3.823341624181237*^9, 3.823341648661127*^9}, {3.823341704566114*^9, 
   3.823341728569672*^9}, {3.823341763374381*^9, 3.823341836814064*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"dc1831d3-6c00-4047-8129-bc8a034cc8f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displotsgen", "[", 
    RowBox[{"data_", ",", "name_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "plot", ",", "n", ",", "path", ",", "temp", ",", "a", ",", "pdfize", 
       ",", "fit", ",", "ffit", ",", "ddata"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"pdfize", "[", "string_", "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ExportString", "[", 
            RowBox[{"string", ",", "\"\<PDF\>\""}], "]"}], "//", 
           RowBox[{
            RowBox[{"ImportString", "[", "#", "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "//", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"#", ",", 
            RowBox[{"ImageSize", "\[Rule]", "20"}]}], "]"}], "&"}]}]}], ";"}],
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"fit", "[", "ddata_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"lastnth", ",", "model", ",", "parameters"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"lastnth", "[", 
            RowBox[{"l_", ",", "nn_"}], "]"}], ":=", 
           RowBox[{"l", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"Length", "[", "l", "]"}], "/", "nn"}], "]"}]}], 
              ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"model", "=", 
           RowBox[{"b", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"+", "h"}], " ", "x"}], "*)"}], "+", "  ", 
            RowBox[{"e", " ", 
             RowBox[{"Sin", "[", " ", 
              RowBox[{"f", " ", 
               RowBox[{"(", " ", 
                RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"parameters", "=", 
           RowBox[{
            RowBox[{"ddata", "//", 
             RowBox[{
              RowBox[{"lastnth", "[", 
               RowBox[{"#", ",", 
                RowBox[{"2", "^", "2"}]}], "]"}], "&"}]}], "//", 
            RowBox[{
             RowBox[{"FindFit", "[", 
              RowBox[{"#", ",", "model", ",", 
               RowBox[{"{", 
                RowBox[{"b", ",", "e", ",", "f", ",", "g"}], 
                RowBox[{"(*", 
                 RowBox[{",", "h"}], "*)"}], "}"}], ",", "x", ",", 
               RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
               RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}], "&"}]}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"model", "/.", "parameters"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ddata", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"F", "[", 
            RowBox[{"data", ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], "*", 
                 RowBox[{"Mean", "[", " ", 
                  RowBox[{
                   RowBox[{"Ev", "[", "#", "]"}], 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}]}], 
                "&"}]}], "}"}], ",", "0"}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"F", "[", 
            RowBox[{"data", ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], "*", 
                 RowBox[{"Mean", "[", " ", 
                  RowBox[{
                   RowBox[{"Eq", "[", "#", "]"}], 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}]}], 
                "&"}]}], "}"}], ",", "0"}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"F", "[", 
            RowBox[{"data", ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], "*", 
                 RowBox[{"Mean", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Ev", "[", "#", "]"}], "+", 
                    RowBox[{"Eq", "[", "#", "]"}]}], ")"}], 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}]}], 
                "&"}]}], "}"}], ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ddata", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"F", "[", 
           RowBox[{"data", ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"\[Tau]", "[", "#", "]"}], "/", "4"}], "]"}], 
                RowBox[{"Mean", "[", " ", 
                 RowBox[{
                  RowBox[{"\[Rho]", "[", "#", "]"}], "-", 
                  RowBox[{
                   RowBox[{"\[Tau]", "[", "#", "]"}], "/", "2"}], "-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Rho]", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "-", 
                    
                    RowBox[{
                    RowBox[{"\[Tau]", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "/", 
                    "2"}]}], ")"}]}], "]"}]}], "&"}]}], "}"}], ",", "0"}], 
           "]"}], "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ddata", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"F", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"\[Tau]", "[", "#", "]"}], "/", "4"}], "]"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], "*", 
                RowBox[{"Mean", "[", " ", 
                 RowBox[{
                  RowBox[{"ltau", "[", "#", "]"}], 
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}]}], 
               ")"}]}], "&"}]}], "}"}], ",", "0"}], "]"}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ffit", "=", 
       RowBox[{"fit", "[", 
        RowBox[{"ddata", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"plot", "=", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ddata", "//", 
          RowBox[{
           RowBox[{"ListLinePlot", "[", 
            RowBox[{"#", "\[IndentingNewLine]", ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"All", ",", "All"}], "}"}], ",", "All"}], "}"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<\[Tau]\>\"", ",", "\"\<\>\""}], "}"}]}], 
             RowBox[{"(*", "\[IndentingNewLine]", 
              RowBox[{",", 
               RowBox[{"PlotLabels", "\[Rule]", 
                RowBox[{"Map", "[", 
                 RowBox[{"pdfize", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(E\), \(V\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(E\), \(Q\)]\)\>\"", ",", 
                    "\"\<E\>\""}], "}"}]}], "]"}]}]}], "*)"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Black", ",", 
                  RowBox[{"Dashing", "[", "0.02", "]"}], ",", 
                  RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Black", ",", "Dotted", ",", 
                  RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Black", ",", 
                  RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], 
               "}"}]}], "\[IndentingNewLine]", ",", 
             RowBox[{"InterpolationOrder", "\[Rule]", "2"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Epilog", "\[Rule]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Framed", "[", 
                   RowBox[{"name", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  
                  RowBox[{"ImageScaled", "[", 
                   RowBox[{"{", 
                    RowBox[{".2", ",", ".2"}], "}"}], "]"}]}], "]"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Framed", "[", 
                   RowBox[{
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"ffit", ",", "3"}], "]"}], ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  
                  RowBox[{"ImageScaled", "[", 
                   RowBox[{"{", 
                    RowBox[{".7", ",", ".2"}], "}"}], "]"}]}], "]"}]}], 
               "}"}]}]}], "\[IndentingNewLine]", "]"}], "&"}]}], 
         RowBox[{"(*", "\[IndentingNewLine]", 
          RowBox[{",", 
           RowBox[{"ContourPlot", "[", 
            RowBox[{
             RowBox[{"y", "\[Equal]", 
              RowBox[{"5", "/", "2"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
             RowBox[{"ContourStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}], "*)"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Plot", "[", 
          RowBox[{"ffit", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "10"}], ",", "40"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Purple"}], "}"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"path", "=", 
       RowBox[{"\"\</tmp/tmp.JAbY0fYRhY/\>\"", "<>", "name"}]}], ";", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"plot", "//", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", 
             RowBox[{"AutoStyleOptions", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<HighlightFormattingErrors\>\"", "\[Rule]", "False"}], 
               "}"}]}]}], "]"}], "&"}]}], "//", 
         RowBox[{
          RowBox[{"Export", "[", 
           RowBox[{
            RowBox[{"path", "<>", "\"\<_e.pdf\>\""}], ",", "#", ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "2", "]"}]}], ",", 
            RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "False"}]}], 
           "]"}], "&"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "plot"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"genericruns1024", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"-", "2000"}], ";;", ";;", "16"}]}], "]"}], "]"}], "//", 
      RowBox[{
       RowBox[{"displotsgen", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Tau]", "[", "#", "]"}], ",", "#"}], "}"}], "&"}], 
           ",", "#"}], "]"}], ",", 
         RowBox[{"genericrunsnames", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "&"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"Infinity", ",", 
         RowBox[{"genericruns4096", "//", "Length"}]}], "]"}]}], "}"}]}], 
    "]"}], "//", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"#", ",", 
      RowBox[{"UpTo", "[", "5", "]"}]}], "]"}], "&"}]}], "//", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->{{3.734111679307437*^9, 3.734111686147237*^9}, {
   3.734112092824685*^9, 3.7341121283924913`*^9}, {3.7341122771285152`*^9, 
   3.7341122851985483`*^9}, {3.73411233154056*^9, 3.734112333648162*^9}, {
   3.7341123935553083`*^9, 3.734112420756374*^9}, {3.734112538980957*^9, 
   3.734112564471354*^9}, {3.734112657722416*^9, 3.734112681714978*^9}, {
   3.7341130998817463`*^9, 3.734113103030385*^9}, {3.734113376263104*^9, 
   3.734113402469101*^9}, {3.734113479636321*^9, 3.734113565887414*^9}, {
   3.73411418002976*^9, 3.7341141802596083`*^9}, {3.7341142188062563`*^9, 
   3.7341142198849983`*^9}, {3.734114436199589*^9, 3.7341144397536793`*^9}, {
   3.734200766511901*^9, 3.734200803564721*^9}, {3.734202430311289*^9, 
   3.734202443609652*^9}, {3.734202503777926*^9, 3.7342025078435783`*^9}, {
   3.734202605692236*^9, 3.734202622124793*^9}, {3.7342038506202583`*^9, 
   3.734203853807966*^9}, {3.734203937250855*^9, 3.734203986241682*^9}, {
   3.734276418717387*^9, 3.7342764205661373`*^9}, {3.734276781818337*^9, 
   3.7342767824741373`*^9}, {3.734376821406353*^9, 3.734376837721684*^9}, {
   3.734377372597094*^9, 3.7343773841731033`*^9}, {3.734377507155985*^9, 
   3.73437753228104*^9}, {3.734377644349265*^9, 3.7343776648620663`*^9}, {
   3.752568456300537*^9, 3.752568472125667*^9}, 3.75256874287533*^9, {
   3.752853783613166*^9, 3.7528538237540627`*^9}, {3.752853903735858*^9, 
   3.7528539234154053`*^9}, {3.752854026111683*^9, 3.752854027362976*^9}, 
   3.752854239770626*^9, {3.752854271252092*^9, 3.752854352452404*^9}, {
   3.752854576892684*^9, 3.752854612503189*^9}, {3.752854900623654*^9, 
   3.752854925265416*^9}, 3.752854987097383*^9, {3.7528551023351097`*^9, 
   3.7528551030735598`*^9}, {3.75285517501735*^9, 3.752855222608981*^9}, {
   3.75285535673763*^9, 3.752855357189624*^9}, {3.752855439307392*^9, 
   3.752855482672017*^9}, {3.752855575231881*^9, 3.752855592456545*^9}, {
   3.752855782303948*^9, 3.7528557867673407`*^9}, 3.7533009149642887`*^9, {
   3.753301008084036*^9, 3.753301027318597*^9}, {3.75330113994585*^9, 
   3.7533011957590933`*^9}, {3.7533012675169697`*^9, 3.753301330090363*^9}, {
   3.753301378866474*^9, 3.7533014152474318`*^9}, {3.753301485110859*^9, 
   3.753301499279772*^9}, {3.753301558322606*^9, 3.753301615785236*^9}, 
   3.753301890832841*^9, {3.753302138793089*^9, 3.7533021390818872`*^9}, {
   3.7533021797302513`*^9, 3.753302180044148*^9}, {3.753302304908997*^9, 
   3.753302374643673*^9}, {3.753302599866349*^9, 3.753302631965233*^9}, {
   3.753302871325047*^9, 3.753302908880001*^9}, {3.753303026892421*^9, 
   3.753303035364066*^9}, {3.753303073487094*^9, 3.753303084869728*^9}, {
   3.753303714791267*^9, 3.753303718702036*^9}, {3.7533037948233232`*^9, 
   3.7533038559461317`*^9}, 3.753303932365971*^9, {3.753371976776051*^9, 
   3.753371988136856*^9}, {3.7533721223043413`*^9, 3.753372127947098*^9}, {
   3.753372447843685*^9, 3.753372456504154*^9}, {3.753372628001562*^9, 
   3.753372637796585*^9}, {3.753373193829606*^9, 3.753373198407915*^9}, {
   3.822471054942236*^9, 3.822471068072792*^9}, {3.822471221430901*^9, 
   3.822471319544322*^9}, {3.822471400296097*^9, 3.8224714210560017`*^9}, {
   3.82247166618075*^9, 3.8224716963761463`*^9}, {3.8224717390315742`*^9, 
   3.822471771135901*^9}, {3.8224718627786417`*^9, 3.8224719058715563`*^9}, {
   3.822471947147064*^9, 3.822472108329884*^9}, {3.82247213981689*^9, 
   3.822472140415238*^9}, {3.822472264503126*^9, 3.822472267342*^9}, 
   3.822472338397002*^9, {3.822472390775391*^9, 3.822472420883401*^9}, {
   3.8224724999378977`*^9, 3.822472523953147*^9}, {3.82247269702264*^9, 
   3.822472697442165*^9}, {3.8224727413565083`*^9, 3.822472774293048*^9}, {
   3.822473040404366*^9, 3.8224731067409067`*^9}, {3.8224731579086533`*^9, 
   3.8224731895234423`*^9}, {3.822478849053377*^9, 3.822478970675891*^9}, {
   3.822479043532753*^9, 3.822479044661797*^9}, 3.822479209137651*^9, {
   3.822479259817973*^9, 3.8224792691871243`*^9}, {3.82247933804517*^9, 
   3.8224793381762457`*^9}, {3.822479422829262*^9, 3.8224794267773857`*^9}, {
   3.8224795846706038`*^9, 3.822479586768873*^9}, 3.822479623296966*^9, {
   3.822479698609776*^9, 3.822479714076812*^9}, {3.8224797641534777`*^9, 
   3.822479771167923*^9}, 3.82247981123658*^9, {3.8224798969898367`*^9, 
   3.8224800037262907`*^9}, {3.822480040846719*^9, 3.822480227938098*^9}, {
   3.822480293831061*^9, 3.822480523651141*^9}, 3.822480766394085*^9, 
   3.8224808050093107`*^9, {3.822480852469103*^9, 3.822480855338524*^9}, {
   3.8224808875344057`*^9, 3.82248091702573*^9}, {3.822481028566362*^9, 
   3.822481095746381*^9}, {3.822549921305852*^9, 3.822549984830596*^9}, {
   3.822550120298499*^9, 3.822550149938314*^9}, {3.822550245458713*^9, 
   3.8225503081807013`*^9}, {3.822550342465083*^9, 3.82255061386512*^9}, {
   3.8225508339822693`*^9, 3.822550860702807*^9}, 3.822550890777425*^9, {
   3.822550942866157*^9, 3.822551003672193*^9}, {3.822551043799696*^9, 
   3.822551047987514*^9}, {3.822551155298085*^9, 3.822551164748826*^9}, {
   3.822551282038629*^9, 3.8225513271163692`*^9}, {3.822551384973235*^9, 
   3.822551398940672*^9}, {3.822551498362903*^9, 3.822551510752151*^9}, {
   3.822551566516445*^9, 3.8225516024558973`*^9}, 3.822551657697699*^9, {
   3.822551699521792*^9, 3.822551703967045*^9}, {3.822551769063229*^9, 
   3.822551773153226*^9}, 3.82255181442211*^9, {3.82255204444042*^9, 
   3.822552065358077*^9}, {3.8225520955612803`*^9, 3.822552148084449*^9}, {
   3.822552227684927*^9, 3.822552244722649*^9}, {3.822552277640114*^9, 
   3.822552416665766*^9}, {3.822552512151853*^9, 3.822552512744542*^9}, {
   3.823168644566662*^9, 3.8231687633958282`*^9}, {3.823168900842195*^9, 
   3.823168914388221*^9}, {3.8231689473282213`*^9, 3.823169088935145*^9}, {
   3.82316911938142*^9, 3.823169148610961*^9}, 3.82316919001668*^9, {
   3.823169628276*^9, 3.823169639765256*^9}, {3.823169671793853*^9, 
   3.823169673742196*^9}, {3.8231902359739437`*^9, 3.8231902761307697`*^9}, {
   3.8231903069351797`*^9, 3.823190318455883*^9}, {3.8231903659398746`*^9, 
   3.823190407022567*^9}, {3.8231904771158113`*^9, 3.823190477660839*^9}, {
   3.8231905434576063`*^9, 3.8231906678613234`*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"e1184721-4d1b-4bb1-95db-250a2b320ad5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pi", "/", "2"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.823169196501436*^9, 3.823169198846698*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"cc2279d0-2cfc-4641-b030-6857addb7725"],

Cell[BoxData["1.5707963267948966`"], "Output",
 CellChangeTimes->{3.823169199482081*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"94fb1fa6-7260-4643-a4c3-c67683f12558"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displotsgen", "[", 
    RowBox[{"data_", ",", "name_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "plot", ",", "n", ",", "path", ",", "temp", ",", "a", ",", "pdfize", 
       ",", "fit", ",", "ffit", ",", "ddata"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"pdfize", "[", "string_", "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ExportString", "[", 
            RowBox[{"string", ",", "\"\<PDF\>\""}], "]"}], "//", 
           RowBox[{
            RowBox[{"ImportString", "[", "#", "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "//", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"#", ",", 
            RowBox[{"ImageSize", "\[Rule]", "20"}]}], "]"}], "&"}]}]}], ";"}],
       "\[IndentingNewLine]", "*)"}], 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"fit", "[", "ddata_", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lastnth", ",", "model", ",", "parameters"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"lastnth", "[", 
             RowBox[{"l_", ",", "nn_"}], "]"}], ":=", 
            RowBox[{"l", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"Length", "[", "l", "]"}], "/", "nn"}], "]"}]}], 
               ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"model", "=", 
            RowBox[{"b", "+", "  ", 
             RowBox[{"e", " ", 
              RowBox[{"Sin", "[", " ", 
               RowBox[{"f", " ", 
                RowBox[{"(", " ", 
                 RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"parameters", "=", 
            RowBox[{
             RowBox[{"ddata", "//", 
              RowBox[{
               RowBox[{"lastnth", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"2", "^", "2"}]}], "]"}], "&"}]}], "//", 
             RowBox[{
              RowBox[{"FindFit", "[", 
               RowBox[{"#", ",", "model", ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", "e", ",", "f", ",", "g"}], "}"}], ",", "x",
                 ",", 
                RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
                RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}], 
              "&"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"model", "/.", "parameters"}]}]}], "\[IndentingNewLine]", 
         "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ddata", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"F", "[", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", 
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{
               RowBox[{"\[Lambda]", "[", "#", "]"}], "-", 
               RowBox[{"4", 
                RowBox[{"\[Tau]", "[", "#", "]"}]}]}], "]"}], "&"}]}], "}"}], 
          ",", "0"}], "]"}], 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{",", 
          RowBox[{"F", "[", 
           RowBox[{"data", ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], "*", 
                RowBox[{"Mean", "[", " ", 
                 RowBox[{
                  RowBox[{"Eq", "[", "#", "]"}], 
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}]}], 
               "&"}]}], "}"}], ",", "0"}], "]"}], "\[IndentingNewLine]", ",", 
          
          RowBox[{"F", "[", 
           RowBox[{"data", ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], "*", 
                RowBox[{"Mean", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Ev", "[", "#", "]"}], "+", 
                    RowBox[{"Eq", "[", "#", "]"}]}], ")"}], 
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[Rho]", "[", "#", "]"}], "]"}]}], "]"}]}], 
               "&"}]}], "}"}], ",", "0"}], "]"}]}], "*)"}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ffit", "=", 
         RowBox[{"fit", "[", 
          RowBox[{"ddata", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"plot", "=", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{"ddata", "//", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{"#", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Tau]\>\"", ",", "\"\<\>\""}], "}"}]}], 
            RowBox[{"(*", 
             RowBox[{"(*", "\[IndentingNewLine]", 
              RowBox[{",", 
               RowBox[{"PlotLabels", "\[Rule]", 
                RowBox[{"Map", "[", 
                 RowBox[{"pdfize", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(E\), \(V\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(E\), \(Q\)]\)\>\"", ",", 
                    "\"\<E\>\""}], "}"}]}], "]"}]}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Black", ",", 
                   RowBox[{"Dashing", "[", "0.02", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Black", ",", "Dotted", ",", 
                   RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Black", ",", 
                   RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], 
                "}"}]}]}], "*)"}], "\[IndentingNewLine]", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"Framed", "[", 
                 RowBox[{"name", ",", 
                  RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                RowBox[{"ImageScaled", "[", 
                 RowBox[{"{", 
                  RowBox[{".2", ",", ".2"}], "}"}], "]"}]}], "]"}], 
              RowBox[{"(*", "\[IndentingNewLine]", 
               RowBox[{",", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"Framed", "[", 
                   RowBox[{
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"ffit", ",", "2"}], "]"}], ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  
                  RowBox[{"ImageScaled", "[", 
                   RowBox[{"{", 
                    RowBox[{".7", ",", ".2"}], "}"}], "]"}]}], "]"}]}], 
               "*)"}], "\[IndentingNewLine]", "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], "&"}]}], 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{",", 
          RowBox[{"ContourPlot", "[", 
           RowBox[{
            RowBox[{"y", "\[Equal]", 
             RowBox[{"5", "/", "2"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
            RowBox[{"ContourStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Plot", "[", 
           RowBox[{"ffit", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "10"}], ",", "40"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Purple"}], "}"}]}]}], "]"}]}], "*)"}], 
        "\[IndentingNewLine]", "]"}]}], ";", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"path", "=", 
         RowBox[{"\"\</tmp/tmp.JAbY0fYRhY/\>\"", "<>", "name"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plot", "//", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", 
             RowBox[{"AutoStyleOptions", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<HighlightFormattingErrors\>\"", "\[Rule]", "False"}], 
               "}"}]}]}], "]"}], "&"}]}], "//", 
         RowBox[{
          RowBox[{"Export", "[", 
           RowBox[{
            RowBox[{"path", "<>", "\"\<_e.pdf\>\""}], ",", "#", ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Scaled", "[", "2", "]"}]}], ",", 
            RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "False"}]}], 
           "]"}], "&"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "plot"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"genericruns", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{";;", ";;", "128"}]}], "]"}], "]"}], "//", 
      RowBox[{
       RowBox[{"displotsgen", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Tau]", "[", "#", "]"}], ",", "#"}], "}"}], "&"}], 
           ",", "#"}], "]"}], ",", 
         RowBox[{"genericrunsnames", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "&"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"10", ",", 
         RowBox[{"genericruns", "//", "Length"}]}], "]"}]}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"#", ",", 
      RowBox[{"UpTo", "[", "5", "]"}]}], "]"}], "&"}]}], "//", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->{{3.734111679307437*^9, 3.734111686147237*^9}, {
   3.734112092824685*^9, 3.7341121283924913`*^9}, {3.7341122771285152`*^9, 
   3.7341122851985483`*^9}, {3.73411233154056*^9, 3.734112333648162*^9}, {
   3.7341123935553083`*^9, 3.734112420756374*^9}, {3.734112538980957*^9, 
   3.734112564471354*^9}, {3.734112657722416*^9, 3.734112681714978*^9}, {
   3.7341130998817463`*^9, 3.734113103030385*^9}, {3.734113376263104*^9, 
   3.734113402469101*^9}, {3.734113479636321*^9, 3.734113565887414*^9}, {
   3.73411418002976*^9, 3.7341141802596083`*^9}, {3.7341142188062563`*^9, 
   3.7341142198849983`*^9}, {3.734114436199589*^9, 3.7341144397536793`*^9}, {
   3.734200766511901*^9, 3.734200803564721*^9}, {3.734202430311289*^9, 
   3.734202443609652*^9}, {3.734202503777926*^9, 3.7342025078435783`*^9}, {
   3.734202605692236*^9, 3.734202622124793*^9}, {3.7342038506202583`*^9, 
   3.734203853807966*^9}, {3.734203937250855*^9, 3.734203986241682*^9}, {
   3.734276418717387*^9, 3.7342764205661373`*^9}, {3.734276781818337*^9, 
   3.7342767824741373`*^9}, {3.734376821406353*^9, 3.734376837721684*^9}, {
   3.734377372597094*^9, 3.7343773841731033`*^9}, {3.734377507155985*^9, 
   3.73437753228104*^9}, {3.734377644349265*^9, 3.7343776648620663`*^9}, {
   3.752568456300537*^9, 3.752568472125667*^9}, 3.75256874287533*^9, {
   3.752853783613166*^9, 3.7528538237540627`*^9}, {3.752853903735858*^9, 
   3.7528539234154053`*^9}, {3.752854026111683*^9, 3.752854027362976*^9}, 
   3.752854239770626*^9, {3.752854271252092*^9, 3.752854352452404*^9}, {
   3.752854576892684*^9, 3.752854612503189*^9}, {3.752854900623654*^9, 
   3.752854925265416*^9}, 3.752854987097383*^9, {3.7528551023351097`*^9, 
   3.7528551030735598`*^9}, {3.75285517501735*^9, 3.752855222608981*^9}, {
   3.75285535673763*^9, 3.752855357189624*^9}, {3.752855439307392*^9, 
   3.752855482672017*^9}, {3.752855575231881*^9, 3.752855592456545*^9}, {
   3.752855782303948*^9, 3.7528557867673407`*^9}, 3.7533009149642887`*^9, {
   3.753301008084036*^9, 3.753301027318597*^9}, {3.75330113994585*^9, 
   3.7533011957590933`*^9}, {3.7533012675169697`*^9, 3.753301330090363*^9}, {
   3.753301378866474*^9, 3.7533014152474318`*^9}, {3.753301485110859*^9, 
   3.753301499279772*^9}, {3.753301558322606*^9, 3.753301615785236*^9}, 
   3.753301890832841*^9, {3.753302138793089*^9, 3.7533021390818872`*^9}, {
   3.7533021797302513`*^9, 3.753302180044148*^9}, {3.753302304908997*^9, 
   3.753302374643673*^9}, {3.753302599866349*^9, 3.753302631965233*^9}, {
   3.753302871325047*^9, 3.753302908880001*^9}, {3.753303026892421*^9, 
   3.753303035364066*^9}, {3.753303073487094*^9, 3.753303084869728*^9}, {
   3.753303714791267*^9, 3.753303718702036*^9}, {3.7533037948233232`*^9, 
   3.7533038559461317`*^9}, 3.753303932365971*^9, {3.753371976776051*^9, 
   3.753371988136856*^9}, {3.7533721223043413`*^9, 3.753372127947098*^9}, {
   3.753372447843685*^9, 3.753372456504154*^9}, {3.753372628001562*^9, 
   3.753372637796585*^9}, {3.753373193829606*^9, 3.753373198407915*^9}, {
   3.822471054942236*^9, 3.822471068072792*^9}, {3.822471221430901*^9, 
   3.822471319544322*^9}, {3.822471400296097*^9, 3.8224714210560017`*^9}, {
   3.82247166618075*^9, 3.8224716963761463`*^9}, {3.8224717390315742`*^9, 
   3.822471771135901*^9}, {3.8224718627786417`*^9, 3.8224719058715563`*^9}, {
   3.822471947147064*^9, 3.822472108329884*^9}, {3.82247213981689*^9, 
   3.822472140415238*^9}, {3.822472264503126*^9, 3.822472267342*^9}, 
   3.822472338397002*^9, {3.822472390775391*^9, 3.822472420883401*^9}, {
   3.8224724999378977`*^9, 3.822472523953147*^9}, {3.82247269702264*^9, 
   3.822472697442165*^9}, {3.8224727413565083`*^9, 3.822472774293048*^9}, {
   3.822473040404366*^9, 3.8224731067409067`*^9}, {3.8224731579086533`*^9, 
   3.8224731895234423`*^9}, {3.822478849053377*^9, 3.822478970675891*^9}, {
   3.822479043532753*^9, 3.822479044661797*^9}, 3.822479209137651*^9, {
   3.822479259817973*^9, 3.8224792691871243`*^9}, {3.82247933804517*^9, 
   3.8224793381762457`*^9}, {3.822479422829262*^9, 3.8224794267773857`*^9}, {
   3.8224795846706038`*^9, 3.822479586768873*^9}, 3.822479623296966*^9, {
   3.822479698609776*^9, 3.822479714076812*^9}, {3.8224797641534777`*^9, 
   3.822479771167923*^9}, 3.82247981123658*^9, {3.8224798969898367`*^9, 
   3.8224800037262907`*^9}, {3.822480040846719*^9, 3.822480227938098*^9}, {
   3.822480293831061*^9, 3.822480523651141*^9}, 3.822480766394085*^9, 
   3.8224808050093107`*^9, {3.822480852469103*^9, 3.822480855338524*^9}, {
   3.8224808875344057`*^9, 3.82248091702573*^9}, {3.822481028566362*^9, 
   3.822481095746381*^9}, {3.822549921305852*^9, 3.822549984830596*^9}, {
   3.822550120298499*^9, 3.822550149938314*^9}, {3.822550245458713*^9, 
   3.8225503081807013`*^9}, {3.822550342465083*^9, 3.82255061386512*^9}, {
   3.8225508339822693`*^9, 3.822550860702807*^9}, 3.822550890777425*^9, {
   3.822550942866157*^9, 3.822551003672193*^9}, {3.822551043799696*^9, 
   3.822551047987514*^9}, {3.822551155298085*^9, 3.822551164748826*^9}, {
   3.822551282038629*^9, 3.8225513271163692`*^9}, {3.822551384973235*^9, 
   3.822551398940672*^9}, {3.822551498362903*^9, 3.822551510752151*^9}, {
   3.822551566516445*^9, 3.8225516024558973`*^9}, 3.822551657697699*^9, {
   3.822551699521792*^9, 3.822551703967045*^9}, {3.822551769063229*^9, 
   3.822551773153226*^9}, 3.82255181442211*^9, {3.82255204444042*^9, 
   3.822552065358077*^9}, {3.8225520955612803`*^9, 3.822552148084449*^9}, {
   3.822552227684927*^9, 3.822552244722649*^9}, {3.822552277640114*^9, 
   3.822552416665766*^9}, {3.822552512151853*^9, 3.822552512744542*^9}, {
   3.822651963413267*^9, 3.822651990582761*^9}, {3.822652045636651*^9, 
   3.822652069630898*^9}, {3.822652109924602*^9, 3.822652169043274*^9}, {
   3.8226522120175457`*^9, 3.822652262924183*^9}, {3.822652312834262*^9, 
   3.82265231922543*^9}, {3.822652378744266*^9, 3.8226525228629723`*^9}, {
   3.822652601169437*^9, 3.8226526108319273`*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"2a39ab49-2efa-47ee-979a-fe2c6c894b25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"V\[Infinity]", ",", "R", ",", "guess", ",", "model"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V\[Infinity]", ":=", 
     RowBox[{"Exp", "[", "1", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"R", ":=", "Pi"}], ";", "\[IndentingNewLine]", 
    RowBox[{"model", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{"V\[Infinity]", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "t"}], "+", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "t"}], "/", "4"}], "]"}], "R"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"guess", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", "V\[Infinity]", "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"t", " ", "/", "2"}], "]"}]}], "+", 
      RowBox[{"R", " ", 
       RowBox[{"Exp", "[", "V\[Infinity]", "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"t", "/", "4"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"model", "-", "guess"}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "All"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Limit", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"model", "-", "guess"}], ")"}], ",", 
        RowBox[{"t", "\[Rule]", "Infinity"}]}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.822127137613867*^9, 3.822127604250739*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"5cf2ae6f-670a-4bc8-9abd-10e34ed6fa1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxN2nk8Vc0bAPBLKkWlyPZKimxZsyRLJmQn7rXvIfuekIgkSZIkSbKUCila
SPZUqJAkSyGyRGWpJMnym3PPuXd+f72f7+eZeeaZZ+ace6/ebc7+5EOMJBJp
kYlEwv67/fzijSz+p3sV1wUHFC0FgsfMYlt9PbLVnR87J9x9Hgieht3LE/Uo
Vq+11/nAkBgIGmQC3Vd51Krnveb2i+QPBE2J7bq/3d+o+8hYJz0zDQDTsaxf
wgrfqge85WZ03BYAIp8Vi/3JeaeubbjuLNuwP0gDs/d+netS368hkNgi4Q9e
Kp988t39kzpTVrLMjve+4I4q+3GF4gH1rMk7mg9P+oIfH12zgwsH1WXDJd/8
lPMFx3mZP//MGVLnCHo+Y3XFB1y+bOw+de6Lutw11uDLId7g1YWPgWPuU+o5
CzcPXgjyBPHpaS8vyk6rX47PzD+/2xNIeKjbyBVPq4t+CbC4u+gBglZfOBZU
+ENdNXHz7p3nPMDSfvma6Zxf6nwznNrh5e4gd3OfcTL/jPorA4bwylPuQGvk
1CfpzBn1UhfZG+MUd3A2tovkf/m3+pdl7i+zP90A97NwzYlzf9SNxFbza6m4
gcoUwY5Eljl1ltTKapsNbsDBudlV4sycumQ1RUVx+BDIY+CP8479qz4fTjIQ
Tz4EZMHTpvHwf+rB+qqXU6ZdgX71auNR92X1J3+0f/G2uQDZZeffnNPL6g9I
R00H77iARAHHVkFVErC7bXhSP94FBDtXHDF7TgLyFzf0zGq4AK3RgOelHQzA
YWfIkkWtM1A6zc/dys0IApQYJtqznYGEaLP3qB0j0Oo/ytoV7QzYvUTYuUYY
gfC2dikfLWfweaLvYNjvFSDhyKB3xNuDoDPpbGnyHiaQ65Hx5FvpQfBKes+a
gkgmIPFouaol4yB4EJha0rNyJXB1v+gzcOggOPFbf1mZcxXwdswPYGA4CAQW
H2cuKjIDRrOvHO56ToAj69D05mPMIOcDqYpR3gkwq7NrSdUyg72ujRY/+J3A
VLTfNwedNYD5KQdXzDdHUMO0Q7nOci0I4/y1tGzkCOxZU7piwliB7rXh4jOS
DsDkrvrOq1WsQCgsO76BxQFoGU8cf0haB5hYx7cf/2oPJJJ1hYfjofs1O80K
7MEC+3Lw/ivrgeFG0aOHJOxByzrFNUz2bMDn5nSss7YdaDfYlN4awQY6ThWm
CUrage4zk8JXMtlA6xXucwocdmB45W0tqV420MzYz60zZAsWFrmirWw3gu6u
nVeXYm2B+OTf2SLrTaC5/+2lp+9tgIxE56nQo5vAdLuA1sqnNkDR6wGHxpVN
IJnvxc74IhugMeq1q6t7E3BNY/yuE2sDrPs/+jJYsQMzv7Mr0hRtQHxr9bC5
BQcYrqs7UHLTGiSxZhwWCOEAcxPOvNGp1iBVP4Tx2yUOwOrVv3jipDXIbpAS
iH7PAYIL5jR4nK1BWU22baHZZjCsltITs80ajNw70b5E5gQDmzQVHuVbga/f
7Q++DOIEAWGvrlpmWIFpceXpiymcIHaWR1Yw0Qos3Pq5TqydE8i/3tMgE2AF
OLJd9CimXOCR65gol7IV0Di/v+72AW4wt+fQurwOSxCt/6ig3Y8b6KoZCLxu
sgQ1KwUvLp7jBsm8vHEbqy2BcgTJjdLMDaLb6qrmb1oCOc9KlmVdHuDxa6O+
/FFLIKQpa2mhwQumed8IzQhZAuelbHDiIC+In1OuH+a1BDlP1osXRfMC7svv
tkyxWQI+me8LDLW8gI30vPPAogXYvOX29bsq/4E68jRpT5cFWPWHb5JJgQ/E
+4SoeJ+3AFoPznZJm/GBaYUdxu/jLECM73ydzWE+IBpYWmp23AIsDXVdLLnP
B8ZCixNSfC3An7aUPXZSW0C+r8i9FUYWYKyQ+dRDEX4wwCuYcmaDBTgkPb9O
dp0AIP3z63+caw4MP56+yc0vAAJuSHb2ZJgD+dOb1UjS0POfXdelmgOmTzI+
b0wEQFtzXFh+nDm4nuT+yjdVAMh8svyb72MOPk10xBX+tw0McI5cKlAxBw1X
nPlTJLYBAYU28VYFc3Bv/3TpUTUYX7rqwSBjDo5fYxnRddwGclSilC4KmQM+
Iw3NL9e3gTpet0rH9ebAuqh4WVB8O5gevXYufNgMACu1yywq20FyUKl26Ccz
IMr0WuqXwXYwUBqrH/3BDMzZjtrX+24HAo+l75S1mYE0li1VTve3w3PNUrxf
bQbeeSWEXVMSBE6vp2afXjEDRmKHfnDqCIGB0HS/M9ZmYP7skco+CyEgsDbA
lMPCDORPnjqV5yYEctTJH26RzQDTo1s8u+Kg88YufjYwAxV7x/YZvYDzP8QU
PNhrBoTNvFNOau4A4N8kz60dZqCj7JidPmUHiN72asON7WbgBE+i8EaXHaBO
+0n6ra1moLe/qCIrBo43sd3xlMcMXPSc/Pzk6Q5AepIaqbHeDJCiAuWm1YUB
cDhj5DlHAfcGTyyWHYCu/h3S9JsCbLVSGiMdhUG0aK2B5C8KKFvz0JYlCvpv
Zv3qSQrwSZ05KVwjDOoSwo8tDVFAT0Foh52qCIguNVUca6OABx2RR14qiQKS
fg+z3T0KyD/l6vxZTxSAU5tPShVRQJaiwYF/NqKgrs1sfmUhBSSkc4tJRsK4
p2bxs5sU4GL3sDf5qSiI3t8+EnaNAjiGxzSt9MUAyWNnbN05Clh76Y1MoC20
p7xD31kKIGmXbUnwgb4+F710hgK+3z75pzJJDET3ZYUaxVHAC2/+O1vfwbhQ
+YYtURQQ8ouy6YutOIi+XRsUHgj3k6e8vOwDbQv2dvlTgLP5tu/cx6HT3j3Z
7UcBxo8nX+jnQG82z1rhTQEix84cvTcsDkgi1yQbXCmgm7F24IjvTkA6k7Zr
yooCVDaJFzNFSQDSCLvDVU0KaGWwedlyHrqR4YKrBgU4/TgzlJYDfUjNS2Yf
BcS2jXOJ1UOTMv682QvHJxVEG62UBKSxv92SynA8ixg57Sy09KcqR1kK+Dlv
5eOYCV0enmsiA+d/jY8TvQu9/Wa7pjQFFLwcq6hohf60YpWsJBx/Ol/w00Yp
QKLsEBQWg+OZRH+LpEPX1U+FbKMAzhnLDT/yoROX9BME4HkNnRareAJtlXYz
eysFtNR/sTf8CB3OrtO2BY4/cbshgF8akJgEnurywvUWhdOf5EE7eQ6msFOA
+7+UazetZADJS0IzYDUFpBp/f3bUCTq9orpxFQXU5e7/auSBOfSMADS37pzi
bCi0cNmaTiYKaEq1b9O+DB3P5mLCSAFiUqIrxt5Dl3/aE71IBhYnTohV9UFz
pJz/tkAGMR0fDiSPQA93rbOC/hB+LlPpN3Rwcbj8PzJIaPypcIZDFp5/Xsf8
HBl8c6r2EKdAN0umVM6QAfcjzvNLNtDxek5K0FqrA0rbnaGr/OTKfpFB5t3t
jMeCoJVSBx79JAPD+dNXX1+ADvPfUjNNBncvklt92qCBvsfSdzLwb/giV2y0
C5Dyg/TFRsmgDhR5S1hADzz3rxghA7bKgBsFDtDT208aQpcU/92U5w8999X7
8DAZ/Exn+Zl+AVqXtL75MxmEeEuXxLyHjiaP3PpEBg0jv74s90HnVDJoQ3M5
lW+NHIVmez0x0k8G5Wb7zof+ga57JykK/VeN4ufDIwdIyRJbynrJIIItVMLC
HlrJSWO2hwyaE1Rc3x2CbtuUlAu9ZSUp08QPumkpyQi65m88i0EUtJNz4e1u
MiANZXxVz4UW0N3i2kUGJ0tr8sVGoMHluwsdsN82q3Ys+shDb/52vY0M9sqw
zo4HQycz+7pB/1i5qbEzArou2l0c2ur+Fs+SRGg2ufqHb8hgB7PCXZciLJ41
87oV9q/UReHVN2in8JMbW8gg+Kznqse/oAXkBXqbyUDkoH/XjX/QOTtFbkMn
sR47GsmiAB0bsBfa1iWlWmYn9MDPnsDXZDDL9nT/ZS/ouinzby/JoHC0gTM2
CIvvV6yCtq9q/hIQDg0Mgs9BP3fvPqOfgPnoKlnoCzVTLYsF0E7K/hFNZCDh
w2/hOo65rVSwkQxcGo+5yXoowue5N7z4ORm4qgobz/pjljl6FtrtfptCZSh0
3aVqd2iPqztW7j8NDQ5zboP2839zw+oWFq/4m/aMDMK5BAejhrH4T/bz9fD8
EluatL5DRzsp+ENHMoSVrJnB8r9OPQAd/a056uKK3XB+ActG6LjaEP7b2zGn
NKc9JYMU91e2rU7QpI8Kd+vIILU3WPOiBxYXJ12AvmS6dadVAGYjhiPQ6SrB
84NR2HjnW2rQWRv4r/zOgo6mBLythf17HNjJ14d5qIAR+ulqHlNvayVoEtuZ
ajIYvSGl33MQmhSyORCaFWhp6nhhcU8ja2irMH8FwWOYxSni0FNjL3g+ZmLj
0wpbq+B9fBX0WX8Ai2vICEBruMV/LB/D4jmSLNAejFkdwj+wuLTlbCUZPFJ+
2cDIuAf6imQLtMGdrXcqBKFJdn0R0EcTmw+Lu2NumB+qgPsR/eyT7o+5/MJb
6OfP/xxaFYbZ6UAtNNvidqvP8ZgL1K5C3/Y9qppRiJnSZwb93lh45dpJzI+H
W5+QgezG6LTxYGVoCY7ecjKoYO4SbYzAzPm5FVqDJFWZF4t58uVTaLOpj58c
UzGnj96GDmnZLdb5EPOc0RHoqjNTlfU/MfcXckDvP6FtnDOPmYm0Bro17NpA
JKMKdIDP4mMy+ORusHLPJsxt8aPQjNq3jYtlMTc0P4HWZXQcvBqAOdzWFfrt
39LDR8Mwl6y1gbb5wbrKMhqza+sBaO+BCvFNyZj9LqhAJ9VwBscXY55ZwQHd
Ed666sgkZqWwpjIycPqlJmHsowptdn0v9LpNpLaOYMwdwwrQFTL1h20jMQcr
S0Jz+GlXeiRhjufjg24aM9Y/WYK5rny+lAxk+h09ymcw98pUQvctbGNVX8Sc
l/AQOuG/4eIXK9WgTX7fgR628vjTzom5aD4TOv1dQNyEEmbu+iho0ssTedsj
MSeL6kLf/aKpW3AKs0zoPmibVau+SydR4x3K0I80E+TUsjEHlEtCe9Sk1Fs+
xeyxgwO67eGNgcSVe6EFIocekUFu1gu+P+cwDxw8C51pJ9FlnoZ52joOOp33
4oVHWZhJdiegk9KcVgUVY5aJCoUOT/o39b0NMwCu0OTjss8+s6tj55OuDm2k
mh65jw/zgKQKtO780u4cIcxsLYrQe0Oai+wVMLcJS0Hv9HNP67bAHKCxBZrJ
4Zpn6xXMdbyLD8lg+T8mIcnrmJ2U/0LP93j1ny3EHO3yG3raXImiV4k55/UE
dK/RO9XnvVT/64f+kMXE3LcBYOOf10M/TFL+2E6m+vJ5aOer61dWWFDdmgi9
Kf+zVK4N5hyWBOiApwkx/s6YBdJioSVmPoixBlH99Sh0nvWxsP0XMDvFH4Km
uB24LnEJM2BzgWY8LNjMfoXqbCdop8TXWz/nYCa9soXmq/2v8XgJNW5Dhk4V
qtpc/oZqYwCtKZusnv0Oc92WvdA/1Vw947qo/qMCbWLJWm32iTr+7m5o1gQ7
1x+TVJtIQ8dOLTwQX78P25/1VujgCjWTa4aYwU5G6FKbRsYeE2rcggQ9O29S
ymFOjUcuPYDvIxVX3kR7qgfnoY9XJQyH+1HHt/yCPl3TFWaVjJlEHoVucji4
MzWVGi8ehl67/LXvTTo1zj4Enai+pKGTS/XUJ+jkOqF1ig+oLu2BzqgPzGXv
oHq0Bfqj8z/KgW5qvvBmaL4Vp1ad7aWa/TV0lma6N+MIdfyBJugbz2sUfvym
xrvroYsaWF61cmlg8YRy6NpXN3+esaX67U3oB9xtgZGOVNfnQee5zU8HuFD9
+gZ0AuOBKUtvqutyoc2U577tOEb12DXorwX6I08zqD6YBt37J9i1NIvqqEvQ
b/ZnD+Vfpzo3FfrR4K/B84VUD6ZAR/Fc67evoNr/PDTHmamuvz1Ut8dDr+ri
sZzoo3oV5r9CWp0Dg1TvPQ3dX5fe0ThO9fVT0AVz+95e+kt1Ugz0Xo/UV7I8
mpgrIqA9dfZUe1pRLRAEPSnK8+K+HdVxgdBBa/82/3WiejoAOqKlvPeMJ9WZ
/th5UZQWCsKpZvOFLnPcrfI1k+o5d2iVfVyau3KpTsRct/2PfvhNqpvcoLWY
usj1BVRbYX45Umaz9h7VvYew/nkrhovXUh3vAs0YpvDEa5BqGUfsvllvfvpg
hOoiB2hWld9N8+NU22FO5nvfpjFJdZ499OalR90JP6kmYRaNlZ8rXKGFmdUW
+kCy3O5vO6g2tITuCGRXlxOnmg2zFeWX9jEpqp0soPvk3xk/20W1AGZnzocW
LLupHjOH/vInxYGiQjUzZp+eILer6lSXm0H/qCD7DWlSLYo5JHNXyE5dquco
0Jn5sqXeXng+E+x56nFpyvbD18c8szbt47sgqpsOQAuoNk2uDqW6G7OB7zyD
6jGqdTGHZElsDoiiOt0Y+vobB9G8k1SXYJ6XfWbMmojXi9m60mys6C6+PwPo
2O9x/wbu4+P1oUu2PFm/uYzqfMy9xt+26VVQPa0HzRy9RSGyhuoAzPL3D+je
r0d2+nzCdqSB6nhd7H3A/siP5zXVHpjLtUZPGL2h2gTz8BHuSyfeUV2nA812
Wz+/tAufj1m1O6Jy/CPVbdrQ7muKW7cM4POxeIry4KDpMNXRWLzGm/33qTE8
H+avmfuZK77j+8XM2Rr63+Q01WA/tMZygdT23/j+MPvJ9O6z+Et1DuaMg+vN
ExapJmFuSIEfwQz76f75LOjYz5VUD2hC8//OSxJeS7WAFrS+cFeuzXqqnbD4
Ecs1pUmbqA7AnBOv0lTPic/XgG5+4vtxlpdqEyw+9zV7Unwr1TlYXIivncFR
kOo2zCZGTJsviuDxfdjzfFxRtHEnvj4Wzy/2UPknTTUbFu8YyDCWlkfjSZta
DrooUZ2MWUJzOfiyKtUAYM9HsGz8a0D1tDr0yZsuV5e1UL57nZfuyemh+IfV
TU/djfD+YPNX7ZnvuGqK7w+L7/KSGHtjTnUdZoerDv9W2FAtgzmhOXm9kgNe
317s/bNYv83HGd8v5s9Sv+Vz3PB6Ma93EtHt8ML7i1n5grUtsz9uNWi3+rN+
qofxejFf+FV9IiAU2a89+aDdMTyfKrThfZd9ulG4sbhYsuI2+ZN4PzCv8l/D
IHAarxcbP2zUO8ByFt8vFn8qUVz3JwnvPxbPYonJGUqhOloFO5+vZtFv0vB8
mK1fijhVZuDzMSvmz6vfzsL7hZnjdMvWi9dR/MehnOXjt/D+KUO3ah3+5FWI
8hUJatda3MPje6DPMPJkazzA+4HZbfDbcakyfDw2X6uuxoG3AsW3ZV/Yu6oG
j2NeinTl//kU5eu1273U9wIfrwT9RGVt/8uX+H6xeBpvX3VpC14/Fg/+W3wt
9y1eP2bT7pjIc+/xODZe6rG5/dEe/Lx3Y+/7NFG1Q33I48H/+EwH8f5h8xso
rQuqIyhf3q7cXtFxfLwi9ImNwVUcE2h9h2ntTNIP3Fg+1Tc8Ed9nUD6ee99t
u+fw/WLzZxNrVZ4v4PkUsOfFO+W/EpI2Pf99/UP/rjJRHY3Fk8SUPp5mppqE
xX2YWSoPs1I9gFnvS1+GIxvVTtj6wg0l4QYceD55aKabJ212c1MtgOUbPGmh
LMhHdR3mGmcx3g0CeH7MmfsW/s4L4vmx+UcF3vSMiuDzMVss5z5p34nyy/cH
X6mRxvPJQW+s1jlaKIfXg8Unr/Jap+1G45vDJ5RiVNB+CqzruP3U8f1i8Til
i3PWmni+XdCuXG7d+3XwOJZ/36xSuawBWo//PUv6lgPICw/7Q9dQ0PielPuW
vy1wy2LPe2Ds7kEbFE81seRqccCNrRcoLf6n3BmvD4sbr1/szHPDjdUnMfGm
LNkLeU3z9bQIP7T+aOGREI8gNN9iy1J/fgjVABv/4nyczng4mi/PuKFELAo5
L/gyt9dJVC/Hl60nCk+j/Cet88e/nsWNxX++liHvTMbnY/U7731S4Z2Kz5eC
bi/ZJ1iUjuL7BF+d/Z6J6iu5RJ6RyEX9FmD+aOd7E81PDnd5cbcArb/8/Zvk
5F003s8xOE3qAepf/9uFJb8yfL+YjbVOuRdX4OtJQ1eXrWubqsHny2D9FEtT
knmGx7H1Mq/y5wY04nFJ7Hldf3vN/deoH8eipYN+vMHjWL6vPx9/kO1A69sc
AppB3Xg+LP+rrqY7D3pxY/P36Jty/BrAx2Px/KqeCLkRNJ9b2nnk8Diq/3Tu
V6NHE/j8ndjzy364bOYHbqw+t7h//AqzqP73cydPH5nH82H1aXmzTpcu4ZaA
ftSXajXLqEO1OLSgyZaniqt16Oun1N8UC2XRoednVJBKebxBh76fwNtl83/Y
8fFi0AM86i5K3Dr0/ZkkNr4O49Ohr1+3dED+iYAO/TylA7sz/wrp0PeTNeS0
UlkMN1bfeotx33BJfLwo9PGmwM4KWTyOrTehPL/3nwIex+bb3Y25raKMx7Hx
zVtZ2CL26tDvm2rKxbAqDeQ7THyDC9ooH29onp6aAVo/YVziQeQBVN+8bSlv
DUWHfl6erWonlyzxONa/btDwba8dHheG1n1obBblhPKV7+iqqnVF/RZJd9xB
8kROWzt2Dvji43dgn7+RAbPRgbhFoEOm5hyeHkH9GDl4opEhHDd2PmYda2Q0
juvQ7+dz7ZT0mBjkEbfKlvA43EJY/tPDjIcT0HmK3F6n5J2Ex7H1dRsVfV1S
cGPre35xvG6bhvIlrD7TRclA/bkj8oDVMAvV16zzcZ/WdZR/wp0pVPUW6vf6
eMki+UK0X+l8i0GJe7ix+2LSFMW54wHqX+BYvsGWMnR+Kczt0Zsr0Hk/EP1X
uq5Gh37/3+kKfVtZj+IzHkYCSy9wY+fDcSbEfPYl6q9CQXbCZAuyxcum2tG3
yKHjP2b636P60tf8J97Vg/bzREzL8U0f7u3QH/R8UxsHcWP9/ueZ9rJ2BLcA
NF9C7dLjcZRfrXBMrmQCzXd4tdEz/wd6nqK+Kmfl/Eb3LWet67v0v7gFoZ+K
n2O+sIj2/1m/TO0Mgy59vRXen4JOrNSl1y90ljn/6Bpd+nr778j2Ba7TpffX
7bXNJq+NuvT1T387qeO8GTf2/s1nuRthw4ObD/rlzs775C269P1+NVge1d+G
exs0i48on+YO3Nh9lUg0NVURQ/ONisLj5CR16ffJr/lG5U5ZXXp/z39vnhZU
wI19Pyhhnd3Btwf3Fui3ElttOdTQ/n4a6iaz7kP1s/sGvmDajxv7fiJ/LmN+
QVeXfr/M7z6T/m2IG/s+ENLy3XXCBDcv9OWJzRkjZqhf5evU3/RZoXiPpAdT
p50u/X7NG13Y0+qkSz+P//wq/BpcUX9Vk4Zu1Hjo0u+n/T3WnjIfXfr5Hm9V
WF8cgPJlTzpo3g7GzYm9T9fHh2WH4ebH3r9S9+9ejkDzGQ58+Hw+Gjf2/DXV
mAsGx6LzSZZ662IVj/pvlWWYp5qIG/s+L7C+aVggGTf2fWAsUnPHylTc3Fj/
J2oOjV9G9YfZK99quYrmg5bS0fvZuDmgmdVkRdJu4N4E3VZU5B5+G/UjnU80
3+EObuz3lFPijTGNYtRv0QV+MZGHqJ/T3hmeLI/Rfss/bi6cqkD1RRtc+Pqu
Bjf2/V+3knVneT3Kx7Yz3juzAa3XnbGiKPoV6nfO2qjvrq0ov0f4vIReO4rL
fD3iK9mJ4nPWP+5u/IDy1b30mfzdhxv7vRa/Z0zqwyDutdj7rcDFv2YE3Tdu
nk/F18fReQzE20zHTeCm/r6dey/j/QM39n0+wMM08MBvtF+l7ub7cn9Rf0i6
uj+5FtH6TY+f7Vog6dHPJ1lE/fAAkx46/8sVD58z42bDzn+14kw+qx79/MZC
7sufY9Oj34eSUYkjgRwoX5hFfqk5N8oHGgRn9/Dhxp4vZsVsRX4B3IbY+d/k
DWUUwo39fSR9c9rjURE9+n6cTm2ce7UTN/b3BdHfiUrF0riZsfN3ZT56UQ7V
V95x8knobjQ+Wmv5r60Kqkf3UbgyUEfj2YRmw4U00XrdFwMrmXXQ/nJWTPz7
rq9H77fHYQ/Vt8ZofZmhoYhSMm7seZojO1ZfsUCuq/+wGGmD+hO/y2KvswNu
7Hk0uf72uLYzbuzvYdybjGrF3dD4gRNNy+u99Oj3Kf+HJvjli8YHHKyN7grE
jf39Temt8tPKIyhO2lfGkHMUtxW0jdaXV92RaP1HOtypG2Nws2KfxwZ69vpx
aL6HcbjwyQS0fr3pnanKJDSez7y3fCYF9SPEal2M5GXcC/fh+9h2r4HbVTRf
wtGfIzsbrR/nnNPXdQP3NBw/cOjtLbZ83EwwruzJGKBXhPKn+sjtiSnBPQfH
T/q7MlY+wk3Czvfwpde/ytF+r4c0pEpUIy8c/WN/6CnKZxEpKpL1Au23JNp6
uvMlbuzzcm1swpMNrWg919OVMbrt6PmoSfhucKITmTtpy+aKD+g+Hb5g3P+z
H63fmhp1e+cQ6odoekmA6xd0v2KuDu659g33GFyvN2vTis4ptL7idc3m9TMo
nnwz+JLOHKr/a/5Nh+gFtL5WUafIE5I+1d1wfFbx6h8/mPTp+597oFQhvkaf
vj65zPOkyzp9+npFTzIMMzfq0/e3qvr15veb9enn5VS30L+OF3cTdMUzyXxt
fhTf3OgQGLVdn15PwKvzyuXCaL1XLXUrfojjxv49QOjtj2YxabT+8Y7tac5y
+vT9dXdRHK/uxt0G47s+xop2qOAOg/HE/tIfrAD3AIyPDo5W7NfCHY29j0a4
Yo/r4sb+PSBjTNfosSFu7P0z8+0o57QJ7hI433iq8JOoOYrn//yYf9Ban37f
GGdZgzLs0f7t/qqpvDuI+v14wY+J1Q13HfQmUk6Llhda32fF27RIP336fWtY
xehUFoTWF1grJzYVQhjGw9e5/hQ5hvJ1sF2qdIpC+5XiaIi9chK3E/a+4fpj
1H4aObWpaaj+LKo/+2jG0YfnUf5CcZ8NeRdxJ8N8ZR/VbqZeRv2vT9ygcuoq
Ecfus9pg25FslO/D5AM3txtofyPZsQsWt1F90yYWKTp30H1aYBAVVSpGZn74
t1r0IW7s/cDh+prC85jIh/Vj87XxNZXo/Hc2+EXN16D9KYaCzd/qUX0aopvu
fGxA+Y17hkDzK9zY82edUNpZ1Yrqc1U57XO3HeUP+G7FmNWJ+h1xTTw96QMa
H2+8IBnVjzsHOnW55Zn/Z3TfskuyrZ1G0fNQeDBwyuQrOt+yTZqn9k3+X3+f
cfy36yfqX2vwaMn2WaJeOP7DjnJt9nkiH9bfzjO9K5b+r7+nbYNmGAzo8QUl
SeaRlbhNYJz569K192twD8A4+9U2uYZ1BvT5/IbXX5ZtNKCfv/jiYcfbm3E7
Ye+fe/t/X+YxoPdbw5HrbPwWFDdmGxc4us2AXq/104oyzx24BR7C/gYlGtqI
Ecb6K+jwWV8S1RPRIR2mIkvMh+PjTzGsl1BA41MV393g24PGZ3/J27NODdVf
mB7yZhHgroPxMj3dQ5NaBvT7WT/P869flzAc33LnW/IbQyI/9n6xqxauMyH2
A9cfXne+qsQM7W+6xomca4XmL/jvGrtgh+pl3sZ0PMbJgH6/2Nvfsx92RfXz
n7xd4OKB4uLyR9XNfFB/FEf032sFoHwaaXzeCsGoHmOdSZJwGBpvPVebxhmB
6nMtuCCxOhr1P8DGpf7PSbTe+uyvA6rxKF/RUODyiUTcOTCuL/p3S2MyOt8v
PtGqrJfQerH3V9uaXkH72T6bdDTtGupHnTJn+sdcVL9D1LUygVtEfuiFZ0Lv
DxXijobOYC76VXiPWK8Efn8xkts0/YAYD/O9v1Aho/CYyA/HB3XuOxBeicaz
/ffSt7YWxe85miQyPUf3wTCvq1CvCdXzdczhZVIzcT/g/HjJ0S/v2oh64Hjh
IN9VPO/R+GdlM0IOPSju9O+Y5o0+VP+S+grnsUEUz4xNiJYcJebD/MovN2YH
fUX3r3vdlerHk6hfIWSB3oWf6Hw4Lt+e3/cHjb//UYrn9D/Cj+D5C5Ttbl4m
6ofrf3dVs9jIZEivN6HgebAFsyF9vuikwcWrrIb0/A273t0fYEPjXUNt2nZs
RnHGqsFJLx7c0XC9bJLnupIthvT9qe6f3vl7G5Ef7u/DmVB9ZWEiXgy//7cu
eUSJo3yc7HGnn0sRhvkeWa67tUYO5Sdnpj433m1IP4/pgf+GLqoQcTj/3I4b
DD3qRByOF/cSF+DXQvtrund/r4suEYfru/1Sss83ROsxKdUdmzAh8sH81yN0
MnaZE3E4HjxtLQ+1JlxKBv0rLbqq7FH9x/T7fjM4o/W4z7ty6Lghl737tivR
C/XDjPuw6Vs/1N+fdvP+nIeRk3NPJNmGonqkRpnv5hwj5sP1m8WTX49Eof54
+XN9FY81pN835kdZzAHxaP6tuR0ipYnE/DL4fU/t7v75ZCIOPXhC3lX9EooL
c65PCriCztOr8Mvj3Gsof/Hep4PtuSg+057BwnQLne8e92AFhUIiH/Txf0aO
bvdQvc/Oi5y5/AD1g1mI4WFTGcpvVP6h928Fyp9i+GjVzlpi/GMy6Bw4J2P3
jPA9MvjviLvNuUbCML/Tmn2xNa8J3yWDvGu896beEIb5xmVnugQ6UD+lGloY
yN2oH4dtbu882Yv6Vz4Zbf5oANW/EGMTNTKM8u/jki/gHCfiMF/cnXXvdCZQ
/lfqXxbCfhAuJ4MNHXXChb9Rf8w8Mkw+/kX7vbJwOJx1CfWnP9koT43RiL6/
7TtEWv1W4Y6+QwbuT0hz2WuN6P0vMvqw7e16I3p904MPDRjZjej5FELOHZHj
MqKfd/ha92zX/4j5sJ+1WeDlpa2EYb1Mcry/GgSN6PvTbfzFNydiRN/POdsW
bTEJI/r5tE/dCrCRIVwBn+/Y6Iyz8mi8LbfN8yoltJ+cIrnJCVXCT+D3FbCO
e+s+woXweX4/us9kPxrv71nnfUKPcA18XyxeufTAiHAuGfy9cLh2yJQw7M9e
YaNxDgvCcH8xFcLs2jaE88ig0ZikFupAGPv/yYZ63PKdCafD39+hD5N73ND8
SyznKtZ6o/19yHYbVvFH87fKg/W+hwlXwvdnE49SVijhIjIosPt18M0xwtXw
9+l081lSNDofuVO3SmVjCbfC9yVP9CfneNSfqrvWa1ITCeeTAYOGnNyLZLRf
7U5W+9lUwvD9k+A1GidyBZ33m6XaEqtrhGvh58nFKx/O5KL61r5nfxt0k3Am
GZC4khptCwinkMGsFXON1l3Uj4mMmEeS9wnXwe9DvQuFnKUo/oE/NHe5HN3H
Nqcfl8eqCOfAz5vr3klv61A/qoZHYiueo/09EHY6dqOJcCr8feXxITCxmXAa
/PwpNPM40ka4gAzSvrc6OHSg802U0jPX6SZcBc8/4JmBTC/heNjfB2oaPAPo
PvnNPFZiHEb3zVVxl/S3L6hem7CiHR3fCGeRgWmFMF/1FOFb8PlYyNl06xfh
ZHj/9v635vwfNF8++tJy6D903uL1G2adltH6AkwJ3/VWGNPPg0ubaWjXasIN
2L+HHO/5j8WY3h+mV3NvmDYgz7McbpjYZEyvf9pooqqT05hez+h594e1vISj
yaDv7WBBPr8xvb4OdrucC9sJX4fvL/POtHBhVE/dZZNzLuKonrKeVycNpQhH
wPfPf/vDFXYRhvflhn1tAL8iypeRvcd9tTLhIPh5N/jQflrNmH4+cYJSZj37
jOn9jTiUr1+/n3Ac/H53e/u+O3rG9H55jmfuTjUypvffaSeXVKQpYXh/LXwv
CLmZEw6H3/eKWf47YE0Y+33y49RGJXvCzfD7pRyJedtBtJ7UkfClNYcIw+dH
6PHMzE8Pwk7w8+ev37ePPoS/wt/vKuODzwMIJ8DPt0iX7rvBhJvg98Gavta0
MMLO8POTZPUiKgLV+1WjvdIjGq03EGv4wDQW9aezoSFfOR7V18K8L1swkTB8
vz7Xr7zEmkzYigwqEhUSf19E80tai2P6LxMOht8P2MSPNl5F60uNWs8x5RCG
z/PjyjOhGnnofoALT2aj8tF6TW7jR6qLUP9MVHl+z5cQ1iWDno16wUql6P44
fwn7deQJYTO436r8oIfVhLXg+aZ0/5h+iur5584cKNWA7nesmtK09yvC8Plm
ZffwL2glDJ/n1LHLk6PtaD2+mkZfoS7CYfD7wMU/3w9+RP2R9BTxyf5EWIYC
yvZafusdItwNn1+O0168Y6i+hvGyccvvtPHw+3btqMelacJ28HxSOcfaZwjL
k4Gjl7Y721/C3BQwph4yarRI2BD+/tp869BZhgO4BbD/v+39cNNKwvB+nahb
6bpqLWElClibpjCkuZ6wKPx+5H3I+cQmwr1kwLvv0mANJ2Fu+PxxvnBa4CXM
QQES32c+7dlKGPu+/VTIMVSQMHwfqV42638kQhje1xc+sfY/dxJWpQBjjUe9
0jKE+eB+uYZtfeUP0PvlMMH+sVCJMLxvo/WaNmOqaD2/9MM9O/bR9kMGf3xv
WLnsJwzfT9Ga77py9A7Qz5OZZ4VlvxFheN+SJ3d1/kc+QO8/93Nnc2sLwgOm
IOdKSkeaDWEPMhDzr6d0OKD6Hmj9bN/oQpgEf3/xbicfcEf566dM3yZ608ab
AoMXJ0xe+aP5HRn336wOJtxGBnYBg8b7w9D5De/f2BoTgfL7/rfPqC6asBUF
zE4HNC/GovnHG3IMVM4QrjMFqzLbXoWdQ/04H0jSL7tA2IQCuHVkXv66hObn
8DnpymbQ4vD33M/zjX5ZaD8ljbXaRdcJ55gCpWtTL8ZvEWYmg6dBW/eL3KGd
PwXM/55K5itG68sfrevd+BD1128hWXT1Y8LT8PM46mDwQgXa72fGXXU/alCc
L46R9Us96p/FmneWvQ2onuTEGzfevkL3/dWG4KmGVnT/mC5qqVS10/ZjCvZy
bj59v5N2vykg7MpI+60PhNNNwQO+Mv7Mflq/4e/f7DivC58Jj8HfN4KWZXGj
6PlwuiXCGPEVrZ8hNmcUOEmr3xR0FDVdcftJGH5erpe5MmI7S7Mp0H3oKWs6
j/Yfo6gcqb2Enqd+u1PDWxhMCJuCY1m+CdwrCAN4ngPmMuwrCcP3bem2vZ3r
VhPOoQCyi3AE8xoTen1Teeu3r2Axoa+XODrbuMhKGw/vu+gn37n1JvT6Gzwb
2X+x0eKmwPlO8ZOJTYTh+275+2XHMQ60fqZU9MohTsLJFKAU4HGnj5swvH/v
75uYdvMSbjMFQb+U/rTz0fZHARsUtl1r4Uf5ikLWaDYJ0MaTgV75j7H67YTZ
4Pvhb09StRDa70mVevlyYcLwvglEFn54IIrGV9ekRN8VR/2zIR0Tzpeg2RT8
2efSfF2KNp4CUk8aBF2TQfXLvpDjTt+F+tm6iq8mRR6N99Zlcj2nSKvfFDAn
fF8Tr0Q4mgJuvu4ojlFG9WqsqzaPVEX5Pxnf/Be6l7AABUQkn8sNAqifPO1H
dHw1aOubgTJ2hwl3Ldp4U0Ax177orI3yT6dJ7bHXRf081835yVKfZgoQ512O
JRvS+ksBjbZfxI2MCQdQgOu1N206Jmg+w6fHIRpkmk1AlkAOn5oZrd8mYH2C
bJOkBW2/ZBD1q/4wvxXNZmDazmzrBhtav82AU8PIq2VbtN826dCQaXvUv31X
mLcPOtLym4EHjBktbw/S9k8B2312Hq13QeunvK8SengIeYW6cdsNd9r6piA4
/9OxVE/aeuZgeGOgyClvms2A2THGd0d8aeubgRfDF4+7+aP9KxrvELcMRP29
9bjsvc5hdN84t+meUDqC7sfphB4JsVB0/nO/vLp5jiJ72C+cXHuM1g9z0N1w
TvpfBM0mQE9m68dvx1H9FVdK4nqjUT/EV2jsaomhrWcOMnze9VXHon6ydLqe
uRdHGw/vk/qsfHY8bbwJ+J5/euB8AroPdpt4EqMTUb6WY4W7A5PQ/veOqAwd
TEb9uWfckkROQfePv9xBWTOV9n4xAee3TY/IpdHWh78Hz564IJSO+hcws0lt
cwZtPvy+ap83tjIT3RfTRoXU2Wto/XqZRvUv2ajfuzKsvnXl0uLG4PqKr2lN
N2jzjQG77zGNJzfRecd2sk4W3Eb1z6hnXckooMVNgGuB9P6zd2jzTcD7TU+n
j91F+bQjyJk+xei8ykaGdOzvo/eH8IEjv4weonovl6/K3ltK64cxYN6eri/9
mGYLEHZWbHbrE9p8Mhibqchlq0T339rB0IihGs1/1dg396OGZiOgLOuf97kO
rVeYQTJ5V4/29x9Tyr9nz2k2B4m+grcfNdBsARY6H5FvNtHWtwQ+QHvp0ivk
3oKugrhm2nrmwJDd0zy0ldYPA1AdMU/yaEP3Z7Z4dDqmHdUvM9Q+cK0D1ePF
WdtW3oneD3l6d+reddNsAfojLpdMfkDvB66Skzlr+mhxc2Ay5J8s9IkWtwAJ
nHbR6oOof8/1dANshtDzsxgh73RkBJ2XYomASfIX2n70QMAQK7gzjuop5Pwr
3fCNFj8AhvRGtg5OoPPli3y7YWGKth9LYFFSvcz5kzbeDCQPFUzJzqD7/5Iz
7ZPhLNofo37MG/c59PmjGulXGzOP+hlSYlN8bYFmfVA8pJ1dvoT2O8Ypd/4d
yZRe33b9rVGTjDTbArtIFv81K2m2BpdK/jgIraZZB7QODRmrr6EZfj/mattr
w4LGa+hXSR1Zh8ZHRObzJ28gHG0NykpS19/ZSLMVmBqKXnrBTrMpEOXynRzY
TJtvAJz1rfv/cdFMAZmR+1s5eWm2AJ0lsjWyfDTbALbhLfcM+dH+9LjWZrkL
0LwfxOjPnovZjuqrivwceU2Itj4ZzJa0+pYL0+J2QHq4wv6dKKrHg+u20aQ4
zbrguv5FtTWSNJuA3sgoSSFpWj4TsPm+9xZ1WbRf42HLdTZyqN/xXFqLwQo0
7wP1+jIT53fTbAX+RfL1Fe6hWRXI32dueaFCswbwG56pGlCjWRPkcw0W/VNH
4wf1WzI5NWjr2wHe408SZbXQ+ZndvxlhqI3WSxq+4OOuS7M+aOQ6bhejT7MT
IBl4GV4zRP1VPm6hWm6M1gu+ryHxzoRmS3BvWIpvkkyzKRjj+o91jTmtHkew
zWD1gqAl6p/8e812XmuaFYG2Y3T+Rls03mq86jizPTpvr8N/zZYd0HlELCrs
nHVC9Z8/HcQw4Yzuy/WNxV1DrsiPrn67+8GNZgHQsEM09q0Hqqe72NWmyQvl
/7onV6bWh2Z5sPisb1WZH81agM2Yt68ogGYlsL3b4uGNIGR554tnMoJpNgfa
3984XghBz49VCKtifBiqz4ukxxoVjvoZkXDq85EIWj+cwHmO+nKf42i/17OW
klyiUT2PRFUO2cSg+Q0PQlVMY2nWBt2qjzbqxtFsCL42TH/ZG4/u/4KJZI1C
As2iYP1Hz1SJRFTftkO3vASTaHYE8lOfAW8yul/aR7dybUxB/bRaYTexOhXV
63Uu/dnSJdp+XEAE1/srvy+j5yMpd2PA9yuo3zk7jbWHrtJMIj0sTeD7cI3m
Q2C1vuyem9ko/j85gP7q
         "]], 
        LineBox[{{71.2725805489438, 0.}, {71.29508708163351, 176.}, {
         71.32577780802859, 168.}, {71.35904830800268, 192.}, {
         71.38324503525656, 0.}}], 
        LineBox[{{73.45375898637107, 0.}, {73.45508980637004, 16.}, {
         73.48615691665782, 128.}, {73.5172240269456, 96.}, {
         73.54829113723338, 96.}, {73.57935824752116, 272.}, {
         73.59536251645729, 0.}}], 
        LineBox[{{75.4215228242151, 0.}, {75.443384864788, 1216.}, {
         75.47384297314457, 576.}, {75.50430108150115, 448.}, {
         75.53475918985774, 1408.}, {75.55071343709214, 0.}}], 
        LineBox[{{85.70218301791382, 0.}, {85.71858564986236, 131072.}, {
         85.74738741382545, 0.}}], 
        LineBox[{{89.7848315183312, 0.}, {89.80073105789714, 1.507328*^6}, {
         89.8317093160006, 196608.}, {89.84719844505233, 0.}}], 
        LineBox[{{97.76420364383793, 0.}, {97.77268519971793, 3.3554432*^7}, {
         97.80343083978288, 4.6137344*^7}, {97.8377522010235, 1.6777216*^7}, {
         97.87207356226415, 2.9360128*^7}, {97.90639492350479, 
         9.2274688*^7}, {97.94071628474543, 0.}}], 
        LineBox[{{78.4400046569669, 0.}, {78.44991602154758, 2304.}, {
         78.48295390348316, 2560.}, {78.51599178541875, 5376.}, {
         78.53212656496868, 0.}}], 
        LineBox[{{80.43356457879395, 0.}, {80.4629975032137, 10752.}, {
         80.49383199546298, 14848.}, {80.51208098067174, 0.}}], 
        LineBox[{{84.47621855905055, 0.}, {84.50479088567059, 110592.}, {
         84.53759614956766, 24576.}, {84.57040141346474, 4096.}, {
         84.60320667736181, 98304.}, {84.63601194125889, 94208.}, {
         84.66881720515596, 28672.}, {84.67975229312165, 0.}}], 
        LineBox[{{88.67097495457868, 0.}, {88.67255503304486, 32768.}, {
         88.70573668083463, 425984.}, {88.73891832862441, 557056.}, {
         88.77209997641418, 589824.}, {88.80528162420396, 622592.}, {
         88.83846327199373, 851968.}, {88.85505409588862, 0.}}], 
        LineBox[{{90.70852870840746, 0.}, {90.73007880100118, 2.097152*^6}, {
         90.76105705910464, 1.179648*^6}, {90.79203531720812, 1.835008*^6}, {
         90.80938314174607, 0.}}], 
        LineBox[{{98.87883349198951, 0.}, {98.90171439948327, 
         1.34217728*^8}, {98.93603576072391, 1.50994944*^8}, {
         98.96411687446624, 0.}}], 
        LineBox[{{71.8206764951431, 0.}, {71.82483530763986, 16.}, {
         71.85810580761395, 264.}, {71.89137630758805, 224.}, {
         71.9125484439352, 0.}}], 
        LineBox[{{73.9067577944001, 0.}, {73.92109646068675, 192.}, {
         73.95216357097453, 256.}, {73.97475783300202, 0.}}], 
        LineBox[{{79.97992379130837, 0.}, {80.00048011947456, 5120.}, {
         80.03131461172384, 9728.}, {80.05151652043888, 0.}}], 
        LineBox[{{82.00084360105156, 0.}, {82.01516400069224, 6144.}, {
         82.02630208930167, 0.}}], 
        LineBox[{{86.12321043109367, 0.}, {86.14701188881315, 114688.}, {
         86.17761376302393, 16384.}, {86.2082156372347, 245760.}, {
         86.22302299572378, 0.}}], 
        LineBox[{{88.17483031619827, 0.}, {88.20801196398804, 458752.}, {
         88.22091593812851, 0.}}], 
        LineBox[{{96.31283666033707, 0.}, {96.32764011666464, 2.7262976*^7}, {
         96.3583857567296, 6.291456*^6}, {96.3715624596146, 0.}}], 
        LineBox[{{98.29143769492318, 0.}, {98.31825125839242, 1.048576*^8}, {
         98.35257261963307, 7.5497472*^7}, {98.3657169707465, 0.}}], 
        LineBox[{{70.71503235276643, 0.}, {70.742654006522, 36.}, {
         70.77334473291708, 128.}, {70.80403545931216, 44.}, {
         70.83472618570725, 64.}, {70.85518666997065, 0.}}], 
        LineBox[{{72.90087331995962, 0.}, {72.92276180678468, 400.}, {
         72.95603230675877, 352.}, {72.98930280673285, 432.}, {
         73.01737479108598, 0.}}], 
        LineBox[{{78.86352488962572, 0.}, {78.87940848671013, 6400.}, {
         78.9124463686457, 1280.}, {78.94548425058129, 2304.}, {
         78.97852213251687, 4608.}, {79.01156001445246, 2560.}, {
         79.04459789638804, 7424.}, {79.06855036079133, 0.}}], 
        LineBox[{{80.94435818777184, 0.}, {80.95634937920212, 7168.}, {
         80.98718387145139, 1024.}, {80.98889689879857, 0.}}], 
        LineBox[{{85.16558262988309, 0.}, {85.19370142750915, 147456.}, {
         85.22650669140623, 65536.}, {85.2593119553033, 131072.}, {
         85.29211721920038, 40960.}, {85.32492248309745, 180224.}, {
         85.34497014436789, 0.}}], 
        LineBox[{{89.17857516183889, 0.}, {89.20346139768122, 786432.}, {
         89.236643045471, 1.179648*^6}, {89.26982469326077, 1.048576*^6}, {
         89.30300634105055, 393216.}, {89.3147175108587, 0.}}], 
        LineBox[{{91.26818261768734, 0.}, {91.2876874468636, 2.228224*^6}, {
         91.30085320655758, 0.}}], 
        LineBox[{{73.66778002295561, 0.}, {73.6725595783845, 64.}, {
         73.70362668867229, 96.}, {73.71398239210156, 0.}}], 
        LineBox[{{75.67002902402959, 0.}, {75.68704973164063, 1216.}, {
         75.71019789399163, 0.}}], 
        LineBox[{{79.66746760318237, 0.}, {79.6921351969818, 6144.}, {
         79.72296968923106, 4608.}, {79.75380418148035, 0.}, {
         79.78463867372963, 6144.}, {79.8154731659789, 8192.}, {
         79.83374545768217, 0.}}], 
        LineBox[{{81.67147440931566, 0.}, {81.68102134240947, 10240.}, {
         81.71443560823775, 0.}, {81.74784987406602, 23552.}, {
         81.76706307691728, 0.}}], 
        LineBox[{{83.86287166779269, 0.}, {83.88149087162617, 86016.}, {
         83.91429613552324, 16384.}, {83.92249745149752, 0.}}], 
        LineBox[{{85.8733951311639, 0.}, {85.90219689512699, 131072.}, {
         85.93279876933777, 172032.}, {85.96340064354854, 172032.}, {
         85.99400251775931, 155648.}, {86.02460439197009, 188416.}, {
         86.03896853700779, 0.}}], 
        LineBox[{{89.96161814030548, 0.}, {89.98660060651795, 1.6384*^6}, {
         90.01757886462141, 1.835008*^6}, {90.04855712272489, 131072.}, {
         90.07953538082836, 786432.}, {90.10018755289734, 0.}}], 
        LineBox[{{92.00315514500406, 0.}, {92.02629362589722, 4.194304*^6}, {
         92.0566628820695, 3.407872*^6}, {92.07184751015564, 0.}}], 
        LineBox[{{70.5585096481515, 0.}, {70.58920037454658, 172.}, {
         70.61989110094166, 100.}, {70.65058182733675, 80.}, {
         70.68127255373184, 188.}, {70.7113238899937, 0.}}], 
        LineBox[{{72.63663550700755, 0.}, {72.656597806992, 144.}, {
         72.68986830696608, 144.}, {72.72313880694017, 144.}, {
         72.75640930691425, 224.}, {72.78092441215831, 0.}}], 
        LineBox[{{76.64743196075901, 0.}, {76.66170919905115, 1920.}, {
         76.67598643734328, 0.}}], 
        LineBox[{{78.69419611828339, 0.}, {78.71421907703223, 5120.}, {
         78.74725695896781, 3584.}, {78.7802948409034, 1536.}, {
         78.78822393256793, 0.}}], 
        LineBox[{{82.73691214258302, 0.}, {82.75027784891434, 28672.}, {
         82.78369211474262, 0.}, {82.81710638057089, 2048.}, {
         82.81855917473733, 0.}}], 
        LineBox[{{84.91595019318059, 0.}, {84.93125931633256, 57344.}, {
         84.94561161928753, 0.}}], 
        LineBox[{{86.81413274660795, 0.}, {86.82025312145011, 16384.}, {
         86.85085499566088, 327680.}, {86.88145686987164, 163840.}, {
         86.91205874408242, 344064.}, {86.94266061829319, 163840.}, {
         86.95193391350857, 0.}}], 
        LineBox[{{91.03563707411267, 0.}, {91.03986138203587, 393216.}, {
         91.07083964013933, 393216.}, {91.07488028250064, 0.}}], 
        LineBox[{{95.01705321334373, 0.}, {95.0449331615948, 1.1534336*^7}, {
         95.07788219134606, 4.194304*^6}, {95.08315403610627, 0.}}], 
        LineBox[{{99.11424282870415, 0.}, {99.14196392816774, 
         1.76160768*^8}, {99.17628528940837, 1.76160768*^8}, {
         99.20631648049392, 0.}}], 
        LineBox[{{72.09377184909707, 0.}, {72.12426980740663, 88.}, {
         72.13782445554422, 0.}}], 
        LineBox[{{75.99734171052327, 0.}, {76.02208892356299, 1664.}, {
         76.05254703191957, 768.}, {76.08300514027616, 640.}, {
         76.11346324863274, 1792.}, {76.14392135698932, 640.}, {
         76.1743794653459, 1088.}, {76.19689198021814, 0.}}], 
        LineBox[{{86.4346695063944, 0.}, {86.45303063092086, 147456.}, {
         86.48363250513164, 0.}, {86.51423437934241, 180224.}, {
         86.54483625355317, 32768.}, {86.57543812776395, 278528.}, {
         86.58949844834727, 0.}}], 
        LineBox[{{88.36185414919518, 0.}, {88.37392020293692, 393216.}, {
         88.40710185072669, 327680.}, {88.44028349851646, 819200.}, {
         88.47346514630622, 262144.}, {88.50664679409599, 491520.}, {
         88.53429816725414, 0.}}], 
        LineBox[{{92.4705845958248, 0.}, {92.4818324684812, 2.62144*^6}, {
         92.51220172465348, 5.767168*^6}, {92.54257098082576, 4.718592*^6}, {
         92.57294023699802, 0.}, {92.60330949317029, 5.24288*^6}, {
         92.61623258090316, 0.}}], 
        LineBox[{{96.54834988998813, 0.}, {96.57360523718435, 4.8234496*^7}, {
         96.60435087724932, 2.3068672*^7}, {96.63509651731428, 1.048576*^7}, {
         96.66584215737925, 1.2582912*^7}, {96.69658779744421, 
         3.7748736*^7}, {96.71388221998075, 0.}}], 
        LineBox[{{98.61088602265471, 0.}, {98.62714350955817, 7.5497472*^7}, {
         98.6614648707988, 5.0331648*^7}, {98.6704182693833, 0.}}], 
        LineBox[{{70.94470128862297, 0.}, {70.95748909128758, 40.}, {
         70.98817981768266, 8.}, {71.01887054407776, 120.}, {
         71.04956127047285, 48.}, {71.08025199686793, 56.}, {
         71.11094272326301, 88.}, {71.14163344965809, 96.}, {
         71.17232417605317, 16.}, {71.20301490244826, 72.}, {
         71.23370562884335, 184.}, {71.25647616778164, 0.}}], 
        LineBox[{{73.02873451040584, 0.}, {73.05584380668103, 352.}, {
         73.0891143066551, 176.}, {73.12238480662919, 112.}, {
         73.15565530660328, 160.}, {73.18892580657736, 224.}, {
         73.22219630655144, 272.}, {73.25546680652553, 96.}, {
         73.28873730649961, 480.}, {73.32200780647369, 368.}, {
         73.35527830644779, 480.}, {73.37564800030947, 0.}}], 
        LineBox[{{77.10514342365428, 0.}, {77.11858082439983, 1920.}, {
         77.1490389327564, 2688.}, {77.17035960860599, 0.}}], 
        LineBox[{{85.41677722200926, 0.}, {85.42333827478868, 16384.}, {
         85.45614353868575, 172032.}, {85.48894880258283, 73728.}, {
         85.5217540664799, 172032.}, {85.55455933037697, 73728.}, {
         85.56686130433837, 0.}}], 
        LineBox[{{87.34388519127884, 0.}, {87.37108685724397, 393216.}, {
         87.40168873145474, 393216.}, {87.43229060566551, 16384.}, {
         87.46289247987629, 327680.}, {87.49349435408706, 393216.}, {
         87.52409622829784, 229376.}, {87.54357014825014, 0.}}], 
        LineBox[{{91.48130156001028, 0.}, {91.50453525358787, 1.572864*^6}, {
         91.53551351169135, 3.145728*^6}, {91.54928162640401, 0.}}], 
        LineBox[{{95.52079318742562, 0.}, {95.53916860786383, 3.0408704*^7}, {
         95.5721176376151, 9.437184*^6}, {95.58013226647351, 0.}}], 
        LineBox[{{99.71097596978883, 0.}, {99.72542706925857, 
         1.34217728*^8}, {99.7597484304992, 2.34881024*^8}, {
         99.79406979173984, 9.2274688*^7}, {99.82839115298049, 2.097152*^8}, {
         99.86271251422113, 9.2274688*^7}, {99.89703387546177, 
         2.5165824*^8}, {99.9313552367024, 1.50994944*^8}, {99.94679984926069,
          0.}}], LineBox[{{77.48355797493187, 0.}, {77.49181744541576, 
         768.}, {77.52485532735135, 1280.}, {77.54058765208258, 0.}}], 
        LineBox[{{85.76448846117852, 0.}, {85.7797893982839, 8192.}, {
         85.81039127249467, 204800.}, {85.84099314670544, 188416.}, {
         85.8703199428241, 0.}}], 
        LineBox[{{87.776650542721, 0.}, {87.80983219051078, 491520.}, {
         87.83353336750348, 0.}}], 
        LineBox[{{95.87875377171616, 0.}, {95.89720115575514, 6.291456*^6}, {
         95.9279467958201, 1.6777216*^7}, {95.95869243588507, 2.7262976*^7}, {
         95.98943807595003, 3.7748736*^7}, {96.00729038308452, 0.}}], 
        LineBox[{{72.438343327162, 0.}, {72.45697480714749, 224.}, {
         72.49024530712157, 320.}, {72.52351580709566, 352.}, {
         72.55062510337083, 0.}}], 
        LineBox[{{76.51551027893956, 0.}, {76.53987676562483, 512.}, {
         76.55206000896746, 0.}}], 
        LineBox[{{78.56979633599954, 0.}, {78.5820675492899, 3328.}, {
         78.61510543122549, 5376.}, {78.63289505996002, 0.}}], 
        LineBox[{{90.90231791605648, 0.}, {90.915948349622, 1.441792*^6}, {
         90.94692660772546, 1.441792*^6}, {90.96003279384615, 0.}}], 
        LineBox[{{94.87042533735662, 0.}, {94.88018801283847, 8.388608*^6}, {
         94.91313704258974, 1.572864*^7}, {94.946086072341, 1.048576*^6}, {
         94.97903510209227, 9.437184*^6}, {95.00599339916148, 0.}}], 
        LineBox[{{99.03041950413565, 0.}, {99.03899984444581, 2.5165824*^7}, {
         99.04692015857827, 0.}}], 
        LineBox[{{73.99040001440565, 0.}, {74.01429779155009, 320.}, {
         74.04536490183787, 32.}, {74.07643201212565, 288.}, {
         74.09041221175515, 0.}}], 
        LineBox[{{78.00280335268606, 0.}, {78.02042355638504, 4096.}, {
         78.05346143832062, 3072.}, {78.0864993202562, 768.}, {
         78.09100448597468, 0.}}], 
        LineBox[{{80.1069992745175, 0.}, {80.12381808847167, 3072.}, {
         80.13538102306515, 0.}}], 
        LineBox[{{84.25670107744897, 0.}, {84.27515403839107, 36864.}, {
         84.30795930228814, 94208.}, {84.3308235771255, 0.}}], 
        LineBox[{{98.47737756959901, 0.}, {98.48985806459561, 1.6777216*^7}, {
         98.49459204545639, 0.}}], 
        LineBox[{{76.96375210692054, 0.}, {76.96629028261692, 128.}, {
         76.9967483909735, 2816.}, {77.02720649933008, 128.}, {
         77.05766460768666, 2560.}, {77.07328415043362, 0.}}], 
        LineBox[{{91.36414442431045, 0.}, {91.38062222117401, 3.2768*^6}, {
         91.41160047927747, 655360.}, {91.41676352229472, 0.}}], 
        LineBox[{{93.28718015067908, 0.}, {93.30180238513239, 6.815744*^6}, {
         93.33217164130465, 3.670016*^6}, {93.36254089747692, 3.670016*^6}, {
         93.39291015364918, 5.767168*^6}, {93.40404554757902, 0.}}], 
        LineBox[{{73.74712064307519, 0.}, {73.76576090924786, 288.}, {
         73.79682801953564, 544.}, {73.82789512982342, 544.}, {
         73.8589622401112, 320.}, {73.87723701086871, 0.}}], 
        LineBox[{{86.0800702889771, 0.}, {86.08580814039162, 49152.}, {
         86.10416926491808, 0.}}], 
        LineBox[{{88.05869454893408, 0.}, {88.07528537282896, 163840.}, {
         88.1029367459871, 0.}}], 
        LineBox[{{90.11825820345769, 0.}, {90.1414918970353, 1.179648*^6}, {
         90.17247015513877, 1.31072*^6}, {90.20344841324223, 327680.}, {
         90.20787387868558, 0.}}], 
        LineBox[{{96.19148085351979, 0.}, {96.20465755640478, 1.2582912*^7}, {
         96.21234396642103, 0.}}], 
        LineBox[{{80.8258957581475, 0.}, {80.83301141020502, 3072.}, {
         80.8638459024543, 19456.}, {80.89468039470357, 9216.}, {
         80.90855591621575, 0.}}], 
        LineBox[{{82.88532717330362, 0.}, {82.91734917805573, 47104.}, {
         82.950763443884, 26624.}, {82.9635394867007, 0.}}], 
        LineBox[{{89.02096233483746, 0.}, {89.03755315873235, 720896.}, {
         89.07073480652213, 983040.}, {89.1039164543119, 0.}, {
         89.13709810210167, 327680.}, {89.15553235087377, 0.}}], 
        LineBox[{{93.10693299136037, 0.}, {93.1195868480988, 2.62144*^6}, {
         93.12681762337792, 0.}}], 
        LineBox[{{95.16763989308228, 0.}, {95.17672928059987, 8.388608*^6}, {
         95.20967831035114, 1.8874368*^7}, {95.24262734010242, 1.048576*^7}, {
         95.2553000438529, 0.}}], 
        LineBox[{{97.1147285023277, 0.}, {97.12702675835368, 8.388608*^6}, {
         97.15777239841864, 6.7108864*^7}, {97.18851803848361, 
         2.5165824*^7}, {97.21926367854857, 1.6777216*^7}, {97.25000931861354,
          5.0331648*^7}, {97.27306854866225, 0.}}], 
        LineBox[{{99.25906033710638, 0.}, {99.27924937313028, 8.388608*^7}, {
         99.31357073437093, 1.6777216*^7}, {99.34789209561157, 
         1.34217728*^8}, {99.3822134568522, 2.5165824*^7}, {99.41653481809283,
          1.17440512*^8}, {99.4485680885841, 0.}}], 
        LineBox[{{72.1691126551978, 0.}, {72.19081080735481, 240.}, {
         72.22408130732889, 0.}, {72.25735180730297, 16.}, {72.29062230727706,
          144.}, {72.32389280725114, 128.}, {72.33656728343175, 0.}}], 
        LineBox[{{76.28460880987447, 0.}, {76.29621189877221, 512.}, {
         76.3266700071288, 320.}, {76.33276162880011, 0.}}], 
        LineBox[{{78.29725822225903, 0.}, {78.31776449380526, 4608.}, {
         78.35080237574084, 4608.}, {78.36645189876295, 0.}}], 
        LineBox[{{80.3585028350356, 0.}, {80.37049402646588, 3584.}, {
         80.40132851871516, 1024.}, {80.42188484688134, 0.}}], 
        LineBox[{{82.39385901341272, 0.}, {82.41613519063156, 32768.}, {
         82.44954945645983, 18432.}, {82.46068754506926, 0.}}], 
        LineBox[{{88.5481238538332, 0.}, {88.57301008967553, 294912.}, {
         88.60619173746531, 131072.}, {88.61172201209693, 0.}}], 
        LineBox[{{94.6235324126707, 0.}, {94.64954480457959, 1.572864*^7}, {
         94.68249383433086, 1.1534336*^7}, {94.69699140742141, 0.}}], 
        LineBox[{{98.71912475768308, 0.}, {98.73010759328008, 6.7108864*^7}, {
         98.76442895452072, 8.388608*^7}, {98.78158963514105, 0.}}], 
        LineBox[{{77.25596633443375, 0.}, {77.27087136618272, 2944.}, {
         77.29422258258943, 0.}}], 
        LineBox[{{81.25441613761178, 0.}, {81.26469430169487, 8192.}, {
         81.29552879394414, 12288.}, {81.32636328619341, 8192.}, {
         81.3571977784427, 10240.}, {81.36861796075725, 0.}}], 
        LineBox[{{83.47584476404265, 0.}, {83.48539169713644, 16384.}, {
         83.50766787435529, 0.}}], 
        LineBox[{{93.60093955842919, 0.}, {93.60549494685503, 1.572864*^6}, {
         93.6130872608981, 0.}}], 
        LineBox[{{95.693205321951, 0.}, {95.70391375662015, 1.3631488*^7}, {
         95.71615196767063, 0.}}], 
        LineBox[{{97.66980555796208, 0.}, {97.68044827952303, 3.7748736*^7}, {
         97.711193919588, 2.9360128*^7}, {97.71888032960425, 0.}}], 
        LineBox[{{79.51424389554367, 0.}, {79.53796273573542, 10240.}, {
         79.5687972279847, 7680.}, {79.59449263819243, 0.}}], 
        LineBox[{{83.66825665629518, 0.}, {83.68465928824372, 24576.}, {
         83.7174645521408, 8192.}, {83.72293209612364, 0.}}], 
        LineBox[{{93.74594262503726, 0.}, {93.75992100129537, 7.340032*^6}, {
         93.79287003104665, 524288.}, {93.79540457179674, 0.}}], 
        LineBox[{{76.43428865665537, 0.}, {76.4485024405551, 896.}, {
         76.47896054891167, 1280.}, {76.50664973832673, 0.}}], 
        LineBox[{{80.53751419281613, 0.}, {80.55550097996154, 14336.}, {
         80.5863354722108, 2048.}, {80.59866926911052, 0.}}], 
        LineBox[{{86.71257986033814, 0.}, {86.7284474988178, 229376.}, {
         86.75904937302857, 32768.}, {86.7692499977655, 0.}}], 
        LineBox[{{96.82981890439237, 0.}, {96.850315997769, 8.388608*^6}, {
         96.88106163783397, 4.6137344*^7}, {96.90811780109114, 0.}}], 
        LineBox[{{82.05812519961431, 0.}, {82.08199253234879, 30720.}, {
         82.11540679817708, 20480.}, {82.12993473984154, 0.}}], 
        LineBox[{{84.15049403558218, 0.}, {84.17673824669984, 81920.}, {
         84.20954351059692, 65536.}, {84.2323645637427, 0.}}], 
        LineBox[{{86.2536547837901, 0.}, {86.26941938565625, 278528.}, {
         86.30002125986701, 147456.}, {86.33062313407778, 0.}}], 
        LineBox[{{90.33808468884575, 0.}, {90.35833970375957, 2.228224*^6}, {
         90.38931796186304, 655360.}, {90.39899866752037, 0.}}], 
        LineBox[{{98.41900106074398, 0.}, {98.42121534211434, 8.388608*^6}, {
         98.42884231127893, 0.}}], 
        LineBox[{{70.88996949321842, 0.}, {70.89610763849743, 8.}, {
         70.89994397929681, 0.}}], 
        LineBox[{{81.04184501680238, 0.}, {81.04885285594995, 5120.}, {
         81.07968734819922, 1024.}, {81.08122907281168, 0.}}], 
        LineBox[{{83.10590110665814, 0.}, {83.11783477302538, 10240.}, {
         83.15124903885366, 18432.}, {83.18466330468195, 36864.}, {
         83.20345882921035, 0.}}], 
        LineBox[{{87.20036061164704, 0.}, {87.21807748619013, 360448.}, {
         87.2486793604009, 262144.}, {87.27928123461166, 425984.}, {
         87.30988310882243, 0.}}], 
        LineBox[{{95.37442345910748, 0.}, {95.40737248885875, 6.291456*^6}, {
         95.42384700373438, 0.}}], 
        LineBox[{{97.3642074102834, 0.}, {97.37299187887339, 1.6777216*^7}, {
         97.38324042556171, 0.}}], 
        LineBox[{{71.62521230779535, 0.}, {71.65848280776945, 216.}, {
         71.68039264921579, 0.}}], 
        LineBox[{{75.73056131500718, 0.}, {75.7479659483538, 512.}, {
         75.77842405671038, 1536.}, {75.80888216506695, 0.}}], 
        LineBox[{{77.69371561279986, 0.}, {77.72308261896482, 4096.}, {
         77.75612050090041, 2048.}, {77.78915838283598, 0.}}], 
        LineBox[{{81.79704309875764, 0.}, {81.81467840572257, 19456.}, {
         81.84809267155086, 30720.}, {81.86665615256656, 0.}}], 
        LineBox[{{87.96379503625533, 0.}, {87.97574042945965, 294912.}, {
         88.00892207724942, 393216.}, {88.03234441686574, 0.}}], 
        LineBox[{{94.03354120488197, 0.}, {94.05646226905677, 8.388608*^6}, {
         94.07938333323158, 0.}}], 
        LineBox[{{96.08509117837437, 0.}, {96.11242063620989, 1.6777216*^7}, {
         96.14316627627485, 3.9845888*^7}, {96.16480209706131, 0.}}], 
        LineBox[{{74.71189563164846, 0.}, {74.72884132816907, 384.}, {
         74.75990843845685, 480.}, {74.77155860481477, 0.}}], 
        LineBox[{{93.02614298295337, 0.}, {93.02847907958201, 524288.}, {
         93.05884833575428, 7.340032*^6}, {93.07909450653578, 0.}}], 
        LineBox[{{74.2414760355295, 0.}, {74.26283467385235, 704.}, {
         74.29390178414013, 736.}, {74.31051907568941, 0.}}], 
        LineBox[{{76.22311243871641, 0.}, {76.23529568205905, 256.}, {
         76.24246229579, 0.}}], 
        LineBox[{{82.3047543045373, 0.}, {82.31589239314673, 16384.}, {
         82.34930665897501, 16384.}, {82.36601379188915, 0.}}], 
        LineBox[{{90.58917769156282, 0.}, {90.6061657685873, 2.228224*^6}, {
         90.63714402669078, 1.96608*^6}, {90.65081090526583, 0.}}], 
        LineBox[{{75.20993772176838, 0.}, {75.22591509277353, 1152.}, {
         75.25698220306131, 256.}, {75.26733790649057, 0.}}], 
        LineBox[{{77.19320318987343, 0.}, {77.20995514946955, 1408.}, {
         77.2195276978102, 0.}}], 
        LineBox[{{83.37512461990312, 0.}, {83.3851488996516, 24576.}, {
         83.41856316547988, 65536.}, {83.43912579060498, 0.}}], 
        LineBox[{{93.50009576366894, 0.}, {93.51438717833824, 8.388608*^6}, {
         93.5447564345105, 8.388608*^6}, {93.5594809223516, 0.}}], 
        LineBox[{{97.5668230879786, 0.}, {97.58821135932814, 6.7108864*^7}, {
         97.6189569993931, 5.8720256*^7}, {97.63284212716438, 0.}}], 
        LineBox[{{71.4649089897384, 0.}, {71.49213030789902, 216.}, {
         71.5254008078731, 168.}, {71.54657294422024, 0.}}], 
        LineBox[{{75.58124788155989, 0.}, {75.5956754065709, 1152.}, {
         75.62613351492747, 1088.}, {75.6423143849919, 0.}}], 
        LineBox[{{83.76158197600238, 0.}, {83.78307507993495, 77824.}, {
         83.81588034383202, 57344.}, {83.83118946698399, 0.}}], 
        LineBox[{{87.85067114163665, 0.}, {87.87619548609032, 655360.}, {
         87.9093771338801, 524288.}, {87.92596795777499, 0.}}], 
        LineBox[{{93.87562573367774, 0.}, {93.89171712030044, 1.1010048*^7}, {
         93.9246661500517, 9.961472*^6}, {93.95761517980297, 1.1010048*^7}, {
         93.97334085309335, 0.}}], 
        LineBox[{{84.84492967449815, 0.}, {84.86564878853841, 98304.}, {
         84.88533194687665, 0.}}], 
        LineBox[{{71.99697398141883, 0.}, {72.02445830748438, 304.}, {
         72.05772880745846, 200.}, {72.08971967281816, 0.}}], 
        LineBox[{{74.12015609327142, 0.}, {74.13856623270121, 512.}, {
         74.16963334298899, 96.}, {74.17407150160153, 0.}}], 
        LineBox[{{80.16399636625103, 0.}, {80.18548707297022, 11776.}, {
         80.21632156521949, 9216.}, {80.2404529069798, 0.}}], 
        LineBox[{{82.1950869705368, 0.}, {82.2156495956619, 16384.}, {
         82.24906386149019, 0.}}], 
        LineBox[{{94.44196591714662, 0.}, {94.451850626072, 3.145728*^6}, {
         94.46008788350981, 0.}}], 
        LineBox[{{96.45830908694074, 0.}, {96.48136831698946, 1.2582912*^7}, {
         96.51211395705442, 4.4040192*^7}, {96.53694697402997, 0.}}], 
        LineBox[{{98.539780044582, 0.}, {98.5585007870769, 1.2582912*^8}, {
         98.57909360382128, 0.}}], 
        LineBox[{{99.63359423783092, 0.}, {99.6567843467773, 2.097152*^8}, {
         99.67504038999041, 0.}}], 
        LineBox[{{75.8518818474527, 0.}, {75.8697983817801, 640.}, {
         75.90025649013668, 512.}, {75.9145897175986, 0.}}], 
        LineBox[{{77.83610695190234, 0.}, {77.85523414670715, 2816.}, {
         77.87037650926095, 0.}}], 
        LineBox[{{79.88742031456054, 0.}, {79.90797664272674, 4096.}, {
         79.938811134976, 1024.}, {79.94762098990437, 0.}}], 
        LineBox[{{84.03848749170503, 0.}, {84.04551719111154, 24576.}, {
         84.07832245500862, 81920.}, {84.09605503008812, 0.}}], 
        LineBox[{{96.26175660223971, 0.}, {96.26614883653471, 6.291456*^6}, {
         96.27157453772264, 0.}}], 
        LineBox[{{76.79978595693431, 0.}, {76.81399974083405, 896.}, {
         76.84445784919062, 2048.}, {76.87491595754719, 1664.}, {
         76.89291393066699, 0.}}], 
        LineBox[{{91.21953527903597, 0.}, {91.22573093065667, 131072.}, {
         91.2285471359388, 0.}}], 
        LineBox[{{74.33909030819508, 0.}, {74.35603600471569, 768.}, {
         74.38710311500347, 32.}, {74.39331653706103, 0.}}], 
        LineBox[{{86.623526787238, 0.}, {86.63664187618548, 245760.}, {
         86.66724375039625, 49152.}, {86.67298160181078, 0.}}], 
        LineBox[{{92.65076145593945, 0.}, {92.66404800551481, 5.505024*^6}, {
         92.69441726168708, 1.048576*^6}, {92.6986061246074, 0.}}], 
        LineBox[{{96.74270625754166, 0.}, {96.75807907757414, 2.9360128*^7}, {
         96.7888247176391, 2.097152*^6}, {96.79907326432742, 0.}}], 
        LineBox[{{75.36793616837481, 0.}, {75.38125064421243, 192.}, {
         75.38972349247273, 0.}}], 
        LineBox[{{79.4219921631137, 0.}, {79.441052479615, 7680.}, {
         79.4570385515193, 0.}}], 
        LineBox[{{83.52326119840849, 0.}, {83.552220228793, 53248.}, {
         83.56830857900661, 0.}}], 
        LineBox[{{85.6163104153597, 0.}, {85.62016985817112, 16384.}, {
         85.6529751220682, 147456.}, {85.67034261471959, 0.}}], 
        LineBox[{{87.60658823703992, 0.}, {87.61590185093016, 229376.}, {
         87.63537577088246, 0.}}], 
        LineBox[{{89.68675931114096, 0.}, {89.70118611452781, 655360.}, {
         89.73436776231759, 327680.}, {89.73989803694921, 0.}}], 
        LineBox[{{91.70202164899749, 0.}, {91.72138306031216, 1.31072*^6}, {
         91.75236131841564, 3.670016*^6}, {91.77207475539056, 0.}}], 
        LineBox[{{81.49891359364536, 0.}, {81.51395001326807, 18432.}, {
         81.5289864328908, 0.}}], 
        LineBox[{{87.69631602701945, 0.}, {87.71028724714145, 262144.}, {
         87.72235330088319, 0.}}], 
        LineBox[{{91.80763498145691, 0.}, {91.81370883269136, 524288.}, {
         91.81728168635868, 0.}}], 
        LineBox[{{94.7978154384603, 0.}, {94.81428995333593, 1.3631488*^7}, {
         94.82767549667238, 0.}}], 
        LineBox[{{75.9401671148798, 0.}, {75.96117270684985, 1280.}, {
         75.98460202097029, 0.}}], 
        LineBox[{{74.96608107945757, 0.}, {74.9773782104713, 384.}, {
         74.98980505458641, 0.}}], 
        LineBox[{{99.45428831545753, 0.}, {99.48517754057411, 7.5497472*^7}, {
         99.50233822119444, 0.}}], 
        LineBox[{{80.76363380264416, 0.}, {80.77134242570648, 3072.}, {
         80.778458077764, 0.}}], 
        LineBox[{{78.20396734491604, 0.}, {78.21865084799852, 2048.}, {
         78.2292229702179, 0.}}], 
        LineBox[{{84.42239626937096, 0.}, {84.43918035787644, 90112.}, {
         84.46693865809704, 0.}}], 
        LineBox[{{94.54770234898477, 0.}, {94.5506977153258, 1.048576*^6}, {
         94.55435871863149, 0.}}], 
        LineBox[{{79.25383781531337, 0.}, {79.27586306993709, 1024.}, {
         79.28136938359302, 0.}}], 
        LineBox[{{80.62333686290995, 0.}, {80.64800445670937, 12288.}, {
         80.6656241665661, 0.}}], 
        LineBox[{{92.89713204663694, 0.}, {92.90700205489293, 3.407872*^6}, {
         92.9211020666872, 0.}}], 
        LineBox[{{90.43823100097377, 0.}, {90.45127447806996, 1.048576*^6}, {
         90.46676360712169, 0.}}], 
        LineBox[{{75.07575739304927, 0.}, {75.10164665162242, 960.}, {
         75.1290588077587, 0.}}], 
        LineBox[{{79.12083916239322, 0.}, {79.14371154219478, 4608.}, {
         79.15857858906578, 0.}}], 
        LineBox[{{81.1359938123066, 0.}, {81.14135633269777, 4096.}, {
         81.1567735788224, 0.}}], 
        LineBox[{{89.41697808780673, 0.}, {89.43573293220965, 851968.}, {
         89.46110713346064, 0.}}], 
        LineBox[{{95.44738202498529, 0.}, {95.47327054836128, 2.3068672*^7}, {
         95.48937896290636, 0.}}], 
        LineBox[{{97.45963868269284, 0.}, {97.46522879906829, 8.388608*^6}, {
         97.46932821774361, 0.}}], 
        LineBox[{{71.73567036770932, 0.}, {71.7582943076917, 272.}, {
         71.78186091184, 0.}}], 
        LineBox[{{81.9149212032074, 0.}, {81.94833546903568, 0.}}], 
        LineBox[{{92.15952649168524, 0.}, {92.17813990675856, 4.980736*^6}, {
         92.19562523606986, 0.}}], 
        LineBox[{{74.8385470613728, 0.}, {74.85310976932018, 480.}, {
         74.86814224204008, 0.}}], 
        LineBox[{{85.08435054785224, 0.}, {85.09528563581793, 57344.}, {
         85.10447110970911, 0.}}], 
        LineBox[{{87.07118848997843, 0.}, {87.09566998934704, 327680.}, {
         87.11479616072877, 0.}}], 
        LineBox[{{89.86932577226911, 0.}, {89.89366583220755, 720896.}, {
         89.91070387416445, 0.}}], 
        LineBox[{{91.85926271694976, 0.}, {91.87444734503589, 3.93216*^6}, {
         91.88825155238692, 0.}}], 
        LineBox[{{74.51542378793125, 0.}, {74.54243866644237, 640.}, {
         74.56019130089253, 0.}}], 
        LineBox[{{82.6249743520583, 0.}, {82.65003505142951, 18432.}, {
         82.66160152806238, 0.}}], 
        LineBox[{{71.94512096139233, 0.}, {71.9579173075362, 80.}, {
         71.97640091863292, 0.}}], 
        LineBox[{{88.2964963580941, 0.}, {88.30755690735737, 163840.}, {
         88.31393799347079, 0.}}], 
        LineBox[{{94.34377780848783, 0.}, {94.35300353681819, 3.670016*^6}, {
         94.36514265304234, 0.}}], 
        LineBox[{{89.35277881273521, 0.}, {89.3693696366301, 720896.}, {
         89.38675049975808, 0.}}], 
        LineBox[{{83.95940337338172, 0.}, {83.9799066633174, 81920.}, {
         83.9955282175541, 0.}}], 
        LineBox[{{92.09899578461265, 0.}, {92.11740139441403, 5.24288*^6}, {
         92.13638217952169, 0.}}], 
        LineBox[{{76.72979202949526, 0.}, {76.75308352412088, 1664.}, {
         76.77193854357972, 0.}}], 
        LineBox[{{87.02112696242337, 0.}, {87.0344662409255, 278528.}, {
         87.05811314372473, 0.}}], 
        LineBox[{{79.32113720444141, 0.}, {79.34193883380826, 8704.}, {
         79.3700210334535, 0.}}], 
        LineBox[{{98.03047984491324, 0.}, {98.04368036846734, 2.097152*^7}, {
         98.0514806778402, 0.}}], 
        LineBox[{{74.64819904189012, 0.}, {74.66670710759348, 896.}, {
         74.68959866254238, 0.}}], 
        LineBox[{{80.69090461983879, 0.}, {80.70967344120791, 14336.}, {
         80.72844226257705, 0.}}], 
        LineBox[{{88.95406385139036, 0.}, {88.97118986315283, 1.048576*^6}, {
         88.99085306184305, 0.}}], 
        LineBox[{{92.95307954701636, 0.}, {92.96774056723746, 3.670016*^6}, {
         92.97892924056409, 0.}}], 
        LineBox[{{97.012321870419, 0.}, {97.03478983815879, 3.9845888*^7}, {
         97.06260732202709, 0.}}], 
        LineBox[{{78.13605614315958, 0.}, {78.15257508412736, 4864.}, {
         78.1742205929817, 0.}}], 
        LineBox[{{84.34963085372496, 0.}, {84.37356983008229, 110592.}, {
         84.39202279102439, 0.}}], 
        LineBox[{{90.49464403941482, 0.}, {90.51323099427691, 1.572864*^6}, {
         90.53801360075968, 0.}}], 
        LineBox[{{81.17904293433577, 0.}, {81.2030253171963, 14336.}, {
         81.21741474691264, 0.}}], 
        LineBox[{{83.29922650180747, 0.}, {83.31832036799506, 65536.}, {
         83.33614130977013, 0.}}], 
        LineBox[{{92.2217957125062, 0.}, {92.23887841910309, 4.718592*^6}, {
         92.25596112569998, 0.}}], 
        LineBox[{{94.20922595244902, 0.}, {94.22120741781312, 4.194304*^6}, {
         94.23266794990052, 0.}}], 
        LineBox[{{83.03331633593034, 0.}, {83.05100624136884, 18432.}, {
         83.06771337428297, 0.}}], 
        LineBox[{{87.1415728006632, 0.}, {87.15687373776858, 196608.}, {
         87.16998882671605, 0.}}], 
        LineBox[{{93.18352212425094, 0.}, {93.2106946166156, 8.912896*^6}, {
         93.24106387278786, 0.}}], 
        LineBox[{{94.73032307106656, 0.}, {94.7483918938334, 1.7825792*^7}, {
         94.76706301069245, 0.}}], 
        LineBox[{{77.3523673858395, 0.}, {77.36224569125244, 1536.}, {
         77.3768655832636, 0.}}], 
        LineBox[{{81.44409498387247, 0.}, {81.44970125519052, 2048.}, {
         81.4522707962113, 0.}}], 
        LineBox[{{93.69154117267645, 0.}, {93.69660271537182, 1.048576*^6}, {
         93.69949502548347, 0.}}]},
       Annotation[#, "Charting`Private`Tag$448192#1"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, All}, {0, All}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 
       Scaled[0.02]}, {0, 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "\[ExponentialE]"], " ", 
     SuperscriptBox["\[Pi]", "2"]}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8221271937565737`*^9, {3.822127308133629*^9, 3.822127331376193*^9}, {
   3.822127366619108*^9, 3.822127500594282*^9}, {3.822127547234399*^9, 
   3.8221275684054327`*^9}, 3.822127605106295*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"aaededba-ea83-44ff-bfa6-74722bee9cee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"V\[Infinity]", "+", 
            RowBox[{
             RowBox[{"1", "/", "2"}], "t"}], "+", " ", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "4"}], "]"}], "R"}]}], ")"}]}], "]"}],
         ")"}], "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "V\[Infinity]"}]], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "t"}], " ", "/", "2"}], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "V\[Infinity]"}]], " ", "R", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "3"}], 
            RowBox[{"t", "/", "4"}]}], "]"}]}], "+", 
         RowBox[{"0", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "V\[Infinity]"], " ", 
            SuperscriptBox["R", "2"]}], "2"]}]}], ")"}]}], ")"}], 
     RowBox[{"Exp", "[", "t", " ", "]"}]}], ",", 
    RowBox[{"t", "\[Rule]", "Infinity"}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", "\[Element]", "Reals"}], ",", 
        RowBox[{"V\[Infinity]", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.8221276285811567`*^9, 3.822127636699314*^9}, {
  3.8221276956483097`*^9, 3.822127784958514*^9}, {3.822127819464438*^9, 
  3.822127819777388*^9}, {3.8221283089602537`*^9, 3.8221284560945663`*^9}, {
  3.82212857359931*^9, 3.8221286012722473`*^9}, {3.822128696456687*^9, 
  3.82212879017082*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"d3284368-3179-4795-8d68-158b104b4251"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "V\[Infinity]"}]], " ", 
  SuperscriptBox["R", "2"]}]], "Output",
 CellChangeTimes->{
  3.822127639163526*^9, {3.822127697384152*^9, 3.822127742962879*^9}, 
   3.822127785759194*^9, 3.822127822498568*^9, {3.822128703281274*^9, 
   3.82212879216908*^9}},
 CellLabel->
  "Out[276]=",ExpressionUUID->"8e8fda7c-d5bb-4df3-aaa4-fb9187f4bf11"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plt", "[", 
   RowBox[{"data_", ",", "f_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"data", "//", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Tau]", "[", "#", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"f", "[", "#", "]"}]}], "\[IndentingNewLine]", "}"}], "&"}], 
     "]"}]}], "//", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "20"}], "}"}], ",", "All"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Tau]\>\"", ",", "15"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<energy\>\"", ",", "15"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", 
        RowBox[{
         RowBox[{"1", "/", "3"}], "/", "2"}], "]"}]}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"runs", "//", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"data", ",", 
          RowBox[{"plt", "[", 
           RowBox[{"data", ",", 
            RowBox[{"Function", "[", 
             RowBox[{"frame", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"\[Tau]", "[", "frame", "]"}], " ", "]"}], 
               RowBox[{"Mean", "[", 
                RowBox[{"Exp", "[", 
                 RowBox[{"\[Rho]", "[", "frame", "]"}], "]"}], "]"}], 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"\[Rho]", "[", "frame", "]"}], "-", 
                   RowBox[{"2", 
                    RowBox[{"\[Tau]", "[", "frame", "]"}]}]}], "]"}], 
                 RowBox[{"1", "/", "2"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Ev", "[", "frame", "]"}], "+", 
                   RowBox[{"Eq", "[", "frame", "]"}]}], ")"}]}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], ",", "#", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "&"}]}], "//", "Transpose"}], "//", 
   
   RowBox[{
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<generic\>\"", ",", "\"\<b=0\>\"", ",", "\"\<polarised\>\""}], 
        "}"}], "}"}], "~", "Join", "~", "#"}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\</home/adam/Dropbox/Documents/research/galileo numerics/rhoplts.png\>\
\"", ",", "tmp", ",", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7879982209404182`*^9, 3.787998273158593*^9}, {
   3.787999302223123*^9, 3.787999336042832*^9}, {3.7879994868113117`*^9, 
   3.787999512910007*^9}, {3.787999738396778*^9, 3.787999739901115*^9}, {
   3.788002818203457*^9, 3.788002855469852*^9}, {3.788518228914577*^9, 
   3.788518312184469*^9}, {3.788518826312511*^9, 3.7885188460460453`*^9}, {
   3.788518878028645*^9, 3.7885188975260687`*^9}, {3.788524263458338*^9, 
   3.7885242702429333`*^9}, 3.7900721698911047`*^9, 3.790075456648942*^9, 
   3.7900757728611307`*^9, {3.798275458847432*^9, 3.79827548705049*^9}, 
   3.806808917059145*^9, {3.806808948037943*^9, 3.806808961864655*^9}, {
   3.806809097956849*^9, 3.806809109180543*^9}, {3.80682828500041*^9, 
   3.8068282861755123`*^9}, {3.806828343497074*^9, 3.8068283541317596`*^9}, {
   3.806828386089559*^9, 3.80682838642589*^9}, {3.806829319160933*^9, 
   3.806829320273073*^9}, {3.816511571769388*^9, 3.816511574707364*^9}, {
   3.8165116286575947`*^9, 3.816511699222739*^9}, {3.816511747227675*^9, 
   3.816511765064324*^9}, {3.816511798811612*^9, 3.816511825186494*^9}, 
   3.816511912178076*^9, {3.8165119966049128`*^9, 3.816511997055283*^9}, 
   3.816512060969082*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"51623dce-7a93-4a2d-9c02-79fb0c400c54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", "k", "]"}]], "Input",
 CellChangeTimes->{{3.822038206694189*^9, 3.822038210888962*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"7c7ad7a3-f316-4002-b639-7e5655149ea2"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "k"]], "Output",
 CellChangeTimes->{3.82203821120431*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"538c5111-2253-4cf3-8276-3185ec93ea11"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"runs", "//", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"data", ",", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"plt", "[", 
             RowBox[{"data", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"frame", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"\[CapitalPi]", "[", "frame", "]"}]}], 
                 RowBox[{"Mean", "[", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "frame", "]"}], "]"}], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Ev", "[", "frame", "]"}], "+", 
                    RowBox[{"Eq", "[", "frame", "]"}]}], ")"}]}], "]"}]}]}], 
               "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"Plot", "[", 
             RowBox[{"5", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"-", "10"}], ",", "100"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
        "#", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "&"}]}], "//", "Transpose"}], "//", 
   
   RowBox[{
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<generic\>\"", ",", "\"\<b=0\>\"", ",", "\"\<polarised\>\""}], 
        "}"}], "}"}], "~", "Join", "~", "#"}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\</home/adam/Dropbox/Documents/research/galileo numerics/rhoplts.png\>\
\"", ",", "tmp", ",", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7879982209404182`*^9, 3.787998273158593*^9}, {
   3.787999302223123*^9, 3.787999336042832*^9}, {3.7879994868113117`*^9, 
   3.787999512910007*^9}, {3.787999738396778*^9, 3.787999739901115*^9}, {
   3.788002818203457*^9, 3.788002855469852*^9}, {3.788518228914577*^9, 
   3.788518312184469*^9}, {3.788518826312511*^9, 3.7885188460460453`*^9}, {
   3.788518878028645*^9, 3.7885188975260687`*^9}, {3.788524263458338*^9, 
   3.7885242702429333`*^9}, 3.7900721698911047`*^9, 3.790075456648942*^9, 
   3.7900757728611307`*^9, {3.798275458847432*^9, 3.79827548705049*^9}, 
   3.806808917059145*^9, {3.806808948037943*^9, 3.806808961864655*^9}, {
   3.806809097956849*^9, 3.806809109180543*^9}, {3.80682828500041*^9, 
   3.8068282861755123`*^9}, {3.806828343497074*^9, 3.8068283541317596`*^9}, {
   3.806828386089559*^9, 3.80682838642589*^9}, {3.806829319160933*^9, 
   3.806829320273073*^9}, {3.816511571769388*^9, 3.816511574707364*^9}, {
   3.8165116286575947`*^9, 3.816511699222739*^9}, {3.816511747227675*^9, 
   3.816511765064324*^9}, {3.816511798811612*^9, 3.816511825186494*^9}, 
   3.816511912178076*^9, {3.8165119966049128`*^9, 3.816511997055283*^9}, 
   3.816512060969082*^9, {3.821348871279662*^9, 3.821348900329023*^9}, 
   3.821348974129594*^9, 3.82151430860868*^9, {3.821514568067461*^9, 
   3.821514587867977*^9}, {3.821515351040636*^9, 3.8215154422897463`*^9}, {
   3.821515731762286*^9, 3.821515732099031*^9}, {3.821515798744217*^9, 
   3.821515798919324*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"ff599dd8-ce83-4e78-90c8-728b70e76a12"],

Cell[BoxData[{
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"runs", "//", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"data", ",", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"plt", "[", 
             RowBox[{"data", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"frame", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"\[CapitalPi]", "[", "frame", "]"}]}], 
                 RowBox[{"Mean", "[", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "frame", "]"}], "]"}], 
                   RowBox[{"(", 
                    RowBox[{"Ev", "[", "frame", "]"}], 
                    RowBox[{"(*", 
                    RowBox[{"+", 
                    RowBox[{"Eq", "[", "frame", "]"}]}], "*)"}], ")"}]}], 
                  "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"5", "/", "2"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"-", "10"}], ",", "100"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
        "#", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "&"}]}], "//", "Transpose"}], "//", 
   
   RowBox[{
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<generic\>\"", ",", "\"\<b=0\>\"", ",", "\"\<polarised\>\""}], 
        "}"}], "}"}], "~", "Join", "~", "#"}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\</home/adam/Dropbox/Documents/research/galileo numerics/rhoplts.png\>\
\"", ",", "tmp", ",", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7879982209404182`*^9, 3.787998273158593*^9}, {
   3.787999302223123*^9, 3.787999336042832*^9}, {3.7879994868113117`*^9, 
   3.787999512910007*^9}, {3.787999738396778*^9, 3.787999739901115*^9}, {
   3.788002818203457*^9, 3.788002855469852*^9}, {3.788518228914577*^9, 
   3.788518312184469*^9}, {3.788518826312511*^9, 3.7885188460460453`*^9}, {
   3.788518878028645*^9, 3.7885188975260687`*^9}, {3.788524263458338*^9, 
   3.7885242702429333`*^9}, 3.7900721698911047`*^9, 3.790075456648942*^9, 
   3.7900757728611307`*^9, {3.798275458847432*^9, 3.79827548705049*^9}, 
   3.806808917059145*^9, {3.806808948037943*^9, 3.806808961864655*^9}, {
   3.806809097956849*^9, 3.806809109180543*^9}, {3.80682828500041*^9, 
   3.8068282861755123`*^9}, {3.806828343497074*^9, 3.8068283541317596`*^9}, {
   3.806828386089559*^9, 3.80682838642589*^9}, {3.806829319160933*^9, 
   3.806829320273073*^9}, {3.816511571769388*^9, 3.816511574707364*^9}, {
   3.8165116286575947`*^9, 3.816511699222739*^9}, {3.816511747227675*^9, 
   3.816511765064324*^9}, {3.816511798811612*^9, 3.816511825186494*^9}, 
   3.816511912178076*^9, {3.8165119966049128`*^9, 3.816511997055283*^9}, 
   3.816512060969082*^9, {3.821348871279662*^9, 3.821348900329023*^9}, 
   3.821348974129594*^9, 3.82151430860868*^9, {3.821514568067461*^9, 
   3.821514587867977*^9}, {3.821515351040636*^9, 3.8215154422897463`*^9}, {
   3.8215155123043537`*^9, 3.8215155166279793`*^9}, {3.821515765648562*^9, 
   3.82151576829605*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"03f0bdfe-4a5f-4b5f-8fa8-9a75863f4147"],

Cell[BoxData[{
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"runs", "//", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"data", ",", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"plt", "[", 
             RowBox[{"data", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"frame", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"\[CapitalPi]", "[", "frame", "]"}]}], 
                 RowBox[{"Mean", "[", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[Rho]", "[", "frame", "]"}], "]"}], 
                   RowBox[{"(", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Ev", "[", "frame", "]"}], "+"}], "*)"}], 
                    RowBox[{"Eq", "[", "frame", "]"}], ")"}]}], "]"}]}]}], 
               "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"5", "/", "2"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"-", "10"}], ",", "100"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
        "#", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "&"}]}], "//", "Transpose"}], "//", 
   
   RowBox[{
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<generic\>\"", ",", "\"\<b=0\>\"", ",", "\"\<polarised\>\""}], 
        "}"}], "}"}], "~", "Join", "~", "#"}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\</home/adam/Dropbox/Documents/research/galileo numerics/rhoplts.png\>\
\"", ",", "tmp", ",", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7879982209404182`*^9, 3.787998273158593*^9}, {
   3.787999302223123*^9, 3.787999336042832*^9}, {3.7879994868113117`*^9, 
   3.787999512910007*^9}, {3.787999738396778*^9, 3.787999739901115*^9}, {
   3.788002818203457*^9, 3.788002855469852*^9}, {3.788518228914577*^9, 
   3.788518312184469*^9}, {3.788518826312511*^9, 3.7885188460460453`*^9}, {
   3.788518878028645*^9, 3.7885188975260687`*^9}, {3.788524263458338*^9, 
   3.7885242702429333`*^9}, 3.7900721698911047`*^9, 3.790075456648942*^9, 
   3.7900757728611307`*^9, {3.798275458847432*^9, 3.79827548705049*^9}, 
   3.806808917059145*^9, {3.806808948037943*^9, 3.806808961864655*^9}, {
   3.806809097956849*^9, 3.806809109180543*^9}, {3.80682828500041*^9, 
   3.8068282861755123`*^9}, {3.806828343497074*^9, 3.8068283541317596`*^9}, {
   3.806828386089559*^9, 3.80682838642589*^9}, {3.806829319160933*^9, 
   3.806829320273073*^9}, {3.816511571769388*^9, 3.816511574707364*^9}, {
   3.8165116286575947`*^9, 3.816511699222739*^9}, {3.816511747227675*^9, 
   3.816511765064324*^9}, {3.816511798811612*^9, 3.816511825186494*^9}, 
   3.816511912178076*^9, {3.8165119966049128`*^9, 3.816511997055283*^9}, 
   3.816512060969082*^9, {3.821348871279662*^9, 3.821348900329023*^9}, 
   3.821348974129594*^9, 3.82151430860868*^9, {3.821514568067461*^9, 
   3.821514587867977*^9}, {3.821515351040636*^9, 3.8215154422897463`*^9}, {
   3.8215155123043537`*^9, 3.8215155166279793`*^9}, {3.821515765648562*^9, 
   3.82151576829605*^9}, {3.8215158312082663`*^9, 3.82151583765865*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"978543fe-b386-47fe-8f18-41be511a1cf2"],

Cell[BoxData[
 RowBox[{"runs", "//", 
  RowBox[{
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"data", ",", "\[IndentingNewLine]", 
       RowBox[{"plt", "[", 
        RowBox[{"data", ",", "\[IndentingNewLine]", 
         RowBox[{"Function", "[", 
          RowBox[{"frame", ",", "\[IndentingNewLine]", 
           RowBox[{"Mean", "[", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "frame", "]"}], "-", 
               RowBox[{
                RowBox[{"\[Tau]", "[", "frame", "]"}], "/", "2"}]}], "]"}], 
             RowBox[{"1", "/", "2"}], 
             RowBox[{"(", 
              RowBox[{"Ev", "[", "frame", "]"}], 
              RowBox[{"(*", 
               RowBox[{"+", 
                RowBox[{"Eq", "[", "frame", "]"}]}], "*)"}], ")"}]}], "]"}]}],
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "#", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8213491048996973`*^9, 
  3.821349121562196*^9}},ExpressionUUID->"61ab4807-0ee8-43ba-bb60-\
aad379defde0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"secondhalf", "[", "l_", "]"}], ":=", 
  RowBox[{"l", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"Length", "[", "l", "]"}], "/", "2"}], "]"}], ";;"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lasttenth", "[", "l_", "]"}], ":=", 
  RowBox[{"l", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"Length", "[", "l", "]"}], "/", "10"}], "]"}]}], ";;"}], 
    "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"runs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "//", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Tau]", "[", "#", "]"}], ",", 
           RowBox[{"Mean", "[", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "#", "]"}], "-", 
               RowBox[{
                RowBox[{"\[Tau]", "[", "#", "]"}], "/", "2"}]}], "]"}], 
             RowBox[{"1", "/", "2"}], 
             RowBox[{"(", 
              RowBox[{"Ev", "[", "#", "]"}], 
              RowBox[{"(*", 
               RowBox[{"+", 
                RowBox[{"Eq", "[", "#", "]"}]}], "*)"}], ")"}]}], "]"}]}], 
          "}"}], "&"}], "\[IndentingNewLine]", ",", "#", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], "&"}]}], "//", "lasttenth"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"a", " ", "+", "  ", 
    RowBox[{"e", " ", 
     RowBox[{"Sin", "[", " ", 
      RowBox[{"f", " ", 
       RowBox[{"(", " ", 
        RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parameters", "=", 
   RowBox[{"FindFit", "[", 
    RowBox[{"data", ",", "model", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "e", ",", "f", ",", "g"}], "}"}], ",", "x", ",", 
     RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
     RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "=", 
  RowBox[{"model", "/.", "parameters"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxinput", "=", 
   RowBox[{
    RowBox[{"data", "//", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], "]"}]}], "//", "Max"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mininput", "=", 
   RowBox[{
    RowBox[{"data", "//", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], "]"}]}], "//", "Min"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "data", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"Plot", "[", 
    RowBox[{"fit", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "mininput", ",", "maxinput"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "//", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{"(", 
         RowBox[{"fit", "/.", 
          RowBox[{"x", "\[Rule]", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}]}], "}"}], "&"}], 
    "]"}]}], "//", "ListPlot"}]}], "Input",
 CellChangeTimes->{{3.821349167087616*^9, 3.821349274864133*^9}, {
  3.821349345758807*^9, 3.8213494147651443`*^9}, {3.8213494477409267`*^9, 
  3.8213497209338217`*^9}, {3.8213497631265182`*^9, 3.821349852524938*^9}, {
  3.821349882582776*^9, 3.82134991154255*^9}, {3.821349948416822*^9, 
  3.821350062485384*^9}, {3.821350107222166*^9, 3.821350130527637*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"6a3c39f1-5aef-4a4a-9f87-2cb46df62858"],

Cell[BoxData[
 RowBox[{"3.896010961327994`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.4062623708469456`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.965297760858894`", " ", 
     RowBox[{"(", 
      RowBox[{"10.33043251060271`", "\[VeryThinSpace]", "+", "x"}], ")"}]}], 
    "]"}]}]}]], "Output",
 CellChangeTimes->{{3.821349179191412*^9, 3.821349183088097*^9}, {
   3.821349224786491*^9, 3.821349242696842*^9}, 3.8213492985172443`*^9, {
   3.82134937238942*^9, 3.8213493890304317`*^9}, 3.821349435993676*^9, 
   3.821349507976516*^9, 3.821349725091202*^9, 3.821349774686048*^9, {
   3.821349806879608*^9, 3.821349855316577*^9}, 3.8213499149446707`*^9, 
   3.821349955142727*^9, {3.821350054206184*^9, 3.821350065387583*^9}, {
   3.8213501103633003`*^9, 3.8213501353776417`*^9}},
 CellLabel->
  "Out[208]=",ExpressionUUID->"da52bbf4-7d9e-4939-a143-3c0516c97531"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
jo7/aVpJ4deKEw8Z5HrPF9dSn6HfThLfexL98HSX0o7uKtyXyqfaDKCfHnt2
dZJGDYWpl+46XEPuKyy97VtLwWbKuK4vcpmiqk3hc/TLWercv35cZ2s0S6SO
wuScsa/H0K8HZN884L/EejbNkvmD/i4VrrcvoZ6CyNP4N0eRk67HS7Y2YPzT
1yVxkE3l3j1VaKSwIXoZycB5USKq4ePahPHpvrhnhZwsGiuf3Uzh2TyxVU9w
/hz9h60bfU2B/z0jcCpy4qnFwbwWCrYB9XqOOK9Ca33Uo1uxn4OywjjIZzsn
t9a9pXDLeMaUGzjvanQNo7ltON+yCpVqcD5u8/qobdeO90dstk5Cvv7U5KPg
PQWVIjPbkr/zdk/i2cEOCo3k+/49yH++Ptyg3Yn7VqFKawLOZ/dOq6/BXRRu
rHSrs0Y+SobSyrsppHu6ZlvgfP/MP2rEfKLw6XeUfhvO/8QVc3+bfkZ/nWrU
EYNc4pfzv9QeCoeCyMY03BcivjXt7u6l0FJQHf0a9427/nOna3yhkBn8YOF6
ZLk93rm+/eg/bzY3CXA/ibk07Fg4gPtMyGDLbOS776QkRIYoKNs2dzjiPmPU
7VnK/4p+GWa95hbuP82Hx/YnfMP309W+9Upj/dVXybV+p7B3i1XEYuSQiDs1
Cj8pCIw1nrrjPqUi/CHIdZjCI+GRlk7cv/qLrdSyRygY8MK5FshrVBObR39R
cPAIF9kynwOze2UieGMUIk4GHD6D+1yf076V0eMUpjNVv6ch6+w/8qFuAve7
3z8iv+N++C3+Yxz3D/qZpI/hWeT3qgvATmglbDLoyHDA/fL//ILc3g==
       
       "]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
KdWFlcXuO7yF31zZbugMCwtpDtfB/wdoZcN/
        "]]},
      Annotation[#, "Charting`Private`Tag$410587#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{18.899128925848334`, 3.86346493780411},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{18.93147284889723, 21.001483924026505`}, {3.884376204930236, 
   4.302601547452754}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.821349179191412*^9, 3.821349183088097*^9}, {
   3.821349224786491*^9, 3.821349242696842*^9}, 3.8213492985172443`*^9, {
   3.82134937238942*^9, 3.8213493890304317`*^9}, 3.821349435993676*^9, 
   3.821349507976516*^9, 3.821349725091202*^9, 3.821349774686048*^9, {
   3.821349806879608*^9, 3.821349855316577*^9}, 3.8213499149446707`*^9, 
   3.821349955142727*^9, {3.821350054206184*^9, 3.821350065387583*^9}, {
   3.8213501103633003`*^9, 3.821350135440569*^9}},
 CellLabel->
  "Out[211]=",ExpressionUUID->"d82d7358-a094-4c18-9e84-892adb03a8d4"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwd13k8VF0YB3AJFdklI/vYBmNmzNgqDpMWGrypBpX1jUQ7kyQNZS8iKi22
kqZ6S6GS7aAkFYVIIRJaFCOFBvV65q8+38/veZ5z7r3n3om2/163AFEREZHc
eSIi8K+uFmUeZ8TMTiQv7ujsCgbue3inqHJ0ziKNhXkfxXF687SX2Bh4+/QM
+lx9aFZSmvVjzn0tFs6JZriO4lmZMQ75TSVpCW0kEPcP6foJLpQy2iCOe4Iu
E4gTMH/qGPGxGW6zU3gaPAn5K8EL+VlbLUfyweIpsJZlx0J51Prgs67g95zt
zH8u/EXD/Gu4zX56zjVU9fggYxwubnosaWbO0W3yRVNKKCZUn9YyC/1JPe5t
BuiJqG6fyl/IKU9MBpRwldiVVF8R+lz/ruUul+l4s1uGDW/enEUOvfHdQcZt
xvu+jYqCyZbLKYrYZPX9C5ZiUC//tGyxFhKNc3Pkis+5j7vlCo2ODr+omXwi
MefoH9GfPxoi68jhQpmF0N/gZtIjgR6kOrPZi8B33F3+vKzu6vQXz5EEqxTJ
JszDbda8kkEp6H/UtvqdIh5/Ke5PlgYXDKg1KOIgKT95jgzUv3Tp+CqDN/c9
x5WywnkLPD16qttGjfeIyYN1vRds+WqbZbFdnaUA/QyGgKCJlt1Kep6hCPuf
WXtUko56mQOHu5SgvuyRcz0N0XWSSURlqFdP8XBSQIZPtnYGLwWbnKgfXYaf
bmmPL1aB+lne2mkqdv302lxAgHkyvuUpJJz5on3AfhnkeeqKd6WR15pNGUlq
kDe3+1TS0X4NE2aLOuTrs2ZH5+Emwlu+iibcv978cS8a3pHAyPPVgvz1yqmd
w7bz3b1ceNrQXxg/ospA2+MSZ0d1hPs/wzmtjed9bL9pqQv+2XrZTgfb9apt
4erBPCXxeUGWKMbPbFGDPuz/Ql7sgDbeNJ5WJmMI888ulH0wW810Ld3BJkE/
pcubSEYdZIJyjhH0v/bbHEXFVVanHw8aQ14QtXbUHOW8GA0lk6E/dxCPGeDt
Ep46HNM52500fSiti+4eznlVSYH1vC67SmliuX9SuWI08J2Rauoy9PjAFVOW
GfS7Ln04poPft3v2ZNDn7PsxwLrEDDmnRp3sYsA81FmfbYq/DSStIFqADaSZ
HebI2nj6S7Al2DijVI2Ic0MvZhVbwTyTyesqI7Z6qUNrBNYwTyqXeIqKNqwv
+GW/AtZ3Mj88Q8Yen1wLklZC/X2O4mdF9CsvwK3FBtzdP6BIR1OuN0UISHje
PAwT9fC/3IEiXzvIN9eYOKlj8ygHb5492JZJKDND43qnFvOZUN9BGC80RjML
4yssHSD3u+t9nICzh68Ec1eD1wU52ZNxQ9p2QsMaMDX0Yf+f6tb8hKcy66C/
vJQYbYL0dyWGsx3hfrN9HNdZI1frj3o5TmAbAw7JDFk3b349uB76V53X15BH
GfcuHic7C+e9HTrx3XY4lE/juIDxtMhGBXzwh2xfpSvMn9w+StfCkYMlqWIb
hM+vVrZMB5c5uduw3CD3fueUpY1tlx0cztgofJ8+yvWo4DKbp+e7NoH5a1ad
GK9eume+I5ENLlXl20qis1FBk8Hu0B9ecETDAGmk3Lpa7AH77cor0VqOps7F
bxJ4Qn5qVxXJHDns2jOfuRX6eemsekU02dZ3N2kbOMDloYw+npJP823xgvrb
f4580ceeGZMyBB/I3V4JspWR4r2GKl9fyLfwE2nLkXtq5C6eH+RBP4u+fLG9
f7F2Gd8ffCaCfs0YO/7ob7TcDnY4uypFG5VvxYe4AeCwQ6KBpkiL2WLQEAiu
iP09j4zjpTM7ZILAg3s32BPRVF1xHHsnrHfGKV5TG705xmPkBENu/EXqhh4+
snWsfzAE8hL1tIXLkesdi3TybjDXI/KXMY4f1LTj7IHzGvY6b5UlCk40GK3c
C7lHlnO7Ln6l3pgtth/mLSh3UaMjt7AbLNYByJf0hiw1xAGP1kxnhEIeUllo
uAKlMZg3usKE38f0TSFkvLpmqSfxILg0Ks2WgY6tX7UgJBzqRao/T8RUH47c
ca/4EHhlgd9+Fdy4QG+7IAKez8HCtUXL0XHPCQVmJORp2oP3lDBplF2bdAR8
8c2+1xr4qcLQ3pYocKrxn+WWaPabhgaBC/Z+sE5MBUmq5r7wjRZ+j0lGw0bY
+PqHw7wYcJGAtV4Np+45RuIfA/99tFGfgr57z7yxjIX1/T4u3b4cXeZ9iefG
Qf5zYqOXOpoWrTdviAdfiomalMTb5CUHZBLh+pRevT1FwqTyDafZSWB/eVMH
Ct6qTbfPSQYfGflZbIwXxhryB0+A2dtVpfRxkdOtHHKK8P7Q0x7p4A5td2dO
KjhlveZaIo5m5U9XnoL1tn3KvmqAWV81b4ilg3evTc8m46mlLh6s01Cf1C/y
goIb9ldLZGaAXx5vUjLE778Ml3ZlQv2my63X+dUPCnf8SzwLPn5XI9cAuQb/
Jx9yDq6XlEy6ZY0SxxxrirOg/3yItKUWynpVvkdwHqx920XOGL/fkKLOvAjG
06mOOvjC1IoXSZdg3pFYmSc09C1mY2RLNvh38/xyQxQQ6WJEyBWeZ5cZDhX3
O/I6ffOE96/nqMS4bfnJb/G8fFjf30/CnIoeml4151+G83h6X/UoFX8/xBqw
LID6e2G3lcyQwUBwBveq8PnzXCuX4OjGw8yGQnDNHkpMS/XFHZN8GR64P/XY
IWVEUgvKZV8Ht5zUfyaP9XPcXHJugB9K2k8sRetMabODN4Xna5F02mj1tt9H
b5JvgRdFqR9Rwp8Kajw5t+F6w8R3x1OQiFnEwqoi2N+WPeIfaDi7XeeB2F3I
LYNHu6noTpVVAKsY+qPz0ONqW90qplJmCVxfT+BEIA23vymt6yqF+t/d40cN
0boa2f3E+1A/7rV52gTJJ7dqhjwAn68NVzXEqbvDm4vLhN9DbmqvKTawOhIl
eAj+ejjyvDIaMdxqwqyA/VC0Kz5ZoNaIU++SKiG3v66nRUbowdmklirw+7fn
5s3D2ZSvlgQMllzMsdTD7UniQ741sL952qdvUTGnwz+TVws2OLyx0gwzDh1h
8uvA2yRTZOnYcP1zvuVj8Pyq11p0PD/3SS63Hq6HV7ZGm44Zj4edG57AfLXd
4z00vMrz9ozMU+H5O53zjxFe/DfhJrsRbHc9IlwBf3Eb98x5BtZ9rV6kiTqv
BSwceg7X076yLNQCEZvdHpCbYH6wsoS1Djp/gRHIaQa7hiUeMMYneuKUql6C
V9580kzF4vkP68RahOctKPWAIjq5334/qxVcL38rgoz4Xuc0M9tg/hvF1Ic0
/KrTuLnrNeSJg7hEHhcoRhwhdsC8Fwrqo1RE3zNiFPIGrneL4D2JgbeslHhb
3Ak55/GaGH3kWmeaIHgL/RF2jAkt/Pb1a3Nml/B7Ub30sjTOVDswkNQNfnWE
Iz5V7RB8IKOlB3xdY6hWCc8mujIJvcLnLzL8QxVfYMbyffuE39PSwP9UkbJa
SC7vA+w3cPJKNB23x6U68/thfUG+ZowZaqxZM2M5IPyenRzO0cGTptI3uYPg
JKMeLRPcar7Ns2EI+kXfN1ubobH4iwtkPwt/rziLP8li1eO0++wvkPP2X5A0
x2cmz23P+Qr5MrenvRqYa8NQHBoGyznLciiI4h9dS/4O6+9Q3PmSggxe9O3l
jEA+4OqsJofjsso0qkbBsbquH41whV1Mk9gYWF015godV9DuRbJ+gD1IsQfN
sbtpjlHmOMxbXsGVN8c2ac2dXT+F7+NtxUEGfrw4NYE4Aff/rO2Of+byl5st
QiaF17956U5zfEMlb6B4CvInbm/szfBp9xenBb+hf+quXZkuJmAre+Y0eF1w
oukP2ycyPqNJM1B/vLIw2QxNp1/KbpkV/v6MaMWoomAvZxbhL/j5VdliKvYv
+yrwFWHMrbevhitFw7t6X17nzWPA7wlRossAVe876MEXBe9b4V4sg3warBZY
ic25ZiLnVdncfjvT7nHFIbf1uPqfBsLUzn8bJIQOeye3GD/X3KEguxDmT3bl
JZng09YPatiLwP4uNGcTZC+ptTdHEuaJ/Qhfz8CXeybVh6QgNw3ylKSizd8f
vCBLQ/6sPzORjm+GvjvMkYH8qIvbJSJaY5NGqpKF9aSmPuhr470Ut04xefDA
2qY+Q+xodiGepQC+4hSST0MPN1cyMhXBcR9WhlHwYKTUxy4lmLfyxV9LI/xi
y9t0ojLkvW3hnyjo+ViOXchScE1f05lmW0PbjpFiFagvuCCRQcNSJteyBQTY
35bMgMN0vOtoMou5DOrF11/IIeCpid+CJDWod3RWstFCj+mrr7eogwe7z8xS
0FBRuTtBE1z716KAhhwm2sT9tMBdK/+kURFfs7iUpw32Cv1DoyLFpwJ/vg7M
p9xz9qahoY1N8la6sL6L3aFfVBSQfLmGqwf54Qti/xiiYdrPPQ36YJW72zZ9
qr53T1pd1hDmKf46IGuKP+yyfs4mMeD/+xW3vRg4/ExNRI4R1B+z2MAj4ItI
zXDIGOoDKxLjzJCWwpkOMhlyNxFrPWn8MP9AHMcU+ssD+pcxcEs/mVFFgfo7
igE5WkjntfRHMRrUm7y7UPC3OuD9iXSWmfD+XDXJpOAre0dQJh1cviF/loq+
fz880sWA6+G2HndkYFx04xLRAuaFpOO5vw9RYp1TiCV4bInyAgY2Wi3xu9gK
6i8PsN1oyL207JrAGvZz8+mtNVTscMmNzVwB88suvW38UO1toyyevFJ4ntdM
RGii0L4jJS020E8KZ2+n461OT/0ICPKfTudZf6uZltZyfnbgRB7hsxnq3S+L
efbg0XfsIALeVPtoN58J6403fWs2w0MhZ9SsHCAPFDhqGGPlJ7PPuKuF58f6
5ZmRam7WioiGNbD/9on7W/TRo/qTBrLroH/v3tCNVEQxMu1gO8J+/K9TW83Q
7H9ZsTlO0C+3pMPKDOlXLKQPrYd8sBRvNkN/3j38QHaGeVpBi8XJKH1aN43j
AvWuE5rSKkjXOs62yhWsVsu6uAy73lH6LrYB6iWOYEkavhrBushyE16PwZdb
hriRFeiYuRFs7LXvogY6NHthsmsTOF6kIoWEUg/pFBLZ0L+F9jHKBE8d5mwK
cYd8SsnBfik+n/ZctMQD9hetE0eionGvrXcFnmBp2vOwue9NY7YPcyvUNw4l
PjNApssapZO3gVetk0/WwdnlCpUtXmAFaU1lWaRpWBRM8IH1nLWlrhBxldJS
gp8v2OF2wm4ycis62sDzA5vd6F9BxR5OhIN8f+gvuZZ40ggtaPbRtdoONnQ0
VvtebWAV18oNgPobn/1STLHT7YrohkDh8+5yfqeEZqIYFNkgcL2joTId/dkZ
1MPeCf5PkCS1AFM4iSdygoX3S0mZPfc9a3psPRQC8w74bQw1xi1NrM/k3ZCr
/s3kauBVGufPcvaAC+RqHESwRHunQ9Ve8Elfg01jtuWWy8fF9oOpB9up32yL
8dd81gHhfixyncXwoPi//2SGgg8Fl5prYZLDqz9dYbDeksLsISOs9MX7FvEg
WG74HcsAO/clbA0JF54X+zjZ97bPCkiSJYfgfDlQrxQzECW8skwQAbmVvNHt
Qduo2eAdzEhwrM9grBGO1b+9JPkIOHLHEms9tHvQ93FLFFj00BtpBRSQMH2A
wIX1pBsIPnr4+FShtl80PF85tmU2Hc0wul/yYiCfGXXbRcLeDw8c5R8DJ0pb
TpqjlM/9Jlax4H+Hv9YZ4jTxTV3cOJjPq/7VbIL2Z35LaogHd1ao1vKreT56
VrKJ4DDRtnUaOMO7ZYidBP7bK6gzQx11QWdyksETYav2iM/9PSznMHQCHCzV
st8ASx6z/0FOAZ+yz7RRwImc53mcVHBUTGavLqqs0XetOgXeVuLozECJ9Qdn
xdLhena9+x1ljhJXvr/JOg37tSmdWUhGT0ncLZkZUB+kfekECVkatC7szoSc
RwnkmyAV7d/3iWfBi+3+izdHFe5LAkLOgZnro08w0IWtaxVLsqC/dmFkgR5K
IhTVCs6DS83oU9LY0KB+L/Mi1HvPi5nRxbfOu2okXxK+D9PUTlk0m/rkRUs2
5Lu2n4k2Q6qn1kUSciFPyI3sUcVJMeMkvzzh9+r7dM4f2wg5u05ePtT/mMhP
n/t7yIYfz78MjrdvFtfBTauPmFsVwPUyE/5NpyM7LDLAvQr9nxa/WTyXXzp/
uqEQ7P2L1GqEkouwnSwPHP0y+317de4C2ij7uvB5rCKNyWMPqcDsnBtCmy+5
Yo4k6lRZQzfBdsvFfMZsdY0aBORb4NTnP7EOFl87wOPcBovUxlzqt2VvNHGv
KgK7B9H1KEjmygNx8btCGyVsMUcdhX9KWMWw/0UqFr+NUFg5wT+zBHLm6CN/
FTSoj+W6S8H/5n16qohaWwMx8b7weVvp9mugfF7S7pAH8D5cfdWrQUPTy7uX
lZSBecNF2xgoSzLsmeCh8Pe4a/ySDurkNh5iVgi/T/KlKQo42eSHfnIl+EOc
aaE23taR095SBfUWdllndZHTrrWxBAx5t8Lj23P/n+/fbuZXA47oOvCCiKW8
C/t4tXC/awW71akouEzjFL8O8gCL1g/ymH9gjY3VY3Cd5gZ9ZXRurHGYWw/2
zBg+JYfT9mlfaHgC6yW9mck0QsVvvNfJPhXWdz5W18WTyRkT7Ebh+6Ol7KWP
2va+Ksh5BmZHMLYtQqcG9TYOPYf+D6teb5h7f59dmWfaJPy+67SNSOJvVXVF
nGbwhplIgT56okvyrnoJ9X6bl5SaoRZf18XiLZATZU4rE9CoxrtyVqvw+2Uc
5zNlqxpvvzOzDaziT6F/qs66nrG0+zXYI29I75stW/N9PbEDfK670kIB1UqY
hoW8AafEb2ymoosSaTolncLvRVTbP7ooxkWuRfAWcsnLjOeK+GyKAZfZBT4d
GFtIwseaw8jJ3cLzc7G+7X31mQHR7pYesHkSVV4DNdk4JRN6he+XeWioEXbe
/8nKrw/mH1W/x9JG1+vdPvE+gKnLtbp18KzP2TP8fqg/Kpr1TBT9/VGxymoA
nFXe26ePdw9s+8EdFPZHVkYbohj6WF7DkPB73YjDyfgLK8ZV9jOYpWrUporP
0pb8YX8BHzc9+dYQ1R4s/S/nK1h/1uiqOk4Yf7NlaBjOn6v5YBEV3w1fssj0
u/D3+c75cyZY0yf0AWcE6l0SPE7r4tTcyYCqUfASt1Ohy/Dd96pK4mPg85Kj
QSrYdWhvHesH9IsrKW/Vxp1R0/syxyFPi/znmhE+RbbQ7P4J64nE5n+n4eiE
O03ECXCTrce6ub9/xT5GhkxCfe9+Kz9NPFKzzahkChx47cctKbSCdLZT8Bv8
dl1+JQ1LD6slMKfB1m7RfAr+FrjTPHlG+D6O/OSLYut9Rz+2zMJ+LtVfG7HA
4xmf0gl/hecjevfi+egDSd3OT8R8bn0P+/tKVvh/vmVyuw==
      
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{18.899128925848334`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{18.93147284889723, 
   21.001483924026505`}, {-0.0003674454650033354, 0.00041441031173050646`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.821349179191412*^9, 3.821349183088097*^9}, {
   3.821349224786491*^9, 3.821349242696842*^9}, 3.8213492985172443`*^9, {
   3.82134937238942*^9, 3.8213493890304317`*^9}, 3.821349435993676*^9, 
   3.821349507976516*^9, 3.821349725091202*^9, 3.821349774686048*^9, {
   3.821349806879608*^9, 3.821349855316577*^9}, 3.8213499149446707`*^9, 
   3.821349955142727*^9, {3.821350054206184*^9, 3.821350065387583*^9}, {
   3.8213501103633003`*^9, 3.821350135484021*^9}},
 CellLabel->
  "Out[212]=",ExpressionUUID->"8e2ba5df-30e9-48a5-9dc5-1aafd112fb5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "0.9656631619062923`"}]], "Input",
 CellChangeTimes->{{3.821349929660556*^9, 3.821349929926153*^9}, 
   3.821349965027165*^9},
 CellLabel->
  "In[172]:=",ExpressionUUID->"0278b455-c990-4592-9d70-1ad9689e19c7"],

Cell[BoxData["1.0355577798224427`"], "Output",
 CellChangeTimes->{3.8213499306953278`*^9, 3.821349965895681*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"11bea57f-15b5-46bb-9525-b89dacc0b561"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotwithfit", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lastnth", ",", "dat2", ",", "dat", ",", "model", ",", "parameters", ",",
       "fit", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"lastnth", "[", 
       RowBox[{"l_", ",", "n_"}], "]"}], ":=", 
      RowBox[{"l", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"Length", "[", "l", "]"}], "/", "n"}], "]"}]}], ";;"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dat2", "=", 
      RowBox[{"data", "//", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Tau]", "[", "#", "]"}], ",", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"\[Rho]", "[", "#", "]"}], "]"}], 
                RowBox[{"(", 
                 RowBox[{"Ev", "[", "#", "]"}], 
                 RowBox[{"(*", 
                  RowBox[{"+", 
                   RowBox[{"Eq", "[", "#", "]"}]}], "*)"}], ")"}]}], 
               "]"}]}]}], "}"}], "&"}], "\[IndentingNewLine]", ",", "#", ",", 
          
          RowBox[{"{", "1", "}"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dat", "=", 
      RowBox[{"dat2", "//", 
       RowBox[{
        RowBox[{"lastnth", "[", 
         RowBox[{"#", ",", 
          RowBox[{"2", "^", "2"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"model", "=", 
      RowBox[{"a", " ", "+", "  ", 
       RowBox[{"e", " ", 
        RowBox[{"Sin", "[", " ", 
         RowBox[{"f", " ", 
          RowBox[{"(", " ", 
           RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"parameters", "=", 
      RowBox[{"FindFit", "[", 
       RowBox[{"dat", ",", "model", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "e", ",", "f", ",", "g"}], "}"}], ",", "x", ",", 
        RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
        RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"model", "/.", "parameters"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "fit", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mininput", ",", "maxinput"}], "}"}], "=", 
      RowBox[{
       RowBox[{"data", "//", 
        RowBox[{"Map", "[", "\[Tau]", "]"}]}], "//", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", "#", "]"}], ",", 
          RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"dat2", ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"Plot", "[", 
        RowBox[{"fit", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], "//", "plotwithfit"}]}], "Input",
 CellChangeTimes->{{3.8213501781830387`*^9, 3.821350397747384*^9}, {
  3.821350429723413*^9, 3.821350508669606*^9}, {3.821515863976615*^9, 
  3.8215158843127203`*^9}, {3.821515932336986*^9, 3.821515940796658*^9}, {
  3.82151597456782*^9, 3.821516024334721*^9}, {3.8215161035183983`*^9, 
  3.821516104046401*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"8d0c2668-07ed-4425-a650-55a9cac9968d"],

Cell[BoxData[
 RowBox[{"2.5000077966369045`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.260189629648046`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"1.0040459473383565`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.19139505056023268`"}], "+", "x"}], ")"}]}], 
    "]"}]}]}]], "Print",
 CellChangeTimes->{
  3.8213505131019983`*^9, 3.821515907576282*^9, 3.8215159457737217`*^9, {
   3.821515990702343*^9, 3.821516029871428*^9}, 3.8215161103352957`*^9},
 CellLabel->
  "During evaluation of \
In[112]:=",ExpressionUUID->"bd88ea05-fb72-4a8e-b239-daa30ee8cefd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", 
  "\"\</media/adam/mobile storage/ha/data2_100/genericruns.mx\>\""}]], "Input",\

 CellChangeTimes->{{3.8221374872309847`*^9, 3.8221374925271397`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"ed03f628-74e8-4194-8137-bf16ce5fea34"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotwithfit", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lastnth", ",", "dat2", ",", "dat", ",", "model", ",", "parameters", ",",
       "fit", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"lastnth", "[", 
       RowBox[{"l_", ",", "n_"}], "]"}], ":=", 
      RowBox[{"l", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"Length", "[", "l", "]"}], "/", "n"}], "]"}]}], ";;"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dat2", "=", 
      RowBox[{"data", "//", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Tau]", "[", "#", "]"}], ",", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"\[Rho]", "[", "#", "]"}], "]"}], 
                RowBox[{"(", 
                 RowBox[{"Ev", "[", "#", "]"}], 
                 RowBox[{"(*", 
                  RowBox[{"+", 
                   RowBox[{"Eq", "[", "#", "]"}]}], "*)"}], ")"}]}], 
               "]"}]}]}], "}"}], "&"}], "\[IndentingNewLine]", ",", "#", ",", 
          
          RowBox[{"{", "1", "}"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dat", "=", 
      RowBox[{"dat2", "//", 
       RowBox[{
        RowBox[{"lastnth", "[", 
         RowBox[{"#", ",", 
          RowBox[{"2", "^", "2"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"model", "=", 
      RowBox[{"a", " ", "+", "  ", 
       RowBox[{"e", " ", 
        RowBox[{"Sin", "[", " ", 
         RowBox[{"f", " ", 
          RowBox[{"(", " ", 
           RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"parameters", "=", 
      RowBox[{"FindFit", "[", 
       RowBox[{"dat", ",", "model", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "e", ",", "f", ",", "g"}], "}"}], ",", "x", ",", 
        RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
        RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"model", "/.", "parameters"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "fit", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mininput", ",", "maxinput"}], "}"}], "=", 
      RowBox[{
       RowBox[{"data", "//", 
        RowBox[{"Map", "[", "\[Tau]", "]"}]}], "//", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", "#", "]"}], ",", 
          RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"dat2", ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", 
           RowBox[{"1", "/", "2"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"Plot", "[", 
        RowBox[{"fit", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genericruns", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "plotwithfit"}]}], "Input",
 CellChangeTimes->{{3.8213501781830387`*^9, 3.821350397747384*^9}, {
  3.821350429723413*^9, 3.821350508669606*^9}, {3.821515863976615*^9, 
  3.8215158843127203`*^9}, {3.821515932336986*^9, 3.821515940796658*^9}, {
  3.82151597456782*^9, 3.821516024334721*^9}, {3.8215160580349817`*^9, 
  3.8215160585355787`*^9}, {3.821516120629456*^9, 3.821516126443389*^9}, {
  3.822137504864956*^9, 3.822137553875942*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"cb241615-8390-49f4-b895-868f36f7b79f"],

Cell[BoxData[
 RowBox[{"2.503158202988859`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.8354857181956817`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.9133828456032126`", " ", 
     RowBox[{"(", 
      RowBox[{"2.16272478617668`", "\[VeryThinSpace]", "+", "x"}], ")"}]}], 
    "]"}]}]}]], "Print",
 CellChangeTimes->{
  3.821516063854641*^9, 3.8215161324044533`*^9, {3.8221375144427233`*^9, 
   3.8221375609459963`*^9}},
 CellLabel->
  "During evaluation of \
In[90]:=",ExpressionUUID->"3cd9d411-735a-4ec9-a608-70bf4fbb59e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotwithfit", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lastnth", ",", "dat2", ",", "dat", ",", "model", ",", "parameters", ",",
       "fit", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"lastnth", "[", 
       RowBox[{"l_", ",", "n_"}], "]"}], ":=", 
      RowBox[{"l", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"Length", "[", "l", "]"}], "/", "n"}], "]"}]}], ";;"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dat2", "=", 
      RowBox[{"data", "//", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Tau]", "[", "#", "]"}], ",", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"\[CapitalPi]", "[", "#", "]"}]}], 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"\[Rho]", "[", "#", "]"}], "]"}], 
                RowBox[{"(", 
                 RowBox[{"Ev", "[", "#", "]"}], 
                 RowBox[{"(*", 
                  RowBox[{"+", 
                   RowBox[{"Eq", "[", "#", "]"}]}], "*)"}], ")"}]}], 
               "]"}]}]}], "}"}], "&"}], "\[IndentingNewLine]", ",", "#", ",", 
          
          RowBox[{"{", "1", "}"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dat", "=", 
      RowBox[{"dat2", "//", 
       RowBox[{
        RowBox[{"lastnth", "[", 
         RowBox[{"#", ",", 
          RowBox[{"2", "^", "2"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"model", "=", 
      RowBox[{"a", " ", "+", "  ", 
       RowBox[{"e", " ", 
        RowBox[{"Sin", "[", " ", 
         RowBox[{"f", " ", 
          RowBox[{"(", " ", 
           RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"parameters", "=", 
      RowBox[{"FindFit", "[", 
       RowBox[{"dat", ",", "model", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "e", ",", "f", ",", "g"}], "}"}], ",", "x", ",", 
        RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
        RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"model", "/.", "parameters"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "fit", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mininput", ",", "maxinput"}], "}"}], "=", 
      RowBox[{
       RowBox[{"data", "//", 
        RowBox[{"Map", "[", "\[Tau]", "]"}]}], "//", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", "#", "]"}], ",", 
          RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"dat2", ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"Plot", "[", 
        RowBox[{"fit", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "3"}], "]"}], "]"}], "//", "plotwithfit"}]}], "Input",
 CellChangeTimes->{{3.8213501781830387`*^9, 3.821350397747384*^9}, {
  3.821350429723413*^9, 3.821350508669606*^9}, {3.821515863976615*^9, 
  3.8215158843127203`*^9}, {3.821515932336986*^9, 3.821515940796658*^9}, {
  3.82151597456782*^9, 3.821516024334721*^9}, {3.8215160802165003`*^9, 
  3.8215160806870203`*^9}, {3.821516139869961*^9, 3.821516140358996*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"ae8ede3f-9ccd-4e5f-b439-5836167e8b02"],

Cell[BoxData[
 RowBox[{"2.4576552837630556`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.8086767053997079`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.9290184920708591`", " ", 
     RowBox[{"(", 
      RowBox[{"4.835550508897561`", "\[VeryThinSpace]", "+", "x"}], ")"}]}], 
    "]"}]}]}]], "Print",
 CellChangeTimes->{3.821516085028727*^9, 3.821516144922915*^9},
 CellLabel->
  "During evaluation of \
In[116]:=",ExpressionUUID->"cd2df04a-ceba-44e6-9562-a278ca07cd45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotwithfit", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lastnth", ",", "dat2", ",", "dat", ",", "model", ",", "parameters", ",",
       "fit", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"lastnth", "[", 
       RowBox[{"l_", ",", "n_"}], "]"}], ":=", 
      RowBox[{"l", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"Length", "[", "l", "]"}], "/", "n"}], "]"}]}], ";;"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dat2", "=", 
      RowBox[{"data", "//", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Tau]", "[", "#", "]"}], ",", 
             RowBox[{"Mean", "[", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"\[Rho]", "[", "#", "]"}], "-", 
                 RowBox[{
                  RowBox[{"\[Tau]", "[", "#", "]"}], "/", "2"}]}], "]"}], 
               RowBox[{"1", "/", "2"}], 
               RowBox[{"(", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Ev", "[", "#", "]"}], "+"}], "*)"}], 
                RowBox[{"Eq", "[", "#", "]"}], ")"}]}], "]"}]}], "}"}], "&"}],
           "\[IndentingNewLine]", ",", "#", ",", 
          RowBox[{"{", "1", "}"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dat", "=", 
      RowBox[{"dat2", "//", 
       RowBox[{
        RowBox[{"lastnth", "[", 
         RowBox[{"#", ",", "3"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"model", "=", 
      RowBox[{"a", " ", "+", "  ", 
       RowBox[{"e", " ", 
        RowBox[{"Sin", "[", " ", 
         RowBox[{"f", " ", 
          RowBox[{"(", " ", 
           RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"parameters", "=", 
      RowBox[{"FindFit", "[", 
       RowBox[{"dat", ",", "model", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "e", ",", "f", ",", "g"}], "}"}], ",", "x", ",", 
        RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
        RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"model", "/.", "parameters"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "fit", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mininput", ",", "maxinput"}], "}"}], "=", 
      RowBox[{
       RowBox[{"data", "//", 
        RowBox[{"Map", "[", "\[Tau]", "]"}]}], "//", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", "#", "]"}], ",", 
          RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", "dat2", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Plot", "[", 
        RowBox[{"fit", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "mininput", ",", "maxinput"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], "//", "plotwithfit"}]}], "Input",
 CellChangeTimes->{{3.8213501781830387`*^9, 3.821350397747384*^9}, {
  3.821350429723413*^9, 3.821350508669606*^9}, {3.8213505401854353`*^9, 
  3.821350544374938*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"b67596df-a2de-493f-a186-4378b14d63f4"],

Cell[BoxData[
 RowBox[{"3.898381751443558`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.3963743166695709`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.9994466232637186`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.14489374242903197`"}], "+", "x"}], ")"}]}], 
    "]"}]}]}]], "Print",
 CellChangeTimes->{3.8213505511419888`*^9},
 CellLabel->
  "During evaluation of \
In[221]:=",ExpressionUUID->"860dab9f-f5bd-4aa2-9450-23b68b774035"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw0Wmk4lt/XNc/P/CCVKSljSTJVzk5RRIYkFUVFIupnLhEyJUkoJUmmiDIk
ETKkMs+EEDJmnmfe8//w+uJa133f5+yzz95rr3UhevmmoSUTAwODKpmB4X+/
//+HSyzNNs+9BbkO5tOfVLugXOeIEUHuFvQ1oiPww1d/ZM+4M10lphltnacL
v2N5gg6NPU+aVWhGO88eaJGNf4YGd+x+tL+uCS0tnqbMqkaj/Wlik703mpC/
BYMY62AsMg55JTRMaEJ7iyV+H0mNR9ZHyDJyWY1IVS0xWckuCREf6PclnGtE
j0ufOk9IpyBj068F+1ga0WTewobdUCqaP3ltoDSzAUXXXZ0vfP0BiROcpDUu
NyDv2ctTDu8ykGjPHsYk3ga0ur3ipQtzFpLv3O/UVFWPdpMdk8fPf0TNWtuk
Cnzr0dGXQp9+Z2Qj2XD+C3pQj2xuZpw5xpqD5jnIUctrdYiNPk2QNvmMcisV
Yq971qGk+xLnw1NyUWtY/X/1LHVI/8VsgtdyHhpj8Ckgh9YiYgfX6YXj+Sj5
ifQuokgtWtgW/nkxogBtqJ7Xep9dgxy1vwkH9hQijbiplCbdGpS2PFj+TqoI
FZsoZ14brUYzrBZOmSrFqLJHK0H/UTXa7isQW0QrQfTG0cu3+KrRdeM8rrCx
Epz3rtK+pCr0Y/s9Q5myUnRETaLJUa0KRbxs4AyL+oac/h5am+6sRMLjQ+k/
bpYh2L1rVNanEjE7ZH6qOfodFam/c12RrURX18o83/H9QHeynj6S6alAW/6q
m5oP/0CqfYwCL59XIOOXi09ncn8ioZ+nJoTOVqAPhfbmVwPLUf5oVF7YtgrE
zSI4lGtcgTxDbgw3DpSjruHnx2bFKlHbudQXhZ/KUYTIqUC+qUpkp/9fkPzD
ctToEJAtnl+FqLdzWWlW5chpIKdQzK8amVXuaz6iWY4+xHiE0E7VIPl2gky8
dDkKHzzJtMRbi7giu+K285Wjr92OY02dtej7hbNCT1nLUd/eKvK7uDpU3nvx
59zyT7QewfTs6/569OGv+NrO2Z+IXa9u/u3TeiQSuX6UPP0T8R7b405drEfF
q/3qcfj5V1cth82zDYiNe+X9z5WfyMOwQexWbgOa+moK9mzl6OV+zkbLLY2o
m00zwxfvr7OflN/r2oiE700lrEiVI75Sri0DrY1I+29SWvHRcsQRk7j9vwNN
qPEZaX+5eTnyqTm37B/ehDbSv7ox+5QjO7GBX7unm5COgdYDy7flaE5Orsfo
VDO6tTtJoa++HMGvWnlSajPq9e1msd8oR8HEwYmz7C3IiW9EeWNvBRo6NC0j
d6UFHan68CXQsgKp11QyvfjagqSSxwVYXlegPBcxn3CBVuSmEel7rbMCDfLp
fhZxakW2ZCh6J1iJqqNF3h+pbUW+kh6iPy5XotN9+dcWd/9C5olDD7NSK5Hu
TfZ/6t6/EL/CVavrS5UoU3t0n3jHL7Rr6V5k/4kqdDrVVOW1fBsaKn53T+hV
FZJseb6UGdSGjOqEFijzVWjg1juLi31taOTzdfRFvxol331lmajSjmK2pRJo
GdVoVFJ9OiC0HZ3LeOO2hVaDFBtJ42xD7Uizv2Dpx+0aNK8UDWKHO9Begyqr
bf01aL9/VU1XWAe6JL48TTWsRaq9LU5Kwx3ovImfSOq3WnT6lCtt3+HfaNZq
obJXuQ7leu30qXryG0m90qd/yqxDL1Xzn7MP/kZfPK/nUPjr0UDeXelBlU50
U1PwO+/ZeuStd5vL+lEnqvr2ZN/g83oUtf0Ya0hPJwpO+Pjcp7Me2QdKDJns
70IJQy7Z/0QbUHKIi1uFXxfKTJa9IHS9AXXQMr16fnWhL6JD9wSzGtDAf7NB
DGrdyHxd+F0fqRFpfdxtEhnfjVyn1na73GpEGpfKLyRx/EHdcrwebU2NaE1h
hWGv3R+0/0aoGZdqE3LXkMuQb/iDlJiy0nnim9Bv6t2r57b2IDb+F949xGbE
wtV8uu1kD7KWN+IO8GhGwUZKDXwePaitRDSZcbIZtU86+vJ+6EGhdgcaDXCd
dJsx0Fu6e1BtYoPY7Y4WhLRUdhiTetER3hO6t41akc0bGf0XqBfVD9hvMWpo
RbsfiR16fbMXcVb1WXAb/EL/BRz3tn7di6wdftLfNP1CN1O+5M3X9iJVNktZ
/nNt6F/ZuPvxjV6098yfDzd721DK/l+mF2X70Ij2laS0G+1Iz899UtW0D4n0
i++uX2lH5AT3b11Bfag5Z+fRzocdaMQk89rxvD6kXH+B3CT8G9nMHLJ2G+pD
XrqysTk5vxE69u3Uf7x/EV+ewXqgfie6/IWeIH/0L1ILa9ijM96JfrRVjxfc
+ov0pR/IMj3qQlc6xTPIMX+RzuG6obS93ajj4brdnqq/KMfIEJ1q6UbEUdJb
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
LnMY4fgHdA1/ylFg1pYjROEcH/jZea8FyGJ9nzDiZnqRD8Zmqns/SmH+1Pgj
5XWFD/rOMHdoSFCA35s17bU1H+h1Pg1Q3oX5+pDF9To7PmghX9L32on1n9vv
/hUHPhjYHNUSEcP5LOzetcOND6okRHypOyggFVqrpOHBB5z/rbIZiGL9dpNd
5KoPH5T17vvVIkKBZ0curoQF8IGp0aPAKIz9PI9FFwbzwbvaW0deYvz02VVi
/xM+mAxA2Q0YX7licY4tEuOd0QFKeL0JzuSzytF8oKkuXFKOsfB7GRGrN3wQ
U3LkvAfeP/poW/7jJD4wGjhicgrH94Xit//T/1Fw5WE1d120QdSdb1LdW93u
GBUNNKDSQqFBk6QiRIVKISEaDBFJoaTorZCklIxFSYaiSEkUTUSkEEpK03e+
P9ezz++cvfdae5998rh5yhi4bHjCiPhvfox9/E2hMr4651+YJiHv0Xqh16Tb
yvB66lSgReLd2P1Q2qhEGQu/vvoonMrGTBlOzKpyZbh/PFOqRPJTcB4DeytI
fnVE/n0EP61a4n6uWhlp/v6tt7TZ0Asw+FZXq4zdNXdqXEl+V21p8RtpUMbE
zg+Ojwi2Mjv4UvROGdMdnaL/Ehxyxt14cTvRi0xx5heC1ex3nvX7pIwJJ79x
YglWbXYZTPqqDMUr/Lh6sn9CmY39/R/K+D3O7C8m57+cl5zZ2acM48LARGPi
b7+S69ikIWXyvlRnLiDxeVXe0pwzRvDUj3p1JD+Temos/WRVYD7D+tNHTYJ3
5m1IkFeB9ouMqgh1NgIctTNv0lUgdfep4nlVNm7Kyv1+raiCeVc4Zh5KhH97
wzo5VRUwvii7ZTDJey1tsNRQQwU7rv2nfprCxgWP7nIPoQoi10QuXilH7ut1
Pp8ipqrge8yOR3QpNm7zEvXTp5PvF8393PiPhTL74drnhipY92zOhrd/WLA0
+xT310QFa2VUuat/sVDvZx7EM1fBLhOLsxe+s9Bs9WjP/PkqYO4c/dnVzULi
Q+q9tYtUILNrnOL/lQUf4ahavJ0KWi29Q1cR3GtLu1DkpIJvu9Z7fiPrC+de
9GhdTvydu2pI8oOFlepKi8c9VfCPTjEZ+E32r9/B11+rgtCpamYWQyxMtuVK
VvqqoNdPrTiO+N/p7LrqgL8KnirmvfaWJ/3h6ZaaS8EknpJG4f///c8tszjq
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
lVR0Vl/3Hy3j4YOHvanjFirixG838x7z4BU8O4N1kAqb7qVlC6p4KJd/qa1J
9H4ykFa6/gUPq/tvmX4i98tlqmA05hUP3TITU96RfrW/1/5rThMPUxiynmbP
SD1VmtNrWnnoPd2WsvoNFSvd1jZ97yD8/azesLeVCisnlRfsLh72TizeIEv6
H9Pinu/M7zz4TE2leRC7uKiO4/abh4X/BR3nkHnXWWaW/46/POg/OrVI5wkV
B99Pr0od4WHXwe1bHt2gQl+x/v4daU10Kjlsl06jQnZCWXHLRE383mDXVUv0
Z+CZsGiEqolva/rK526k4rj+6uc8tiYeBvdvuu9Mxfvtbp8tlDUxzVzt0Ox5
VCTnqv5co6YJjuqv2KlEj8vyTDqi+ZqYkP3Z7cVEcp9yjm/IlmhCvK/W59Jr
Ck7dT3tZraOJd0vn96emUmDvOf1Nj74mlA4t8ApcTcH7Y1cfMI01oW2W8jx/
BgW+A3ZuBnM10U63PH6IRsEi9quWZZaayF1gkJ4+ooA/QkvxditNZBzxins7
qgA+RWfbaRtNVK/MTRfSyXwS+vhckYMmLA6zJi2RUCCS3tn/bhnxL3TW0R/z
KQjxqVw67K6JNj7jcyDpx2vqzT7xVmvCdc3TS31RRO+78lIt12tig9fp8f//
P8BJnaon12/UxJaDS+Le3acg4FtjXvRmTfxYRb9qRuabfRqyoznbNNGUYyzQ
+UfBgQflftU7NaE8t/QndzIV3xy9Bn6EayI/oNo3XJuKE2E2iaz9mnCZt/hJ
vwUVsdzJVsYxmjDXor0PJPl+5vP0r1ucJurObj/r40NFknFNwZ4Tmkjsctih
t5OKfXZaa/9L1oRbdurASXL/jbqzJj48q4m5n4wyjM5S4bFndcbHTE1EMz+X
2BE9nj5eoSmfTfhwOm4uT95b/k5Jx7TzNKGmccrDi8w/ZvPOvl5aqImOmtqd
blVUnO9YIxd8SxNlN+y2ylZT0d6ZIJN4l+TrsvKm3Mdk/jSq+HDjvib+zEkP
+lBM5iPr4H2NjzVxZob/rsxs0s/Xzxn9W6WJlcd/d1TEk37f7jJdrZbo57TT
O90QUn9uRwzNGjQhVN51U7SC6H+oscXrrSZeV3x+85zkY+MBG/eINrL/ce3y
lVOpOLC0KDDjoyaK3C7FxdKpeLUjxq6sSxOXq5be/kbqv0Lr0O3275pImPDu
d0ohBQPPGi/I9mmS/n69nkP6i2Gr2Ek8qIms7jTPMksKqqhV2xaPauJKcWS4
QJ3cz6aUnFnSfJyvU5y8megty3vh88eyfEyWiQypIf1PPlPZ3nUiH0k6DxIS
tch9nLl65JM8H37pCRoTl1BwpqmnaQeVj5cWXiqjQeT+rkinT2LwUam15Xhb
MgUqtAX+KSw+Bje+Mjtwj+hJ+xRv2mQ+mozP7r1D5u2Fq0cHiqfwMbFAcLGB
zMOLNXt6bVX5CN7duWhMk/Qfp/Z5zVw+DjYXnash876/9eS8QA0+GiIyDDuX
kvvyXdHmEU0+TBg7b9mspeKH3DbbY0I+hguMtyzaSuap168tNCV8CJ9OpFWS
ek8Zczh0dSofYqWIa5KTZN690vIBOnyE+s2VrDtPxYXLU0/WTefDY2qPfMc1
KmpWzXL21udjRf9vSd19KtYsKOD2GfKRtb3LYpzoo8iw0eiAER/fxAk8FXIf
GrqdXqZkyoft3eC6t6+Ifss8yy/M4WP935Iq41oyr5cu1jUy58OC0/l7J9Hf
aGlIQsU8PiY9222wn8wLQsV/Zsvnk3zU9/5yPE3e97+cWjoX8iHbOOW4hMz3
M3ftD9y5iA876q93NeQ9VBojXDDJho+Tf62bMxdQMdi1ZkKKHR9pbw6dTCL1
9mv7ykJtBz7azpvNWEHmn4oorfN3nPhY7PwuUoG8b0x8f4fbLuOj7krdtpiz
FFhll1q2LOdj1UaHm05+FOgd2+AQ6M6HQ9mFrC8LKfhsPdN21JOPJZu1bvNm
U2DTpm+S4MVH44I9rnRif3WzIUpzLR/PKVXae70pmNlW+6RwHR/uWJxzIY6C
q34q++BL9HOl6npUKQX67rtsXm7gwz7GbHhpDwW3GAPi9f58cGNPyDdNoSK4
2je6L5APg1+vekrmUjHLYsJgdDAfAVk+Xy56kHrQF/cqbePj/nHl/mPbSH1O
Su2/uJ0PAXfzjZ2HSP+PPxlmvJPs/1j95PtkKr6eSJWrDOOjO/6w+cGLVPyM
yElcEc5H4cqdnZfIffGj53bql0g++J4bHF8/IPNLg+PZXfv4+GMoe21iHRW3
KbVs+Wg+9E5xu6LIfVRjPB6RcoiP6as75om+kvpNPtKsfYQPV20YBPwi/cR5
f86dowQn2Ybl95P7qlzP2zaej3ex942CiT08V0u65TgfKWXx55I//38+HaAE
JvKho6BxqZXop6Vbd2DkFB/ZX3UMlch8NfOseVl8Ch8JL5KHWki/O3h8Tjfv
LKmXH6+YBRFUbFaY+P3qf3xoxfSUx5H3ocuxWifLTD5YH24KTywi+dPbcrD2
PB8v3oyUBPGIHlK2HFp7kY+bB5cfuUb6iZn1y47eS3zQxtObFxZQULh3WG5v
LsnfuZX+U8g8PmFuaQ8rn4+VyraHPu6iYKf5eML5q6R/mNWXakVToPwv/PDM
63wUW+rWd1+kQMegc+6jm3zkWqxxnED0ZrPj9AXXIj52ZjzJbyH97D1jt9en
O0S/k+ZbTSL6da+fUL29lNRXfFq2iMyDT87SPsvd58N0qPJiPXnPCo1TnE89
4EMurzZM5//1crRuk+Qx0eeFxFWbyHw90a5N93Yl0dePs1fDyHzwSf1X0uIq
PvLX9z4500Hm2Ygddo3P+Jg27svO+UHFnWS37A0viL4SrTY8+UeFpVH4+cE6
Ph5fLNaZMYkGr/2p5rGv+LiqN+uI+WQaOCoJfO4bkq8zSVPPkXmaKqOentvE
x5DoxNZ0MQ1nL7KvmTXzEbRiW7GJFg1mb2nLa1r5CNscf+wseS9nrnQ083rP
h6HwoVuhIg3HvKj53zv42F5tvmsjmbeN16/LjuwkfLlL349uJ/eH3y8Rq4sP
N8PJHE45FYcLH7RldP+/vyyp/UX6lczzRDWD73zkXaLVviF6p2r6NpX38vH+
apBZJemHuaybk11+86Ei89hyuw6Jd3ld/Id+sv9pW4lLHwUMuz+xW//ywTZv
7ZxZRwEvt0VB5h8fnV/YH3WqKDh5dQIzcYQPK6MOakIrBSN/mzPE43w8i7ef
o6VA7i/2lGM3pQXITHMcjyb8ZQpMVa0nCHBgar3cwkgq8uk9i99MFMBzMGK+
KamvB1GHvvkqCHAz69zi+aR+dDSS5g5QBQjbdvrfNhK/ZPMS/RiGAGu8ttr5
k/ws0zVNUWYLcKZyVsEVAQ0Xz+08nz1ZgHUtE2sNyXs7+m+djamyAGNa309v
NKXhjYsg9qmqAHrXwnrKyfv8+xOhibuaADJX/POi7Gk4XNkf2qUhwOOumY4D
5D1f0PzCOoxP7O25lqfWEL6kvp6jiASILZmqbORD3ufK+9edkQiw5Ef6ln3r
aIhXc8vVmSZAa6PRiVR3GiaPB4WW6Agwe1VZ6DlrGnKKHt+3nyGA83rK3SQd
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
FmK8oPSHr9zKQqVC7Z6JIP68nNbbuIUFy5SEc8kLxHibvia8MpIFabnKMYk1
yc+XTeyWY8Sf2cXxtxaL8Wp2zpTZKSz0Zu5cbm0rRriFcGdKKukPI0Yur+3F
mHFxgSWD4Lu6ift9HcXg0ip+rSKYK/d+oN+ZrFdue613hoWwaxGp0a5irN33
O62N4BO9gX5KK8h5d+tZ7WS9Z6yHR5aHGBrfHxppnGYhRVC92WiVGLNfFeiV
HWXhabZDxuPVYrh5X8ryj2Ohv/K8lKs3iX+TTtla8v1hy1m7Pq4nfG/dtdkj
m4WSb9kyIX5iPA2OO2tUwMLOuVr/yWwS4/x4csRBggdp+tYnA8T4vLHPiU7w
hTyTQUGQGKVy030OEOwfNfvGtS1iuESHsA9eJd83FG6bHyKGlMKTR2GFLDh9
vTfrZagYHvedj8gQHDy0+c/aXWJUOTJXG14h+s/eWvxztxjzrG5zO8+xYFwz
HLk3QowTD9ZffJhL+PO458DaK4Yzb2dyzi0WGIvtZmbuF8MpcuhNxX0SnyTY
0OCgGLdj2Dz3hyzQU1WWlseI4fX6iuaJByzMkI454BQrxpI9LvaXCV68z7Kv
PU4M+Yp5kw+Q9W83DewKTiD5qQn8o/CYhaz5zazxE2LckL6sIF9B+uG7u7fj
kwj/PbSrlsTe+svEj3daDOPRU9Ihd1kYqxrmFqSKUWm4eNu9MsKfbV+dRZoY
ixsaFlY8ZZF7eXt0TTrRq/a8/pUvWRgZ9ZnpdU6M3foKN/wbWLioN6Pp2wWy
fqk178grFk7v3hkSni3GwVvWMQcIpurfkqZdFkMyNJm5iqz3/lQWdTZPjBDj
pRtN37Bgo7SlW6eA2Fe6VE9rInwu01QpKRTj3c7l/V4EyyoF69ndEKMpx+t0
YC0LS7w3z2y+JcbN6SohCq9Z6LOeOS2gmPQPhtvkqa0sDPE0ucN3xTA4+THq
+EcWKr6MsI7eE+P3VIuqt59YuP3JnqFWLsbE+kVLWog9M/IYK++hGFFhnEol
Yp+eM3uKWYUY40/mW8zpZMH0rBLn2RMx9Cqf7ar4wkKVlZPqymoxYtY2nwrr
ZsHxRQmj57kYExKyuqd+JXxSFAZ315L+Upahe7eDhV3XJtVR6gkfA9+Wmnwj
eu9oO3mmQQxt49y3b34S/fjMs9BpJPXxufOZVT8LAf+Cn995K0bB+lNqDn3k
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
JvW8XrbZoZgHhbm6F8N0WChRftPVXspD5Em9FFcJC82eZqFBZTycWO19QsQl
eC3d/l6unIedfcaJLqosnJWdujHxNg9aZ/unyeqxcMfM8a9uJemnO6F5lyeT
fiOvVuF9ko+xQSOPxrJwsMrwFap4YP7gzt4wngX/G5KVdY9I/dPdV99UZ2Hi
iT3trrU8OMzXZbn/Y+LhuKWLvz0l8T1e298uT/KHlyXhzwgfPe6Pv0URPCzz
N2A28vBWfvWBXz+Z+HmysPDESx5ejC2+aTvIBP1KMkP0hodAh9EfZUeR+FK1
ym828fCq/Zsg+DMTrhlX7Ze28OC63X3taSKXXNl67W0b4Ytxaqxccr6XQ2v6
dPDQ08W2rmlh4tcNmV2/O4l/hfNDi5uZeDcQ33Swi8Sf8NFep5sJbsrZ+RO7
eZCp10zva2BCoFOVldvDw9/2sefWP2eiivNI0bCXB6Usr7HBrUyYGI3f/PAH
D2e31J9or2Yi0Wu03KoBYm9+Jc5VMSE+9D62c4jg+6HDj4fE3uH/ro8P/kPw
9mT8nDPlTLAu1qcpjPAQH5BxdTeRk0RVaikyfLC/9488IuedGeMO6Y/iw3PX
5+dziphYvsD9e5ECH3NZjvmK15gIyDm621SRDzN9uczQm0yMahCNeq7Eh1Nr
4uQr55jIXh0dvp7io9zxXrDoIhNyRWe/9rL4iOzV0m24zMTYsIlL9qjwUffi
dJ9GBhOr5TiP6Ql89Hjv3+h2hom9b4Jmn1Ln4/1wWuLn00w87V1YI9HkQ7k1
bm1yPBPqB1i2FVp8NNfpXpMcY+K01eQ7Njp8dId6faZSmMjcfMOuWZcP/7D8
ipB9TERnyj/Yos/HUXeTmrAjTGx6/X3VMJsPhvn4I///++nPYy83HObxMVlv
WuDcMCY2LneapyXkwz1P62UK+a4317/8gpiPI9qx/U9DmDjKstadN42PGd2b
1YMCmRjwOX3s0XQ+GoS/LPbvYsJ+2hDfcRYfk+YeK2rxYeKDbWdWlyEfpasr
r7cTeaMGZRA6jw+HUBvzx/5MfA2qPalozId383eOrSsTslPn/XcUfHz7fW1s
jzvB1+d95zimJN835s0fs4EJD9EalZJF5L4X4+Mv2DMRmnIqcbEFHzf35I5V
dCL1Lvun98KKjx23G2lf8v2RvUn0Rms+YiIudyyxYiLwrcfAz2V8DAzOvnrN
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
d/Zc+PQfjdyTS1d6zpZicmt+nLsWja017QqXDUm+uR7HTSfRuCF9UjowRwq9
KU5xPro0BjuyNhnPI/lcYrlBSY/G2paLmvvnS6E/0VJ1gj4NL991T2qNpCi2
XHHTkk1DW+y+a8ICKX5wDim0cmhc+zNK5AIp8tKU1K/waPz3sqQpe6EUWqvF
yYYCGqe0Bw91m0gh/vLZPlVMY8a62XNnmElxQvx3WE1CQ//O+e6wRVJsKMq4
qzONRl2O/InKxVL8zMixUZpOo8hvu62yhRSTvGbXGc2kEcq7J2NvKUWQfWf5
gVk0vp6fUJRuJcXaBXvKNxvS0KmY5fZ+iRSPtBfInZ9L7F+1ovnWUsz6+Xsw
dD6N7sR7FQE2pF93JX9uMqKxIlzD7/oyKe7Yjk6uXkBDo/+mtqwdqW+Axejc
hTT2u9+ps1hO+sfAa7yNGY2Vs2Qj4+1Jfk43RKkvoqGrMyh95SCFjcHFg5rm
NEzUL7zXWUnqPXbRslMWNJbuVEjwXCVFwa95cQFLaJRkjFl4ebUUGnul0elL
abw/NqVvYI0UJSG3Nk62oWGf/fiMsZMUOs8qX0+wJXjM3r5ivzOJj/7546gd
jalD6aOfuEhRmPTc08qBRuTU/OIJrlK4CWZuKV1B8FnJ2+iyjvDPvvc5/1bS
ZP/6qZbjJsVW3+km31bT2HBI9UH3eimsh6+6nHakkZbps32GuxRWP0scnJ1p
HDX04e/cKMWOlK33VFxp7PBhv670kGKGOuUgXkfD72pwtPImKeLrU7IOudF4
FFQ3295LimMXL33bSGYyE6PzneneUowofXKdvpH0287qY+99pEipnOVY4UHj
c5HtEv4WKXZnb3K5tYnG/MaS3wG+UviudDku9CH4sbx98bofyY/LR8XwzTSS
q1OdZAOksFWxa8jbQuo5MqhsGUj455jplFV+pJ+KV96KD5Jip9/pX9wAGvw7
bL9XW6VwX5UT/TmQxrzOpsmTg6U4yg6rjd5Kw6mrp95zO9F3e52lHUzj7/7n
ey6HSFF1IHEaM4T0c4CcdDBUik2Bz59Jd9Bg1mu3GYdJ0cAKPMjZSUNq7Re3
fyfBf+yvssBdxP+DyQue7JJi/Jr71LFwGv2b/32fsFuKvqaH/noRNJq69M64
REgxPPZr2509NFJ/B67I2SOF6e58U78okq9s9zFfI6VIM9R3m7yPxsj3LaUz
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
TRIlJDh9/WoWiPNPbroq1KEU/Ut98RMH5DvPSG38A98+xggvRF6vONHVX0ZC
+3hfUT7O23XyXed1ykmo+LqmOwXZZHjHqmMVOA/3P9yjhyzgfq2/ohLnsVfq
ZDPOc57InCRONQknv5ak3EUW9dHbsOU5CXP/PnE5haxMhU8m1JAgOqCexo/+
IGJ4cUZ3Lep3hrDXRfQP8QMBduovSbgokz9gjjznMovtW4f1PNnUfAD9x6YI
06LCeoz3h/sbFdCfTPo98pzVgPOlukWiCf0Me3DrQrNGPG/cm20+yA/jJGpj
mkigHu2XrkP/U3FOKOBtM+6f+PPXGf2SXeQNZbk3OJ8bN+Y8QD/VbDjW6t6C
/lBcP1UVeUyjNzyzFev35a3q0jmisLcnSHe8DZ836dWci2zvpPMZ2nH/Vz/f
uIx+buxR+MWId/j8PUftq+j3PnzvW/Oqg4TTzWPKwsizlnn8kugkYfa8NR/+
/b7vwcbAWw5dOD/3/ueRg/7x/sxL1nc+kPB8955CReQ6GYZ/4CPqlfmZLnf0
nwPnXmTpdKOeRUrVrmWJgtRJJ6djPSRYSX+V5kP/KnN+75zKXhLWfApL5Ue/
a73dqYzzBedl59eLXPTDl68UeW35irySdUMC/XLo3N+LEvvQr9pau65EP12x
VLC++xv6p40ObnvRb6cKuB5T/4H9ysoQjEE/XnP5nIZvP+ZHs9DyPvp1j7nj
7YUDOP9+dY2X8OH3my6enjWE+vB1hVQt+v3o9Z3LzX6S4CE5y61uBn5/bP33
mGHU58op+2q8L/znZZHw9hf607w0Ou8vAWut3c3kRkhYVBXWdgvvGzknT0y6
j5LQOnPZpdt4P9Hfdjs9cwz9vNCBq4V4f5nMU9o+Po56ahwoUo73my9hc0QM
J0lQ3Vt2bhrvP+v7OvMi/pCQUF//bjvyr0O+bq+mSLgwzWLtxPuSQ/E6Sclp
EkYaI1iiowTQdo1VDjMouHzxg2013r/cJqIP3ZlJQX6I9mDSLwLcj2xbMsBH
wbIjqUMGeF879TvtjQ4/BeHV8nXwk4CzV0fDjglQUHrIeXYq3vfepxTrVApS
UCScLl2E98FOK78ejhAFto5bN67A++KmkN9xW4QpsA+bse8n3i8bpx6vSRSh
YHp/9J2beP+Mf6z1q5tFAXfBNrcZyMtuvbuhzqHgP1UT7594f/2iEW3ly6Xg
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
ibPhf+eKpKY=
       "]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
43ruTNqwLzuoZ4sVBv8DT/DbKw==
        "]]},
      Annotation[#, "Charting`Private`Tag$436502#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 21.001483924026505`}, {0, 5.005750461088057}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8213505512434187`*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"c203d77d-bb6b-460c-a916-c8c4e41095ad"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"getfullrunsftp", "[", "run_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "type", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"type", "=", 
      RowBox[{"run", "//", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"s___", "~~", "\"\<_\>\"", "~~", "__"}], "\[RuleDelayed]", 
         "s"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ap2", "[", 
          RowBox[{
           RowBox[{
           "\"\</run/user/1000/gvfs/sftp:host=nuc/media/media/8tbraid/science/\
ha/9runsdata/t_\>\"", "~~", "run", "~~", "\"\<.json\>\""}], ",", "Identity"}],
           "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "//", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}], "]"}]}], "//", 
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{";;", ";;", 
             RowBox[{"2", "^", "3"}]}], "]"}], "]"}], "&"}], ",", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"All", ",", "2", ",", "All"}], "}"}],
          FontWeight->"Plain"]}], "]"}]}], "//", 
      RowBox[{"SortBy", "[", "\[Tau]", "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.788513620832863*^9, 3.788513694039372*^9}, {
  3.788513768300952*^9, 3.788513773595244*^9}, {3.7900003746936903`*^9, 
  3.790000375300097*^9}, {3.798189097308002*^9, 3.798189097479699*^9}, {
  3.8219495426859303`*^9, 
  3.821949558249509*^9}},ExpressionUUID->"98972ac9-93e8-4b4d-86b1-\
db88abb6d78d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"runs", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<b0_11\>\"", ",", "\"\<b0_59\>\"", ",", "\"\<b0_154\>\""}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<pol_101\>\"", ",", "\"\<pol_102\>\"", ",", "\"\<pol_122\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<gen_27\>\"", ",", "\"\<gen_59\>\"", ",", "\"\<gen_138\>\""}], 
       "}"}]}], "}"}], "//", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"getfullrun", ",", "#", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.788514868328027*^9, 3.7885149387220497`*^9}, {
   3.788514970370749*^9, 3.7885149774363832`*^9}, {3.788518493225318*^9, 
   3.7885185212140512`*^9}, 3.788521394439686*^9, 3.7899109197870417`*^9, 
   3.789998226297244*^9, 3.798192810725361*^9, {3.798376119807674*^9, 
   3.798376127192388*^9}, {3.821593798975065*^9, 
   3.821593839154128*^9}},ExpressionUUID->"4666dc1f-1b97-4afb-9db4-\
44deb34bf55f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"runs", "//", "Length"}], "//", 
  RowBox[{"Map", "[", "Length", "]"}]}]], "Input",
 CellChangeTimes->{{3.798376046860214*^9, 3.79837605829181*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"cbb72e84-0bf9-414b-b726-ee17ac952c7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DumpSave", "[", 
   RowBox[{
   "\"\</media/adam/mobile storage/ha/data2_100/9runs.mx\>\"", ",", "runs"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RunProcess", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<ls\>\"", ",", "\"\<-lh\>\"", ",", 
     "\"\</media/adam/mobile storage/ha/data2_100/9runs.mx\>\""}], "}"}], 
   ",", "\"\<StandardOutput\>\""}], "]"}]}], "Input",
 CellChangeTimes->{
  3.788000950989943*^9, 3.788001000223599*^9, {3.788515320416218*^9, 
   3.788515330793133*^9}, {3.798189180228775*^9, 3.798189185624344*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"19bdc7e2-7033-4c8e-a352-ff96bdd55a4e"],

Cell[BoxData[
 RowBox[{"RunProcess", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<ls\>\"", ",", "\"\<-lh\>\"", ",", 
     "\"\</run/user/1000/gvfs/sftp:host=nuc/media/media/8tbraid/science/ha/gt/\
\>\""}], "}"}], ",", "\"\<StandardOutput\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.821949272537629*^9, 3.821949375635051*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f88300bf-ca34-4933-9d65-604be5848553"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNames", "[", 
  RowBox[{"\"\<t_gen_*_512.json\>\"", ",", 
   RowBox[{
   "{", "\"\</run/user/1000/gvfs/sftp:host=nuc/media/media/8tbraid/science/ha/\
9runsdata/\>\"", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821949612674962*^9, 3.821949633564847*^9}, {
  3.8219496736706553`*^9, 3.8219497698969183`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"80918e3f-f8ee-4db5-8e5a-419d44162fda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/run/user/1000/gvfs/sftp:host=nuc/media/media/8tbraid/science/\
ha/9runsdata/t_gen_0_512.json\"\>", 
   ",", "\<\"/run/user/1000/gvfs/sftp:host=nuc/media/media/8tbraid/science/ha/\
9runsdata/t_gen_130_512.json\"\>", 
   ",", "\<\"/run/user/1000/gvfs/sftp:host=nuc/media/media/8tbraid/science/ha/\
9runsdata/t_gen_138_512.json\"\>", 
   ",", "\<\"/run/user/1000/gvfs/sftp:host=nuc/media/media/8tbraid/science/ha/\
9runsdata/t_gen_27_512.json\"\>", 
   ",", "\<\"/run/user/1000/gvfs/sftp:host=nuc/media/media/8tbraid/science/ha/\
9runsdata/t_gen_59_512.json\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.821949634834607*^9, 3.8219496751727962`*^9}, {
   3.8219497084554777`*^9, 3.821949771600882*^9}, 3.821951920261477*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"3c8282fd-c60e-43a0-8820-c63e42dbf365"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotwithfit", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lastnth", ",", "dat2", ",", "dat", ",", "model", ",", "parameters", ",",
       "fit", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"lastnth", "[", 
       RowBox[{"l_", ",", "n_"}], "]"}], ":=", 
      RowBox[{"l", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"Length", "[", "l", "]"}], "/", "n"}], "]"}]}], ";;"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dat2", "=", 
      RowBox[{"data", "//", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Tau]", "[", "#", "]"}], ",", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"\[Tau]", "[", "#", "]"}], "/", "4"}], "]"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Mean", "[", 
                  RowBox[{
                   RowBox[{"\[Rho]", "[", "#", "]"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"\[Tau]", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "/", "2"}]}], 
                    ")"}]}], "]"}], ")"}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Tau]", "[", "#", "]"}], "/", "2"}], ")"}]}], 
               ")"}]}]}], "}"}], "&"}], "\[IndentingNewLine]", ",", "#", ",", 
          
          RowBox[{"{", "1", "}"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dat", "=", 
      RowBox[{"dat2", "//", 
       RowBox[{
        RowBox[{"lastnth", "[", 
         RowBox[{"#", ",", 
          RowBox[{"2", "^", "2"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"model", "=", " ", 
      RowBox[{"a3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"f", "*", 
         RowBox[{"(", " ", 
          RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"parameters", "=", 
      RowBox[{"FindFit", "[", 
       RowBox[{"dat", ",", "model", ",", 
        RowBox[{"{", 
         RowBox[{"a3", ",", "f", ",", "g"}], "}"}], ",", "x", ",", 
        RowBox[{"MaxIterations", "\[Rule]", "10000"}], ",", 
        RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"model", "/.", "parameters"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "fit", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mininput", ",", "maxinput"}], "}"}], "=", 
      RowBox[{
       RowBox[{"data", "//", 
        RowBox[{"Map", "[", "\[Tau]", "]"}]}], "//", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", "#", "]"}], ",", 
          RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"lastnth", "[", 
         RowBox[{"dat2", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Plot", "[", 
        RowBox[{"fit", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "mininput", ",", 
           RowBox[{"2", "maxinput"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runs", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}], "//", "plotwithfit"}]}], "Input",
 CellChangeTimes->{{3.8213501781830387`*^9, 3.821350397747384*^9}, {
   3.821350429723413*^9, 3.821350508669606*^9}, {3.8213505401854353`*^9, 
   3.821350544374938*^9}, {3.82196572571229*^9, 3.821965794551551*^9}, {
   3.821965832134099*^9, 3.821965838429926*^9}, {3.8219658812956142`*^9, 
   3.821966040989855*^9}, {3.821966302595561*^9, 3.821966359402114*^9}, {
   3.8219664205140038`*^9, 3.821966640393717*^9}, {3.8219666739001627`*^9, 
   3.821966928476536*^9}, 3.821966964662146*^9, {3.821967100124086*^9, 
   3.8219672508620167`*^9}, {3.821967288302846*^9, 3.821967325373081*^9}, {
   3.821967374611904*^9, 3.821967457638776*^9}, {3.821967494257678*^9, 
   3.821967535754941*^9}, {3.821968047930458*^9, 3.821968050795039*^9}, 
   3.821968560798773*^9, {3.821969565122666*^9, 3.821969706337751*^9}, {
   3.821969815596335*^9, 3.821969843893524*^9}},
 CellLabel->
  "In[438]:=",ExpressionUUID->"3716590a-602f-4db0-a3ad-f0eab916c60d"],

Cell[BoxData[
 RowBox[{"1.519865975233481`", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"1.6152666971479515`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1.6055848920156979`"}], "+", "x"}], ")"}]}], 
   "]"}]}]], "Print",
 CellChangeTimes->{{3.8219657567419853`*^9, 3.821965798161229*^9}, 
   3.821965841343039*^9, {3.82196588773374*^9, 3.821966042978463*^9}, {
   3.8219663050276213`*^9, 3.8219663615811872`*^9}, {3.8219664272463284`*^9, 
   3.821966458775181*^9}, {3.821966491037027*^9, 3.821966568637632*^9}, 
   3.8219666436971827`*^9, {3.8219666911110992`*^9, 3.821966967497154*^9}, 
   3.8219671075417023`*^9, {3.8219671386555557`*^9, 3.8219671651500874`*^9}, {
   3.821967198041526*^9, 3.8219672522529716`*^9}, {3.8219672912647467`*^9, 
   3.821967326677928*^9}, 3.8219673847615147`*^9, {3.8219674209317913`*^9, 
   3.8219674599725246`*^9}, 3.821967499874116*^9, 3.821967537180209*^9, 
   3.821968052780182*^9, 3.821968562103736*^9, {3.821969605042959*^9, 
   3.821969708031663*^9}, 3.82196981714995*^9, 3.8219698528909073`*^9},
 CellLabel->
  "During evaluation of \
In[438]:=",ExpressionUUID->"2645e98a-4634-471e-a9f5-8d83c4183df4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", 
   RowBox[{"1", "/", "2"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.821967119451846*^9, 3.821967125564301*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"75d517d1-9c01-4f66-b14f-90e2befdfa40"],

Cell[BoxData[
 RowBox[{"-", "0.6931471805599453`"}]], "Output",
 CellChangeTimes->{{3.8219671221361017`*^9, 3.821967126065693*^9}},
 CellLabel->
  "Out[349]=",ExpressionUUID->"6d30d2fa-636d-4818-b274-04ef1ce95283"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pi", "/", "2"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.821966374906745*^9, 3.8219663777892523`*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"89532672-3a03-41db-9dc7-a914cd359066"],

Cell[BoxData["1.5707963267948966`"], "Output",
 CellChangeTimes->{3.821966378407493*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"5cbb154f-1476-41df-a543-78ec1e4a014d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plotwithfit", "[", "data_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "lastnth", ",", "dat2", ",", "dat", ",", "model", ",", "parameters", 
        ",", "fit", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"lastnth", "[", 
         RowBox[{"l_", ",", "n_"}], "]"}], ":=", 
        RowBox[{"l", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Length", "[", "l", "]"}], "/", "n"}], "]"}]}], ";;"}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dat2", "=", 
        RowBox[{"data", "//", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Tau]", "[", "#", "]"}], ",", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"\[Tau]", "[", "#", "]"}], "/", "4"}], "]"}], 
                RowBox[{"Mean", "[", 
                 RowBox[{
                  RowBox[{"v", "[", "#", "]"}], "-", 
                  RowBox[{
                   RowBox[{"\[Tau]", "[", "#", "]"}], "/", "2"}], "+", 
                  "0.5790748012757192`"}], "]"}]}]}], "}"}], "&"}], 
            "\[IndentingNewLine]", ",", "#", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"dat2", "//", 
         RowBox[{
          RowBox[{"lastnth", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"model", "=", "  ", 
        RowBox[{"e", " ", 
         RowBox[{"Sin", "[", " ", 
          RowBox[{"f", " ", 
           RowBox[{"(", " ", 
            RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parameters", "=", 
        RowBox[{"FindFit", "[", 
         RowBox[{"dat", ",", "model", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "e", ",", "f", ",", "g"}], "}"}], ",", "x", ",", 
          
          RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
          RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fit", "=", 
        RowBox[{"model", "/.", "parameters"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "fit", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"mininput", ",", "maxinput"}], "}"}], "=", 
        RowBox[{
         RowBox[{"data", "//", 
          RowBox[{"Map", "[", "\[Tau]", "]"}]}], "//", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", "#", "]"}], ",", 
            RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{"lastnth", "[", 
           RowBox[{"dat2", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"Plot", "[", 
          RowBox[{"fit", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", 
           RowBox[{"1", "/", "2"}], "]"}]}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runs", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}], "//", 
    "plotwithfit"}]}]}]], "Input",
 CellChangeTimes->{{3.821966056558069*^9, 3.821966211616864*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"da426738-df95-42c9-a9e1-937cf38ba3bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.3516166380828494`"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"0.9474800397262827`", " ", 
    RowBox[{"(", 
     RowBox[{"2.030823292591058`", "\[VeryThinSpace]", "+", "x"}], ")"}]}], 
   "]"}]}]], "Print",
 CellChangeTimes->{
  3.8219660584895353`*^9, {3.821966092698697*^9, 3.8219661037785273`*^9}, 
   3.821966134206835*^9, {3.821966187677464*^9, 3.821966214416354*^9}},
 CellLabel->
  "During evaluation of \
In[275]:=",ExpressionUUID->"d5ae6f19-907f-414d-84b0-c30623056603"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plotwithfit", "[", "data_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "lastnth", ",", "dat2", ",", "dat", ",", "model", ",", "parameters", 
        ",", "fit", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"lastnth", "[", 
         RowBox[{"l_", ",", "n_"}], "]"}], ":=", 
        RowBox[{"l", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Length", "[", "l", "]"}], "/", "n"}], "]"}]}], ";;"}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dat2", "=", 
        RowBox[{"data", "//", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Tau]", "[", "#", "]"}], ",", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"\[Tau]", "[", "#", "]"}], "/", "4"}], "]"}], 
                RowBox[{"Mean", "[", 
                 RowBox[{
                  RowBox[{"v", "[", "#", "]"}], "-", 
                  RowBox[{
                   RowBox[{"\[Tau]", "[", "#", "]"}], "/", "2"}]}], "]"}]}]}],
               "}"}], "&"}], "\[IndentingNewLine]", ",", "#", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dat", "=", 
        RowBox[{"dat2", "//", 
         RowBox[{
          RowBox[{"lastnth", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"model", "=", 
        RowBox[{"a", "+", "  ", 
         RowBox[{"e", " ", 
          RowBox[{"Sin", "[", " ", 
           RowBox[{"f", " ", 
            RowBox[{"(", " ", 
             RowBox[{"x", " ", "+", " ", "g"}], ")"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parameters", "=", 
        RowBox[{"FindFit", "[", 
         RowBox[{"dat", ",", "model", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "e", ",", "f", ",", "g"}], "}"}], ",", "x", ",", 
          
          RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
          RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fit", "=", 
        RowBox[{"model", "/.", "parameters"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "fit", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"mininput", ",", "maxinput"}], "}"}], "=", 
        RowBox[{
         RowBox[{"data", "//", 
          RowBox[{"Map", "[", "\[Tau]", "]"}]}], "//", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", "#", "]"}], ",", 
            RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{"lastnth", "[", 
           RowBox[{"dat2", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"Plot", "[", 
          RowBox[{"fit", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "mininput", ",", "maxinput"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Red"}], "}"}]}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", 
           RowBox[{"1", "/", "2"}], "]"}]}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runs", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "3"}], "]"}], "]"}], "//", 
    "plotwithfit"}]}]}]], "Input",
 CellChangeTimes->{{3.821966056558069*^9, 3.82196624469711*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"d0b302bf-b510-4699-a866-73b904557e59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "6.845987197709784`"}], "-", 
  RowBox[{"4.067771928399889`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.5530850817385804`", " ", 
     RowBox[{"(", 
      RowBox[{"4.42098461941469`", "\[VeryThinSpace]", "+", "x"}], ")"}]}], 
    "]"}]}]}]], "Print",
 CellChangeTimes->{3.821966246405107*^9},
 CellLabel->
  "During evaluation of \
In[277]:=",ExpressionUUID->"836dce4b-b034-4d80-8102-e20e90839083"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plt", "[", 
   RowBox[{"data_", ",", "f_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"data", "//", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Tau]", "[", "#", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"f", "[", "#", "]"}]}], "\[IndentingNewLine]", "}"}], "&"}], 
     "]"}]}], "//", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "20"}], "}"}], ",", "All"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Tau]\>\"", ",", "15"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<v mean\>\"", ",", "15"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", 
        RowBox[{
         RowBox[{"1", "/", "3"}], "/", "2"}], "]"}]}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"runs", "//", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"data", ",", 
          RowBox[{"plt", "[", 
           RowBox[{"data", ",", 
            RowBox[{"Function", "[", 
             RowBox[{"frame", ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"\[Tau]", "[", "frame", "]"}], " ", "]"}], 
                RowBox[{"Mean", "[", 
                 RowBox[{"Exp", "[", 
                  RowBox[{"\[Rho]", "[", "frame", "]"}], "]"}], "]"}]}], 
               "*)"}], 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"v", "[", "frame", "]"}], "-", 
                 RowBox[{
                  RowBox[{"\[Tau]", "[", "frame", "]"}], "/", "2"}]}], "]"}], 
               "-", 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"data", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"\[Tau]", "[", 
                   RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "/", "2"}]}], 
                "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], 
        ",", "#", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "&"}]}], "//", "Transpose"}], "//", 
   
   RowBox[{
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<generic\>\"", ",", "\"\<b=0\>\"", ",", "\"\<polarised\>\""}], 
        "}"}], "}"}], "~", "Join", "~", "#"}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\</home/adam/Dropbox/Documents/research/galileo numerics/rhoplts.png\>\
\"", ",", "tmp", ",", 
     RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7879982209404182`*^9, 3.787998273158593*^9}, {
   3.787999302223123*^9, 3.787999336042832*^9}, {3.7879994868113117`*^9, 
   3.787999512910007*^9}, {3.787999738396778*^9, 3.787999739901115*^9}, {
   3.788002818203457*^9, 3.788002855469852*^9}, {3.788518228914577*^9, 
   3.788518312184469*^9}, {3.788518826312511*^9, 3.7885188460460453`*^9}, {
   3.788518878028645*^9, 3.7885188975260687`*^9}, {3.788524263458338*^9, 
   3.7885242702429333`*^9}, 3.7900721698911047`*^9, 3.790075456648942*^9, 
   3.7900757728611307`*^9, {3.798275458847432*^9, 3.79827548705049*^9}, 
   3.806808917059145*^9, {3.806808948037943*^9, 3.806808961864655*^9}, {
   3.806809097956849*^9, 3.806809109180543*^9}, {3.80682828500041*^9, 
   3.8068282861755123`*^9}, {3.806828343497074*^9, 3.8068283541317596`*^9}, {
   3.806828386089559*^9, 3.80682838642589*^9}, {3.806829319160933*^9, 
   3.806829320273073*^9}, {3.816511571769388*^9, 3.816511574707364*^9}, {
   3.8165116286575947`*^9, 3.816511699222739*^9}, {3.816511747227675*^9, 
   3.816511765064324*^9}, {3.816511798811612*^9, 3.816511825186494*^9}, 
   3.816511912178076*^9, {3.8165119966049128`*^9, 3.816511997055283*^9}, 
   3.816512060969082*^9, {3.8219647255820093`*^9, 3.821964840255032*^9}, {
   3.8219648726531754`*^9, 3.821964939542879*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"5e7eab13-c60f-4226-88d9-2f391a15d4bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"runs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "200"}], ";;", ";;", "10"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "//", "v"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8219637654293003`*^9, 3.821963812069148*^9}, {
  3.821965123397038*^9, 3.821965132021187*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"60e29e88-d2b2-4e03-a27e-08de15a17b1c"],

Cell[BoxData["512"], "Output",
 CellChangeTimes->{{3.821963790618854*^9, 3.821963813019063*^9}, 
   3.821965132809738*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"3c3e88f1-d542-447a-945e-634dbee3e9fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"genericruns4096", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.823168540242803*^9, 3.823168551534459*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"75228b3d-8735-4589-8478-9daa567eea4e"],

Cell[BoxData["4103"], "Output",
 CellChangeTimes->{{3.823168547746056*^9, 3.8231685523680983`*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"486b0164-ba9e-4c3d-9cdd-b0a958867cfd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"runs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "2000"}], ";;", ";;", 
       RowBox[{"2", "^", "3"}]}], "]"}], "]"}], "//", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{"frame", ",", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"length", ",", "tempdata", ",", "time", ",", "t"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"time", "=", 
           RowBox[{"frame", "//", "\[Tau]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"t", "=", 
           RowBox[{"Exp", "[", 
            RowBox[{"time", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"tempdata", "=", 
           RowBox[{
            RowBox[{"frame", "//", 
             RowBox[{
              RowBox[{"(", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"0", 
                  RowBox[{"time", "/", "4"}]}], "]"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"time", "/", "4"}], "]"}], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"l", "[", "#", "]"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "/", "2"}], "]"}], ")"}]}], ")"}]}], "-", 
                  RowBox[{"1", 
                   RowBox[{"(", 
                    RowBox[{"4.860732683220453`", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.0049708633241589695`"}], "+", "time"}], 
                    ")"}]}], "]"}]}], ")"}]}]}], ")"}]}], 
               "\[IndentingNewLine]", ")"}], "&"}]}], "//", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{";;", ";;", 
                RowBox[{"2", "^", "3"}]}], "]"}], "]"}], "&"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"length", "=", 
           RowBox[{"tempdata", "//", "Length"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"time", ",", 
              RowBox[{"2", "Pi", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "/", "length"}]}], ",", 
              RowBox[{"tempdata", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "length"}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}]}], "//", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{"ListPlot3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", 
        RowBox[{"1", "/", "3"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
    "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.78851379660106*^9, 3.788513847448958*^9}, {
   3.788519778161278*^9, 3.788519927322363*^9}, {3.788519973432865*^9, 
   3.788519975912817*^9}, {3.788520016838436*^9, 3.7885200223923693`*^9}, {
   3.788520065797592*^9, 3.7885200807361507`*^9}, {3.788520169952959*^9, 
   3.788520170029271*^9}, {3.788524788904272*^9, 3.788524790227406*^9}, 
   3.788524920536796*^9, 3.7885249613319483`*^9, {3.7885251530472*^9, 
   3.7885251628272676`*^9}, {3.788525207734568*^9, 3.788525209037561*^9}, {
   3.788525242338901*^9, 3.788525242521678*^9}, 3.788525292332776*^9, {
   3.790072405635768*^9, 3.790072409198036*^9}, {3.7900724568497877`*^9, 
   3.790072474511918*^9}, {3.790072569104727*^9, 3.790072572148999*^9}, {
   3.790074927925919*^9, 3.790074935629519*^9}, {3.79819952322358*^9, 
   3.798199550565785*^9}, {3.79836324523807*^9, 3.798363251633067*^9}, {
   3.798363499835843*^9, 3.798363509848843*^9}, {3.8165242631050043`*^9, 
   3.8165242879921923`*^9}, {3.816524321399823*^9, 3.816524367794271*^9}, {
   3.821967631381073*^9, 3.821967643092786*^9}, {3.821967762206009*^9, 
   3.821968023628323*^9}, {3.821968065823003*^9, 3.82196813480717*^9}, {
   3.821968182854299*^9, 3.8219682412994137`*^9}, {3.821968275677918*^9, 
   3.821968311656848*^9}, {3.821968343049943*^9, 3.821968393533518*^9}, {
   3.821968431528186*^9, 3.821968470268984*^9}, {3.8219685302158623`*^9, 
   3.8219685431788816`*^9}, {3.821968678221465*^9, 3.821968686201839*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"d760433d-34c4-4f6e-8848-1da5f0d6382d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"runs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "3"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "2000"}], ";;", ";;", 
       RowBox[{"2", "^", "3"}]}], "]"}], "]"}], "//", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{"frame", ",", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"length", ",", "tempdata", ",", "time", ",", "t"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"time", "=", 
           RowBox[{"frame", "//", "\[Tau]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"t", "=", 
           RowBox[{"Exp", "[", 
            RowBox[{"time", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"tempdata", "=", 
           RowBox[{
            RowBox[{"frame", "//", 
             RowBox[{
              RowBox[{"(", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"time", "/", "4"}], "]"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"time", "/", "4"}], "]"}], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"l", "[", "#", "]"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "/", "2"}], "]"}], ")"}]}], ")"}]}], "-", 
                  RowBox[{"(", 
                   RowBox[{"3.126852608114232`", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.40625712710166223`", "\[VeryThinSpace]", "+", "time"}],
                     ")"}]}], "]"}]}], ")"}]}], ")"}]}], 
               "\[IndentingNewLine]", ")"}], "&"}]}], "//", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{";;", ";;", 
                RowBox[{"2", "^", "3"}]}], "]"}], "]"}], "&"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"length", "=", 
           RowBox[{"tempdata", "//", "Length"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"time", ",", 
              RowBox[{"2", "Pi", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "/", "length"}]}], ",", 
              RowBox[{"tempdata", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "length"}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}]}], "//", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{"ListPlot3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
    "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.78851379660106*^9, 3.788513847448958*^9}, {
   3.788519778161278*^9, 3.788519927322363*^9}, {3.788519973432865*^9, 
   3.788519975912817*^9}, {3.788520016838436*^9, 3.7885200223923693`*^9}, {
   3.788520065797592*^9, 3.7885200807361507`*^9}, {3.788520169952959*^9, 
   3.788520170029271*^9}, {3.788524788904272*^9, 3.788524790227406*^9}, 
   3.788524920536796*^9, 3.7885249613319483`*^9, {3.7885251530472*^9, 
   3.7885251628272676`*^9}, {3.788525207734568*^9, 3.788525209037561*^9}, {
   3.788525242338901*^9, 3.788525242521678*^9}, 3.788525292332776*^9, {
   3.790072405635768*^9, 3.790072409198036*^9}, {3.7900724568497877`*^9, 
   3.790072474511918*^9}, {3.790072569104727*^9, 3.790072572148999*^9}, {
   3.790074927925919*^9, 3.790074935629519*^9}, {3.79819952322358*^9, 
   3.798199550565785*^9}, {3.79836324523807*^9, 3.798363251633067*^9}, {
   3.798363499835843*^9, 3.798363509848843*^9}, {3.8165242631050043`*^9, 
   3.8165242879921923`*^9}, {3.816524321399823*^9, 3.816524367794271*^9}, {
   3.821967631381073*^9, 3.821967643092786*^9}, {3.821967762206009*^9, 
   3.821968023628323*^9}, {3.821968065823003*^9, 3.82196813480717*^9}, {
   3.821968182854299*^9, 3.8219682412994137`*^9}, {3.821968275677918*^9, 
   3.821968311656848*^9}, {3.821968343049943*^9, 3.821968393533518*^9}, {
   3.821968431528186*^9, 3.821968470268984*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"d0bcc7bb-217c-4ab9-904d-506794fc1bd6"]
},
WindowSize->{2880, 1556},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 48610, 1209, 5557, "Input",ExpressionUUID->"af8e8cc1-2654-4124-bf90-9883e8ef16cd"],
Cell[CellGroupData[{
Cell[49193, 1233, 39640, 632, 1476, "Input",ExpressionUUID->"2749f6b2-7b40-406e-9d1e-161e1b30f409"],
Cell[CellGroupData[{
Cell[88858, 1869, 2608, 38, 37, "Print",ExpressionUUID->"85b17b98-739a-4d05-a400-78bc58c5d7b0"],
Cell[91469, 1909, 2750, 41, 37, "Print",ExpressionUUID->"c9798754-2a00-4a94-b04b-f4b186531935"]
}, Open  ]],
Cell[94234, 1953, 116454, 2022, 372, "Output",ExpressionUUID->"ac1f39a0-4048-4c72-9765-089f8c53aa82"],
Cell[210691, 3977, 2537, 35, 88, "Output",ExpressionUUID->"e7740267-7d32-4b51-9f7c-35ba15713a6c"]
}, Open  ]],
Cell[213243, 4015, 1466, 28, 82, "Input",ExpressionUUID->"df08441a-d8a1-4ad1-8255-0f1edee3c23d"],
Cell[CellGroupData[{
Cell[214734, 4047, 925, 20, 82, "Input",ExpressionUUID->"ccd95560-1a25-49a3-81bd-541c01879fa7"],
Cell[215662, 4069, 311, 5, 88, "Output",ExpressionUUID->"da6c6049-eca7-41be-bbe3-0709def4d83d"]
}, Open  ]],
Cell[215988, 4077, 5922, 117, 626, "Input",ExpressionUUID->"c5be2478-c218-4f63-b8b6-68981949e5e7"],
Cell[221913, 4196, 7125, 137, 626, "Input",ExpressionUUID->"b73447d7-8ad8-4830-9421-c53c272d50b5"],
Cell[229041, 4335, 19681, 413, 1613, "Input",ExpressionUUID->"dc1831d3-6c00-4047-8129-bc8a034cc8f2"],
Cell[248725, 4750, 20319, 435, 1715, "Input",ExpressionUUID->"e1184721-4d1b-4bb1-95db-250a2b320ad5"],
Cell[CellGroupData[{
Cell[269069, 5189, 223, 5, 47, "Input",ExpressionUUID->"cc2279d0-2cfc-4641-b030-6857addb7725"],
Cell[269295, 5196, 171, 3, 53, "Output",ExpressionUUID->"94fb1fa6-7260-4643-a4c3-c67683f12558"]
}, Open  ]],
Cell[269481, 5202, 17505, 370, 1477, "Input",ExpressionUUID->"2a39ab49-2efa-47ee-979a-fe2c6c894b25"],
Cell[CellGroupData[{
Cell[287011, 5576, 1962, 54, 320, "Input",ExpressionUUID->"5cf2ae6f-670a-4bc8-9abd-10e34ed6fa1f"],
Cell[288976, 5632, 53610, 888, 179, "Output",ExpressionUUID->"aaededba-ea83-44ff-bfa6-74722bee9cee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342623, 6525, 2026, 56, 89, "Input",ExpressionUUID->"d3284368-3179-4795-8d68-158b104b4251"],
Cell[344652, 6583, 444, 11, 74, "Output",ExpressionUUID->"8e8fda7c-d5bb-4df3-aaa4-fb9187f4bf11"]
}, Open  ]],
Cell[345111, 6597, 4213, 100, 252, "Input",ExpressionUUID->"51623dce-7a93-4a2d-9c02-79fb0c400c54"],
Cell[CellGroupData[{
Cell[349349, 6701, 205, 4, 47, "Input",ExpressionUUID->"7c7ad7a3-f316-4002-b639-7e5655149ea2"],
Cell[349557, 6707, 189, 4, 53, "Output",ExpressionUUID->"538c5111-2253-4cf3-8276-3185ec93ea11"]
}, Open  ]],
Cell[349761, 6714, 3691, 78, 320, "Input",ExpressionUUID->"ff599dd8-ce83-4e78-90c8-728b70e76a12"],
Cell[353455, 6794, 3775, 80, 320, "Input",ExpressionUUID->"03f0bdfe-4a5f-4b5f-8fa8-9a75863f4147"],
Cell[357233, 6876, 3819, 80, 320, "Input",ExpressionUUID->"978543fe-b386-47fe-8f18-41be511a1cf2"],
Cell[361055, 6958, 1201, 29, 286, "Input",ExpressionUUID->"61ab4807-0ee8-43ba-bb60-aad379defde0"],
Cell[CellGroupData[{
Cell[362281, 6991, 4093, 119, 524, "Input",ExpressionUUID->"6a3c39f1-5aef-4a4a-9f87-2cb46df62858"],
Cell[366377, 7112, 862, 16, 53, "Output",ExpressionUUID->"da52bbf4-7d9e-4939-a143-3c0516c97531"],
Cell[367242, 7130, 15053, 263, 367, "Output",ExpressionUUID->"d82d7358-a094-4c18-9e84-892adb03a8d4"],
Cell[382298, 7395, 9345, 168, 326, "Output",ExpressionUUID->"8e2ba5df-30e9-48a5-9dc5-1aafd112fb5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391680, 7568, 242, 5, 50, "Input",ExpressionUUID->"0278b455-c990-4592-9d70-1ad9689e19c7"],
Cell[391925, 7575, 195, 3, 53, "Output",ExpressionUUID->"11bea57f-15b5-46bb-9525-b89dacc0b561"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392157, 7583, 4220, 111, 592, "Input",ExpressionUUID->"8d0c2668-07ed-4425-a650-55a9cac9968d"],
Cell[396380, 7696, 574, 14, 37, "Print",ExpressionUUID->"bd88ea05-fb72-4a8e-b239-daa30ee8cefd"]
}, Open  ]],
Cell[396969, 7713, 260, 5, 47, "Input",ExpressionUUID->"ed03f628-74e8-4194-8137-bf16ce5fea34"],
Cell[CellGroupData[{
Cell[397254, 7722, 4327, 111, 592, "Input",ExpressionUUID->"cb241615-8390-49f4-b895-868f36f7b79f"],
Cell[401584, 7835, 523, 13, 37, "Print",ExpressionUUID->"3cd9d411-735a-4ec9-a608-70bf4fbb59e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402144, 7853, 4268, 111, 592, "Input",ExpressionUUID->"ae8ede3f-9ccd-4e5f-b439-5836167e8b02"],
Cell[406415, 7966, 467, 11, 37, "Print",ExpressionUUID->"cd2df04a-ceba-44e6-9562-a278ca07cd45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406919, 7982, 3824, 101, 592, "Input",ExpressionUUID->"b67596df-a2de-493f-a186-4378b14d63f4"],
Cell[410746, 8085, 451, 12, 37, "Print",ExpressionUUID->"860dab9f-f5bd-4aa2-9450-23b68b774035"],
Cell[411200, 8099, 104767, 1735, 378, "Output",ExpressionUUID->"c203d77d-bb6b-460c-a916-c8c4e41095ad"]
}, Open  ]],
Cell[515982, 9837, 1753, 47, 150, "Input",ExpressionUUID->"98972ac9-93e8-4b4d-86b1-db88abb6d78d"],
Cell[517738, 9886, 1060, 27, 47, "Input",ExpressionUUID->"4666dc1f-1b97-4afb-9db4-44deb34bf55f"],
Cell[518801, 9915, 265, 6, 47, "Input",ExpressionUUID->"cbb72e84-0bf9-414b-b726-ee17ac952c7a"],
Cell[519069, 9923, 673, 17, 82, "Input",ExpressionUUID->"19bdc7e2-7033-4c8e-a352-ff96bdd55a4e"],
Cell[519745, 9942, 417, 9, 47, "Input",ExpressionUUID->"f88300bf-ca34-4933-9d65-604be5848553"],
Cell[CellGroupData[{
Cell[520187, 9955, 422, 9, 47, "Input",ExpressionUUID->"80918e3f-f8ee-4db5-8e5a-419d44162fda"],
Cell[520612, 9966, 850, 15, 122, "Output",ExpressionUUID->"3c8282fd-c60e-43a0-8820-c63e42dbf365"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521499, 9986, 5217, 129, 592, "Input",ExpressionUUID->"3716590a-602f-4db0-a3ad-f0eab916c60d"],
Cell[526719, 10117, 1153, 21, 37, "Print",ExpressionUUID->"2645e98a-4634-471e-a9f5-8d83c4183df4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527909, 10143, 253, 6, 47, "Input",ExpressionUUID->"75d517d1-9c01-4f66-b14f-90e2befdfa40"],
Cell[528165, 10151, 214, 4, 53, "Output",ExpressionUUID->"6d30d2fa-636d-4818-b274-04ef1ce95283"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528416, 10160, 225, 5, 47, "Input",ExpressionUUID->"89532672-3a03-41db-9dc7-a914cd359066"],
Cell[528644, 10167, 171, 3, 53, "Output",ExpressionUUID->"5cbb154f-1476-41df-a543-78ec1e4a014d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528852, 10175, 4171, 108, 683, "Input",ExpressionUUID->"da426738-df95-42c9-a9e1-937cf38ba3bd"],
Cell[533026, 10285, 522, 13, 37, "Print",ExpressionUUID->"d5ae6f19-907f-414d-84b0-c30623056603"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533585, 10303, 4159, 108, 660, "Input",ExpressionUUID->"d0b302bf-b510-4699-a866-73b904557e59"],
Cell[537747, 10413, 440, 12, 37, "Print",ExpressionUUID->"836dce4b-b034-4d80-8102-e20e90839083"]
}, Open  ]],
Cell[538202, 10428, 4593, 111, 252, "Input",ExpressionUUID->"5e7eab13-c60f-4226-88d9-2f391a15d4bc"],
Cell[CellGroupData[{
Cell[542820, 10543, 538, 15, 47, "Input",ExpressionUUID->"60e29e88-d2b2-4e03-a27e-08de15a17b1c"],
Cell[543361, 10560, 205, 4, 53, "Output",ExpressionUUID->"3c3e88f1-d542-447a-945e-634dbee3e9fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543603, 10569, 270, 6, 47, "Input",ExpressionUUID->"75228b3d-8735-4589-8478-9daa567eea4e"],
Cell[543876, 10577, 182, 3, 53, "Output",ExpressionUUID->"486b0164-ba9e-4c3d-9cdd-b0a958867cfd"]
}, Open  ]],
Cell[544073, 10583, 5065, 112, 714, "Input",ExpressionUUID->"d760433d-34c4-4f6e-8848-1da5f0d6382d"],
Cell[549141, 10697, 4869, 108, 714, "Input",ExpressionUUID->"d0bcc7bb-217c-4ab9-904d-506794fc1bd6"]
}
]
*)

